<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DataRetriever</name>
    </assembly>
    <members>
        <member name="T:Estat.Nsi.DataRetriever.Builders.ComplexSqlBuilder">
            <summary>
            Sql builder which includes all components and orders by dimensions
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Builders.SqlBuilderBase">
            <summary>
            The SQL builder base.
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Builders.SqlBuilderBase.CommaSeparator">
            <summary>
              THe comma separator followed by space.
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Builders.SqlBuilderBase._logger">
            <summary>
            The _logger
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.SqlBuilderBase.ConvertToMapping(System.Collections.Generic.ICollection{Estat.Sri.MappingStoreRetrieval.Engine.Mapping.IComponentMapping})">
            <summary>
            Convert <paramref name="componentMappings"/> to a ICollection(MappingEntity) collection
            </summary>
            <param name="componentMappings">
            The component mappings. 
            </param>
            <returns>
            a ICollection(MappingEntity) collection 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.SqlBuilderBase.GenerateFrom(Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.MappingSetEntity)">
            <summary>
            This method generates the FROM part of the query.
            </summary>
            <param name="mappingSet">
            The <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.MappingSetEntity"/> that contains the mappings for the Dataflow of the query 
            </param>
            <returns>
            A string containing the FROM part 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.SqlBuilderBase.GenerateOrderBy(Estat.Nsi.DataRetriever.Model.DataRetrievalInfo,System.Collections.Generic.IEnumerable{Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.ComponentEntity})">
            <summary>
            This method generates the ORDER BY part of the query for the specified <paramref name="orderComponents"/>
            </summary>
            <param name="info">
            The current Data retrieval state 
            </param>
            <param name="orderComponents">
            The order components. 
            </param>
            <returns>
            the ORDER BY part of the query for the specified <paramref name="orderComponents"/> 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.SqlBuilderBase.GenerateSelect(System.Boolean,System.Collections.Generic.IEnumerable{Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.MappingEntity})">
            <summary>
            This method generates the SELECT part of the query with the columns inside <paramref name="mappings"/>
            </summary>
            <param name="isDistinct">
            Whether the distinct keyword should be included 
            </param>
            <param name="mappings">
            The component mappings that contain the columns to be included at the select statement 
            </param>
            <returns>
            The SQL string.
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.SqlBuilderBase.GenerateWhere(Estat.Nsi.DataRetriever.Model.DataRetrievalInfo)">
            <summary>
            This method generates the WHERE part of the query
            </summary>
            <param name="info">
            The current data retrieval state 
            </param>
            <returns>
            The string containing the required SQL part. For example, "where (FREQ='M')" 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.SqlBuilderBase.GenerateComplexWhere(Estat.Nsi.DataRetriever.Model.DataRetrievalInfo)">
            <summary>
            This method generates the WHERE part of the complex query
            </summary>
            <param name="info">
            The current data retrieval state 
            </param>
            <returns>
            The string containing the required SQL part. For example, "where (FREQ='M')" 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.SqlBuilderBase.GetComponentValuesOperator(Org.Sdmxsource.Sdmx.Api.Model.Data.Query.Complex.IComplexDataQuerySelection)">
            <summary>
            Gets the component values operator.
            </summary>
            <param name="sel">The values selection of a component.</param>
            <returns>The operator to use for the values in <paramref name="sel"/></returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.SqlBuilderBase.GenerateComponentWhere(System.String,System.String,Estat.Nsi.DataRetriever.Model.DataRetrievalInfo)">
            <summary>
            Maps a component to one or more local columns and it's value to one or more local codes
            </summary> 
            <param name="id">
            The DSD Component identifier e.g. FREQ 
            </param>
            <param name="conditionValue">
            The DSD Component condition value (from the SDMX Query) 
            </param>
            <param name="info">
            The current Data Retrieval status 
            </param>
            <returns>
            An string containing the SQL query where condition 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.SqlBuilderBase.GenerateComponentWhere(System.String,Org.Sdmxsource.Sdmx.Api.Model.Data.Query.Complex.IComplexComponentValue,Estat.Nsi.DataRetriever.Model.DataRetrievalInfo)">
            <summary>
            Maps a component to one or more local columns and it's value to one or more local codes
            </summary>
            <param name="id">
            The DSD Component identifier e.g. FREQ 
            </param>
            <param name="conditionValue">
            The DSD Component condition value (from the SDMX Query) 
            </param>
            <param name="info">
            The current Data Retrieval status 
            </param>
            <returns>
            An string containing the SQL query where condition 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.SqlBuilderBase.GetSqlOrderedOperator(Org.Sdmxsource.Sdmx.Api.Constants.OrderedOperator)">
            <summary>
            Gets SQL operator from the given SDMX OrderedOperator
            </summary>
            <param name="ord">
            The OrderedOperator
            </param>
            <returns>
            An string containing the SQL query ordered operator 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.SqlBuilderBase.GetSqlTextSearchOperator(Org.Sdmxsource.Sdmx.Api.Constants.TextSearch)">
            <summary>
            Gets SQL operator from the given SDMX OrderedOperator
            </summary>
            <param name="ord">
            The OrderedOperator
            </param>
            <returns>
            An string containing the SQL query ordered operator 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.SqlBuilderBase.GenerateWhereClause(Org.Sdmxsource.Sdmx.Api.Model.Data.Query.IDataQuerySelectionGroup,Estat.Nsi.DataRetriever.Model.DataRetrievalInfo,System.String)">
            <summary>
            Generates SQL where clauses from <paramref name="time"/>
            </summary>
            <param name="time">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Data.Query.IDataQuerySelectionGroup"/> containing the time.
            </param>
            <param name="info">
            The current data retrieval state 
            </param>
            <param name="freqValue">
            The frequency value 
            </param>
            <returns>
            The string containing the time part of the WHERE in an SQL query. 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.SqlBuilderBase.GenerateWhereClause(Org.Sdmxsource.Sdmx.Api.Model.Data.Query.Complex.IComplexDataQuerySelectionGroup,Estat.Nsi.DataRetriever.Model.DataRetrievalInfo,System.String)">
            <summary>
            Generates SQL where clauses from <paramref name="time"/>
            </summary>
            <param name="time">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Data.Query.Complex.IComplexDataQuerySelectionGroup"/> 
            </param>
            <param name="info">
            The current data retrieval state 
            </param>
            <param name="freqValue">
            The frequency value 
            </param>
            <returns>
            The string containing the time part of the WHERE in an SQL query. 
            </returns>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Builders.ISqlBuilder">
            <summary>
            The sql builder interface.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.ISqlBuilder.GenerateSql(Estat.Nsi.DataRetriever.Model.DataRetrievalInfo)">
            <summary>
            This method generates the SQL SELECT statement for the dissemination database that will return the data for the incoming Query.
            </summary>
            <param name="info">
            The current state of the data retrieval which containts the current query and mapping set 
            </param>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Builders.ComplexSqlBuilder._instance">
            <summary>
              The singleton instance
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Builders.ComplexSqlBuilder._orderedComponentBuilder">
            <summary>
            The ordered component builder
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.ComplexSqlBuilder.#ctor">
            <summary>
              Prevents a default instance of the <see cref="T:Estat.Nsi.DataRetriever.Builders.ComplexSqlBuilder"/> class from being created.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.ComplexSqlBuilder.GenerateSql(Estat.Nsi.DataRetriever.Model.DataRetrievalInfo)">
            <summary>
            This method generates the SQL SELECT statement for the dissemination database that will return the data for the incoming Query.
            </summary>
            <param name="info">
            The current state of the data retrieval which containts the current query and mapping set 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.ComplexSqlBuilder.AppendCachedWhere(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries,Estat.Nsi.DataRetriever.Builders.SqlQuery)">
            <summary>
            Appends the cached where to <paramref name="sql"/> from <see cref="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries.SqlWhereCache"/> if it is not null or from <see cref="M:Estat.Nsi.DataRetriever.Builders.SqlBuilderBase.GenerateWhere(Estat.Nsi.DataRetriever.Model.DataRetrievalInfo)"/>
            </summary>
            <param name="info">
            The current DataRetrieval state 
            </param>
            <param name="sql">
            The SQL String buffer to 
            </param>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Builders.ComplexSqlBuilder.Instance">
            <summary>
              Gets the singleton instance
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Builders.DDbConnectionBuilder">
            <summary>
            Dissemination database connection builder
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Builders.IBuilder`2">
            <summary>
            A generic builder interface which builds a <typeparamref name="T"/> from a <typeparamref name="TE"/> using the <see cref="M:Estat.Nsi.DataRetriever.Builders.IBuilder`2.Build(`1)"/> method
            </summary>
            <typeparam name="T">
            The output type 
            </typeparam>
            <typeparam name="TE">
            The input type 
            </typeparam>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.IBuilder`2.Build(`1)">
            <summary>
            The method that builds a <typeparamref name="T"/> from a <typeparamref name="TE"/>
            </summary>
            <param name="info">
            The input as <typeparamref name="TE"/> . 
            </param>
            <returns>
            The output as <typeparamref name="T"/> 
            </returns>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Builders.DDbConnectionBuilder._instance">
            <summary>
              The singleton instance
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.DDbConnectionBuilder.#ctor">
            <summary>
              Prevents a default instance of the <see cref="T:Estat.Nsi.DataRetriever.Builders.DDbConnectionBuilder"/> class from being created.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.DDbConnectionBuilder.Build(Estat.Nsi.DataRetriever.Model.DataRetrievalInfo)">
            <summary>
            The method that builds a <see cref="T:System.Data.Common.DbConnection"/> from the specified <paramref name="info"/>
            </summary>
            <param name="info">
            The current Data retrieval state 
            </param>
            <returns>
            The <see cref="T:System.Data.Common.DbConnection"/> 
            </returns>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Builders.DDbConnectionBuilder.Instance">
            <summary>
              Gets the singleton instance of this class
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Builders.HeaderBuilder">
            <summary>
            Build a <see cref="!:HeaderBean"/>
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Builders.HeaderBuilder._instance">
            <summary>
              The sigleton instance
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.HeaderBuilder.#ctor">
            <summary>
              Prevents a default instance of the <see cref="T:Estat.Nsi.DataRetriever.Builders.HeaderBuilder"/> class from being created.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.HeaderBuilder.Build(Estat.Nsi.DataRetriever.Model.DataRetrievalInfo)">
            <summary>
            The method that builds a <see cref="!:HeaderBean"/> from the specified <paramref name="info"/>
            </summary>
            <param name="info">
            The current Data retrieval state 
            </param>
            <returns>
            The <see cref="!:HeaderBean"/> 
            </returns>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Builders.HeaderBuilder.Instance">
            <summary>
              Gets the singleton instance of this class
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Builders.SeriesDataSetSqlBuilder">
            <summary>
            This class is responsible for building SQL Queries for Time Series dataset attributes
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Builders.SeriesDataSetSqlBuilder._instance">
            <summary>
              The singleton instance
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.SeriesDataSetSqlBuilder.#ctor">
            <summary>
              Prevents a default instance of the <see cref="T:Estat.Nsi.DataRetriever.Builders.SeriesDataSetSqlBuilder"/> class from being created.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.SeriesDataSetSqlBuilder.GenerateSql(Estat.Nsi.DataRetriever.Model.DataRetrievalInfo)">
            <summary>
            This method generates the SQL SELECT statement for the dissemination database that will return the data for the incoming Query.
            </summary>
            <param name="info">
            The current state of the data retrieval which containts the current query and mapping set 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.SeriesDataSetSqlBuilder.GenerateDataSetSql(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries)">
            <summary>
            This method generates the SQL SELECT statement for the dissemination database that will return the data for the incoming Query.
            </summary>
            <param name="info">
            The current state of the data retrieval which containts the current query and mapping set 
            </param>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Builders.SeriesDataSetSqlBuilder.Instance">
            <summary>
              Gets the singleton instance
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Builders.SeriesGroupSqlBuilder">
            <summary>
            This class is responsible for building SQL Queries for Time Series groups.
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Builders.SeriesGroupSqlBuilder._instance">
            <summary>
              The singleton instance
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.SeriesGroupSqlBuilder.#ctor">
            <summary>
              Prevents a default instance of the <see cref="T:Estat.Nsi.DataRetriever.Builders.SeriesGroupSqlBuilder"/> class from being created.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.SeriesGroupSqlBuilder.GenerateSql(Estat.Nsi.DataRetriever.Model.DataRetrievalInfo)">
            <summary>
            This method generates the SQL SELECT statement for the dissemination database that will return the data for the incoming Query.
            </summary>
            <param name="info">
            The current state of the data retrieval which containts the current query and mapping set 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.SeriesGroupSqlBuilder.GenerateGroupSql(Estat.Nsi.DataRetriever.Model.GroupInformation,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries)">
            <summary>
            This method generates the SQL SELECT statement for the dissemination database that will return the data for the incoming Query.
            </summary>
            <param name="groupBean">
            The group Bean. 
            </param>
            <param name="info">
            The current data retrieval state 
            </param>
            <returns>
            The string containing the SQL query that needs to be executed on the dissemination database, in order to return the data required by the input query 
            </returns>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Builders.SeriesGroupSqlBuilder.Instance">
            <summary>
              Gets the singleton instance
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Builders.SeriesOrderedDimensionBuilder">
            <summary>
            The series ordered dimension builder.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.SeriesOrderedDimensionBuilder.Build(Estat.Nsi.DataRetriever.Model.DataRetrievalInfo)">
            <summary>
            Builds an ordered list of Components from the specified <paramref name="info"/>
            </summary>
            <param name="info">
            The DataRetriever state information.
            </param>
            <returns>
            The list of components.
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.SeriesOrderedDimensionBuilder.HandleOrdered(Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.DsdEntity,System.String,System.Collections.Generic.List{Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.ComponentEntity})">
            <summary>
            Handles the ordered.
            </summary>
            <param name="dsd">The DSD.</param>
            <param name="dimensionAtObservation">The dimension attribute observation.</param>
            <param name="orderComponents">The order components.</param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.SeriesOrderedDimensionBuilder.HandleFlat(System.Collections.Generic.List{Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.ComponentEntity},Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.DsdEntity)">
            <summary>
            Handles the flat.
            </summary>
            <param name="orderComponents">The order components.</param>
            <param name="dsd">The DSD.</param>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Builders.SeriesSqlBuilder">
            <summary>
            This class is responsible for building SQL Queries for Time Series.
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Builders.SeriesSqlBuilder._instance">
            <summary>
              The singleton instance
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Builders.SeriesSqlBuilder._orderedComponentBuilder">
            <summary>
            The ordered component builder
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.SeriesSqlBuilder.#ctor">
            <summary>
              Prevents a default instance of the <see cref="T:Estat.Nsi.DataRetriever.Builders.SeriesSqlBuilder"/> class from being created.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.SeriesSqlBuilder.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Estat.Nsi.DataRetriever.Builders.SeriesSqlBuilder"/> class.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.SeriesSqlBuilder.GenerateSql(Estat.Nsi.DataRetriever.Model.DataRetrievalInfo)">
            <summary>
            This method generates the SQL SELECT statement for the dissemination database that will return the data for the incoming Query.
            </summary>
            <param name="info">
            The current state of the data retrieval which containts the current query and mapping set 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.SeriesSqlBuilder.GenerateOrderByLocalColumns(Estat.Nsi.DataRetriever.Model.DataRetrievalInfo)">
            <summary>
            This method generates the ORDER BY part of the query
            </summary>
            <param name="info">
            The current data retrieval state 
            </param>
            <returns>
            The string containing the ORDER BY part of the query 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.SeriesSqlBuilder.AppendCachedWhere(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries,Estat.Nsi.DataRetriever.Builders.SqlQuery)">
            <summary>
            Appends the cached where to <paramref name="sql"/> from <see cref="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries.SqlWhereCache"/> if it is not null or from <see cref="M:Estat.Nsi.DataRetriever.Builders.SqlBuilderBase.GenerateWhere(Estat.Nsi.DataRetriever.Model.DataRetrievalInfo)"/>
            </summary>
            <param name="info">
            The current DataRetrieval state 
            </param>
            <param name="sql">
            The SQL String buffer to 
            </param>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Builders.SeriesSqlBuilder.Instance">
            <summary>
              Gets the singleton instance
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Builders.CrossSectionalSqlBuilder">
            <summary>
            SQL Builder for CrossSectional output
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Builders.CrossSectionalSqlBuilder._instance">
            <summary>
              The singleton instance
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Builders.CrossSectionalSqlBuilder._orderedComponentBuilder">
            <summary>
            The ordered component builder
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.CrossSectionalSqlBuilder.#ctor">
            <summary>
              Prevents a default instance of the <see cref="T:Estat.Nsi.DataRetriever.Builders.CrossSectionalSqlBuilder"/> class from being created.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.CrossSectionalSqlBuilder.GenerateSql(Estat.Nsi.DataRetriever.Model.DataRetrievalInfo)">
            <summary>
            This method generates the SQL SELECT statement for the dissemination database that will return the data for the incoming Query.
            </summary>
            <param name="info">
            The current state of the data retrieval which containts the current query and mapping set 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.CrossSectionalSqlBuilder.GenerateXSOrderByLocalColumns(Estat.Nsi.DataRetriever.Model.DataRetrievalInfo)">
            <summary>
            This method generates the ORDER BY part of the query
            </summary>
            <param name="info">
            The current data retrieval state 
            </param>
            <returns>
            The string containing the ORDER BY part of the query 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.CrossSectionalSqlBuilder.GetCrossSectionalFlags(Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.ComponentEntity)">
            <summary>
            Gets an array of the CrossSectional flags of <paramref name="component"/>
            </summary>
            <param name="component">
            The <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.ComponentEntity"/> 
            </param>
            <returns>
            an array of the CrossSectional flags of <paramref name="component"/> 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.CrossSectionalSqlBuilder.OnCrossSectionalComparison(Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.ComponentEntity,Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.ComponentEntity)">
            <summary>
            Compare two <paramref name="x"/> amd <paramref name="y"/> based on their Cross Sectional attachment level. The <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.ComponentEntity"/> attached to DataSet will be first, followed by Group, Section and finally observation.
            </summary>
            <param name="x">
            The first <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.ComponentEntity"/> to compare 
            </param>
            <param name="y">
            The second <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.ComponentEntity"/> to compare 
            </param>
            <returns>
            A signed integer that indicates the relative values of <paramref name="x"/> and <paramref name="y"/> , 1 if <paramref name="x"/> is attached to a lower level than <paramref name="y"/> , -1 if <paramref name="x"/> is attached to a higher level than <paramref name="y"/> , else 0. 
            </returns>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Builders.CrossSectionalSqlBuilder.Instance">
            <summary>
              Gets the singleton instance
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Builders.TabularSqlBuilder">
            <summary>
            Sql builder which includes all components and orders by dimensions
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Builders.TabularSqlBuilder._instance">
            <summary>
              The singleton instance
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Builders.TabularSqlBuilder._orderedComponentBuilder">
            <summary>
            The ordered component builder
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.TabularSqlBuilder.#ctor">
            <summary>
              Prevents a default instance of the <see cref="T:Estat.Nsi.DataRetriever.Builders.TabularSqlBuilder"/> class from being created.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Builders.TabularSqlBuilder.GenerateSql(Estat.Nsi.DataRetriever.Model.DataRetrievalInfo)">
            <summary>
            This method generates the SQL SELECT statement for the dissemination database that will return the data for the incoming Query.
            </summary>
            <param name="info">
            The current state of the data retrieval which containts the current query and mapping set 
            </param>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Builders.TabularSqlBuilder.Instance">
            <summary>
              Gets the singleton instance
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngineXsMeasureBuffered">
            <summary>
            The series data query engine XS measure.
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngineBase">
            <summary>
            The base class for DataQueryEngine used for Time series output
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Engines.DataQueryEngineBase`2">
            <summary>
            The base data query engine
            </summary>
            <typeparam name="TDataRetrievalInfo">The type of the data retrieval information.</typeparam>
            <typeparam name="TMappedValues">The type of the mapped values.</typeparam>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Engines.DataQueryEngineBase`2._dbConnectionBuilder">
            <summary>
              The Dissemination database connection builder instance
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.DataQueryEngineBase`2.HandleComponentMapping(System.Data.IDataReader,`1,System.Collections.Generic.IList{Estat.Sri.MappingStoreRetrieval.Engine.Mapping.IComponentMapping},`0)">
            <summary>
            Handles the component mapping except for the TimeDimension when TRANSCODING is used
            </summary>
            <param name="reader">The IDataReader to read data from DDB</param>
            <param name="componentValues">The collection to store the component values</param>
            <param name="componentMappings">Component mappings list</param>
            <param name="info">The data retrieval information.</param>
            <returns>
            True all components were mapped - false when an unmapped code was found
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.DataQueryEngineBase`2.CreateMappedValues(`0,System.Data.IDataReader)">
            <summary>
            Create and return a <see cref="T:Estat.Nsi.DataRetriever.Model.IMappedValues"/> implementation
            </summary>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <param name="reader">
            The <see cref="T:System.Data.IDataReader"/> to read data from DDB 
            </param>
            <returns>
            a <see cref="T:Estat.Nsi.DataRetriever.Model.IMappedValues"/> implementation 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.DataQueryEngineBase`2.ExecuteDbCommand(`0)">
            <summary>
            Execute the <see cref="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.SqlString"/>
            </summary>
            <param name="info">
            The current Data Retrieval state 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.DataQueryEngineBase`2.ReadDataMaxObsPerSeries(`0,System.Data.IDataReader,`1,System.Collections.Generic.IList{Estat.Sri.MappingStoreRetrieval.Engine.Mapping.IComponentMapping})">
            <summary>
            Reads the data with max observation per series.
            </summary>
            <param name="info">The info.</param>
            <param name="reader">The reader.</param>
            <param name="componentValues">The component values.</param>
            <param name="mappings">The mappings.</param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.DataQueryEngineBase`2.ReadData(`0,System.Data.IDataReader,`1,System.Collections.Generic.IList{Estat.Sri.MappingStoreRetrieval.Engine.Mapping.IComponentMapping})">
            <summary>
            Read data from DDB, perform mapping and transcoding and store it in the writer specified <see cref="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo"/>
            </summary>
            <param name="info">
              The current Data Retrieval state 
            </param>
            <param name="reader">
              The <see cref="T:System.Data.IDataReader"/> to read data from DDB 
            </param>
            <param name="componentValues">
              The component Values. 
            </param>
            <param name="mappings">
              The collection of component mappings 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.DataQueryEngineBase`2.ReadData(`0,System.Data.IDataReader,`1,System.Int32,System.Collections.Generic.IList{Estat.Sri.MappingStoreRetrieval.Engine.Mapping.IComponentMapping})">
            <summary>
            Read data from DDB up the specified number of observations, perform mapping and transcoding and store it in the writer specified <see cref="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo"/>
            </summary>
            <param name="info">
              The current Data Retrieval state 
            </param>
            <param name="reader">
              The <see cref="T:System.Data.IDataReader"/> to read data from DDB 
            </param>
            <param name="componentValues">
              The component Values. 
            </param>
            <param name="limit">
              The maximum number of observations, should be greater than 0 
            </param>
            <param name="mappings">
              The collection of component mappings 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.DataQueryEngineBase`2.RunAdditionalQueries(`0,System.Data.Common.DbConnection)">
            <summary>
            Execute any additional queries if overridden in a subclass. The base method does nothing
            </summary>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <param name="connection">
            The <see cref="T:System.Data.Common.DbConnection"/> to the DDB 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.DataQueryEngineBase`2.StoreResults(`1,`0)">
            <summary>
            Store the SDMX compliant data for each component entity in the store
            </summary>
            <param name="componentValues">
            The map between components and their values 
            </param>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <returns>
            The number of observations stored 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.DataQueryEngineBase`2.StoreResults(`1,System.Int32,`0)">
            <summary>
            Store the SDMX compliant data for each component entity in the store
            </summary>
            <param name="componentValues">
            The map between components and their values 
            </param>
            <param name="limit">
            The limit. 
            </param>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <returns>
            The number of observations stored 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.DataQueryEngineBase`2.HandleMappings(System.Data.IDataReader,`0,`1,System.Collections.Generic.IList{Estat.Sri.MappingStoreRetrieval.Engine.Mapping.IComponentMapping})">
            <summary>
            Handles the component mappings
            </summary>
            <param name="reader">
            The IDataReader to read data from DDB 
            </param>
            <param name="info">
            The info. 
            </param>
            <param name="componentValues">
            The collection to store the component values 
            </param>
            <param name="mappings">
            The collection of component mappings 
            </param>
            <returns>
            True all components were mapped - false when an unmapped code was found 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.DataQueryEngineBase`2.HandleTimeDimensionMapping(System.Data.IDataReader,`0,`1)">
            <summary>
            Handles the time dimension mapping when transcoding is used
            </summary>
            <param name="reader">
            The IDataReader to read data from DDB 
            </param>
            <param name="info">
            The info. 
            </param>
            <param name="mappedValues">
            The dictionary to store the time dimension value 
            </param>
            <returns>
            True all components were mapped - false when an unmapped code was found 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.DataQueryEngineBase`2.SetPCAxisLimit(`0,System.Data.IDbConnection)">
            <summary>
            Conditionally set the PCAxis data limit if the <paramref name="connection"/> is a <see cref="T:org.estat.PcAxis.PcAxisProvider.PcAxisConnection"/>
            </summary>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <param name="connection">
            The connection to DDB. 
            </param>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngineBase._logger">
            <summary>
            The _logger
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngineBase.WriteAttributes(System.Collections.Generic.IEnumerable{Estat.Nsi.DataRetriever.Model.ComponentValue},Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries)">
            <summary>
            Writes the attributes.
            </summary>
            <param name="attributes">The attributes.</param>
            <param name="info">The info.</param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngineBase.TryWriteDataSet(Estat.Nsi.DataRetriever.Model.MappedValues,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries)">
            <summary>
            Write the SDMX compliant values for dataset attached attributes to the <see cref="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries.SeriesWriter"/> if <see cref="P:Estat.Nsi.DataRetriever.Model.MappedValues.StartedDataSet"/> is true
            </summary>
            <param name="componentValues">
            The map between components and their values 
            </param>
            <param name="info">
            The current Data Retrieval state 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngineBase.WriteObservation(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries,System.String,System.String,System.Collections.Generic.IEnumerable{Estat.Nsi.DataRetriever.Model.ComponentValue})">
            <summary>
            Write observation element.
            </summary>
            <param name="info">The current Data Retrieval state</param>
            <param name="dimensionAtObsValue">The dimension at observation value.</param>
            <param name="value">The observation value</param>
            <param name="attributeObservationValues">The attribute observation values.</param>
            <returns>
            The number of observations stored. Is is always 1
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngineBase.WriteSeries(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries,Estat.Nsi.DataRetriever.Model.MappedValues)">
            <summary>
            Write a series element.
            </summary>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <param name="row">
            The map between components and their values 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngineBase.CreateMappedValues(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries,System.Data.IDataReader)">
            <summary>
            Create and return a <see cref="T:Estat.Nsi.DataRetriever.Model.IMappedValues"/> implementation
            </summary>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <param name="reader">
            The <see cref="T:System.Data.IDataReader"/> to read data from DDB 
            </param>
            <returns>
            a <see cref="T:Estat.Nsi.DataRetriever.Model.IMappedValues"/> implementation 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngineBase.RunAdditionalQueries(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries,System.Data.Common.DbConnection)">
            <summary>
            Execute any additional queries if overridden in a subclass. This override executes queries for DataSet and Groups
            </summary>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <param name="connection">
            The <see cref="T:System.Data.Common.DbConnection"/> to the DDB 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngineBase.StoreTimeSeriesGroupResults(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries,Estat.Nsi.DataRetriever.Model.GroupInformation,Estat.Nsi.DataRetriever.Model.MappedValues)">
            <summary>
            Store the SDMX compliant data for each component entity in the store
            </summary>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <param name="groupInformation">
            The current group related information 
            </param>
            <param name="row">
            The map between components and their values 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngineBase.ExecuteDataSetAttributeSqlQuery(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries,System.Data.Common.DbConnection)">
            <summary>
            This method executes an SQL query for retrieving the dataset attributes on the dissemination database and writes it to <see cref="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries.SeriesWriter"/>
            </summary>
            <param name="info">
            The current DataRetrieval state 
            </param>
            <param name="connection">
            The connection to the dissemination database 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngineBase.ProcessedKeySet(Estat.Nsi.DataRetriever.Model.GroupInformation,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries,Estat.Nsi.DataRetriever.Model.MappedValues)">
            <summary>
            Check if the specified <paramref name="targetGroup"/> contains the <paramref name="componentValues"/>
            </summary>
            <param name="targetGroup">
            The target group 
            </param>
            <param name="info">
            The current data retrieval state 
            </param>
            <param name="componentValues">
            The component values 
            </param>
            <returns>
            A value indicating whether the key is already processed or not. 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngineBase.WriteDataSetResults(Estat.Nsi.DataRetriever.Model.MappedValues,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries)">
            <summary>
            Write the SDMX compliant values for dataset attached attributes to the <see cref="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries.SeriesWriter"/>
            </summary>
            <param name="componentValues">
            The map between components and their values 
            </param>
            <param name="info">
            The current Data Retrieval state 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngineBase.ExecuteGroupSqlQuery(Estat.Nsi.DataRetriever.Model.GroupInformation,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries,System.Data.Common.DbConnection)">
            <summary>
            This method executes an SQL query for a group on the dissemination database and writes it to <see cref="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries.SeriesWriter"/> The SQL query is located inside <paramref name="groupInformation"/> at <see cref="P:Estat.Nsi.DataRetriever.Model.GroupInformation.SQL"/> . The group information is located in <paramref name="groupInformation"/>
            </summary>
            <param name="groupInformation">
            The current Time Series Group information 
            </param>
            <param name="info">
            The current DataRetrieval state 
            </param>
            <param name="connection">
            The connection to the dissemination database 
            </param>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Engines.IDataQueryEngine`1">
            <summary>
            The i data query engine.
            </summary>
            <typeparam name="T">The DR state type.</typeparam>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.IDataQueryEngine`1.ExecuteSqlQuery(`0)">
            <summary>
            This method executes an SQL query on the dissemination database and writes it to the writer in <see cref="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo"/> . The SQL query is located inside <paramref name="info"/> at <see cref="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.SqlString"/>
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="info"/>
              is null
            </exception>
            <exception cref="T:Estat.Nsi.DataRetriever.DataRetrieverException">
            <see cref="T:Estat.Nsi.DataRetriever.ErrorTypes"/>
            </exception>
            <param name="info">
            The current DataRetrieval state 
            </param>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngineXsMeasureBuffered._instance">
            <summary>
              The singleton instance
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngineXsMeasureBuffered.#ctor">
            <summary>
              Prevents a default instance of the <see cref="T:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngineXsMeasureBuffered"/> class from being created.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngineXsMeasureBuffered.ExecuteSqlQuery(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries)">
            <summary>
            This method executes an SQL query on the dissemination database and writes it to <see cref="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries.SeriesWriter"/> . The SQL query is located inside <paramref name="info"/> at <see cref="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.SqlString"/>
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="info"/>
              is null
            </exception>
            <exception cref="T:Estat.Nsi.DataRetriever.DataRetrieverException">
            <see cref="T:Estat.Nsi.DataRetriever.ErrorTypes"/>
            </exception>
            <param name="info">
            The current DataRetrieval state 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngineXsMeasureBuffered.ReadData(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries,System.Data.IDataReader,Estat.Nsi.DataRetriever.Model.MappedValues,System.Int32,System.Collections.Generic.IList{Estat.Sri.MappingStoreRetrieval.Engine.Mapping.IComponentMapping})">
            <summary>
            Read data from DDB up the specified number of observations, perform mapping and transcoding and store it in the writer specified <see cref="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo"/>
            </summary>
            <param name="info">
              The current Data Retrieval state 
            </param>
            <param name="reader">
              The <see cref="T:System.Data.IDataReader"/> to read data from DDB 
            </param>
            <param name="componentValues">
              The component Values. 
            </param>
            <param name="limit">
              The maximum number of observations, should be greater than 0 
            </param>
            <param name="mappings">
              The collection of component mappings 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngineXsMeasureBuffered.ReadData(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries,System.Data.IDataReader,Estat.Nsi.DataRetriever.Model.MappedValues,System.Collections.Generic.IList{Estat.Sri.MappingStoreRetrieval.Engine.Mapping.IComponentMapping})">
            <summary>
            Read data from DDB, perform mapping and transcoding and store it in the writer specified <see cref="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo"/>
            </summary>
            <param name="info">
              The current Data Retrieval state 
            </param>
            <param name="reader">
              The <see cref="T:System.Data.IDataReader"/> to read data from DDB 
            </param>
            <param name="componentValues">
              The component Values. 
            </param>
            <param name="mappings">
              The collection of component mappings 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngineXsMeasureBuffered.StoreResults(Estat.Nsi.DataRetriever.Model.MappedValues,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries)">
            <summary>
            Store the SDMX compliant data for each component entity in the store
            </summary>
            <param name="componentValues">
            The map between components and their values 
            </param>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <returns>
            The number of observations stored 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngineXsMeasureBuffered.StoreResults(Estat.Nsi.DataRetriever.Model.MappedValues,System.Int32,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries)">
            <summary>
            Store the SDMX compliant data for each component entity in the store
            </summary>
            <param name="componentValues">
            The map between components and their values 
            </param>
            <param name="limit">
            The limit. 
            </param>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <returns>
            The number of observations stored 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngineXsMeasureBuffered.StoreTimeSeriesGroupResults(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries,Estat.Nsi.DataRetriever.Model.GroupInformation,Estat.Nsi.DataRetriever.Model.MappedValues)">
            <summary>
            Store the SDMX compliant data for each component entity in the store
            </summary>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <param name="groupInformation">
            The current group related information 
            </param>
            <param name="row">
            The map between components and their values 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngineXsMeasureBuffered.WriteXsMeasureCache(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.ComponentEntity,Estat.Nsi.DataRetriever.Model.XsMeasureCache}})">
            <summary>
            Write the cached <paramref name="xsMeasures"/> .
            </summary>
            <param name="info">
            The current data retrieval info 
            </param>
            <param name="xsMeasures">
            The XS measures. 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngineXsMeasureBuffered.WriteXsMeasures(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries,System.Int32,Estat.Nsi.DataRetriever.Model.MappedValues)">
            <summary>
            Store the SDMX compliant data for each component entity in the store
            </summary>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <param name="maxMeasures">
            The max number of measures to write 
            </param>
            <param name="row">
            The map between components and their values 
            </param>
            <returns>
            The number of observations stored 
            </returns>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngineXsMeasureBuffered.Instance">
            <summary>
              Gets the singleton instance
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Engines.CrossSectionalDataQueryEngineBase">
            <summary>
            The base class for DataQueryEngine used for CrossSectional output
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.CrossSectionalDataQueryEngineBase.ExecuteSqlQuery(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoXS)">
            <summary>
            This method executes an SQL query on the dissemination database and writes it to <see cref="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoXS.XSWriter"/> . The SQL query is located inside <paramref name="info"/> at <see cref="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.SqlString"/>
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="info"/>
              is null
            </exception>
            <exception cref="T:Estat.Nsi.DataRetriever.DataRetrieverException">
            <see cref="T:Estat.Nsi.DataRetriever.ErrorTypes"/>
            </exception>
            <param name="info">
            The current DataRetrieval state 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.CrossSectionalDataQueryEngineBase.WriteAttributes(System.Collections.Generic.IEnumerable{Estat.Nsi.DataRetriever.Model.ComponentValue},Estat.Nsi.DataRetriever.Model.DataRetrievalInfoXS)">
            <summary>
            Writes the attributes.
            </summary>
            <param name="attributes">The attributes.</param>
            <param name="info">The info.</param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.CrossSectionalDataQueryEngineBase.WriteDataSet(Estat.Nsi.DataRetriever.Model.MappedXsValues,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoXS)">
            <summary>
            Conditionally write the dataset values.
            </summary>
            <param name="row">
            The map between components and their values 
            </param>
            <param name="info">
            The current Data Retrieval state 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.CrossSectionalDataQueryEngineBase.WriteGroup(Estat.Nsi.DataRetriever.Model.MappedXsValues,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoXS)">
            <summary>
            Write the CrossSectional Group with the dimensions and attributes found in <paramref name="row"/>
            </summary>
            <param name="row">
            The map between components and their values 
            </param>
            <param name="info">
            The current Data Retrieval state 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.CrossSectionalDataQueryEngineBase.WriteObservation(Estat.Nsi.DataRetriever.Model.MappedXsValues,System.String,System.String,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoXS)">
            <summary>
            Write observation element. The time, observation and attribute values are in <paramref name="row"/>
            </summary>
            <param name="row">
            The map between components and their values 
            </param>
            <param name="tag">
            The element tag. The Primary or XS measure concept ref. 
            </param>
            <param name="value">
            The observation value 
            </param>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <returns>
            The number of observations stored. Is is always 1 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.CrossSectionalDataQueryEngineBase.WriteSection(Estat.Nsi.DataRetriever.Model.MappedXsValues,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoXS)">
            <summary>
            Write the CrossSectional Group with the dimensions and attributes found in <paramref name="row"/>
            </summary>
            <param name="row">
            The map between components and their values 
            </param>
            <param name="info">
            The current Data Retrieval state 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.CrossSectionalDataQueryEngineBase.CreateMappedValues(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoXS,System.Data.IDataReader)">
            <summary>
            Create and return a <see cref="T:Estat.Nsi.DataRetriever.Model.IMappedValues"/> implementation
            </summary>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <param name="reader">
            The <see cref="T:System.Data.IDataReader"/> to read data from DDB 
            </param>
            <returns>
            a <see cref="T:Estat.Nsi.DataRetriever.Model.IMappedValues"/> implementation 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.CrossSectionalDataQueryEngineBase.StoreResults(Estat.Nsi.DataRetriever.Model.MappedXsValues,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoXS)">
            <summary>
            Store the SDMX compliant data for each component entity in the store
            </summary>
            <param name="componentValues">
            The map between components and their values 
            </param>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <returns>
            The number of observations stored 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.CrossSectionalDataQueryEngineBase.StoreResults(Estat.Nsi.DataRetriever.Model.MappedXsValues,System.Int32,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoXS)">
            <summary>
            Store the SDMX compliant data for each component entity in the store
            </summary>
            <param name="componentValues">
            The map between components and their values 
            </param>
            <param name="limit">
            The limit. 
            </param>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <returns>
            The number of observations stored 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.CrossSectionalDataQueryEngineBase.WriteObservation(Estat.Nsi.DataRetriever.Model.MappedXsValues,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoXS)">
            <summary>
            Write a primary measure observation
            </summary>
            <param name="row">
            The map between components and their values 
            </param>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <returns>
            The number of observations stored. 
            </returns>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Engines.CrossSectionalMeasuresDataQueryEngine">
            <summary>
            Dissemination Data Query engine for XS DSD with XS Measures and Measure Dimension/Primary Measure mapped.
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Engines.CrossSectionalMeasuresDataQueryEngine._instance">
            <summary>
              The singleton instance
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.CrossSectionalMeasuresDataQueryEngine.#ctor">
            <summary>
              Prevents a default instance of the <see cref="T:Estat.Nsi.DataRetriever.Engines.CrossSectionalMeasuresDataQueryEngine"/> class from being created.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.CrossSectionalMeasuresDataQueryEngine.WriteObservation(Estat.Nsi.DataRetriever.Model.MappedXsValues,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoXS)">
            <summary>
            Write a primary measure observation
            </summary>
            <param name="row">
            The map between components and their values 
            </param>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <returns>
            The number of observations stored. 
            </returns>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Engines.CrossSectionalMeasuresDataQueryEngine.Instance">
            <summary>
              Gets the singleton instance
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Engines.CrossSectionalMeasuresMappedDataQueryEngine">
            <summary>
            The cross sectional measures mapped data query engine.
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Engines.CrossSectionalMeasuresMappedDataQueryEngine._instance">
            <summary>
              The singleton instance
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.CrossSectionalMeasuresMappedDataQueryEngine.#ctor">
            <summary>
              Prevents a default instance of the <see cref="T:Estat.Nsi.DataRetriever.Engines.CrossSectionalMeasuresMappedDataQueryEngine"/> class from being created.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.CrossSectionalMeasuresMappedDataQueryEngine.ExecuteSqlQuery(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoXS)">
            <summary>
            This method executes an SQL query on the dissemination database and writes it to <see cref="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoXS.XSWriter"/> . The SQL query is located inside <paramref name="info"/> at <see cref="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.SqlString"/>
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="info"/>
              is null
            </exception>
            <exception cref="T:Estat.Nsi.DataRetriever.DataRetrieverException">
            <see cref="T:Estat.Nsi.DataRetriever.ErrorTypes"/>
            </exception>
            <param name="info">
            The current DataRetrieval state 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.CrossSectionalMeasuresMappedDataQueryEngine.StoreResults(Estat.Nsi.DataRetriever.Model.MappedXsValues,System.Int32,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoXS)">
            <summary>
            Store the SDMX compliant data for each component entity in the store
            </summary>
            <param name="componentValues">
            The map between components and their values 
            </param>
            <param name="limit">
            The limit. 
            </param>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <returns>
            The number of observations stored 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.CrossSectionalMeasuresMappedDataQueryEngine.WriteObservation(Estat.Nsi.DataRetriever.Model.MappedXsValues,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoXS)">
            <summary>
            Write a primary measure observation
            </summary>
            <param name="row">
            The map between components and their values 
            </param>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <returns>
            The number of observations stored. 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.CrossSectionalMeasuresMappedDataQueryEngine.WriteObservation(Estat.Nsi.DataRetriever.Model.MappedXsValues,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoXS,System.Int32)">
            <summary>
            Write a primary measure observation
            </summary>
            <param name="row">
            The map between components and their values 
            </param>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <param name="limit">
            The limit. 
            </param>
            <returns>
            The number of observations stored. 
            </returns>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Engines.CrossSectionalMeasuresMappedDataQueryEngine.Instance">
            <summary>
              Gets the singleton instance
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Engines.CrossSectionalPrimaryDataQueryEngine">
            <summary>
            Dissemination Data Query engine for XS DSD without XS Measures.
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Engines.CrossSectionalPrimaryDataQueryEngine._instance">
            <summary>
              The singleton instance
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.CrossSectionalPrimaryDataQueryEngine.#ctor">
            <summary>
              Prevents a default instance of the <see cref="T:Estat.Nsi.DataRetriever.Engines.CrossSectionalPrimaryDataQueryEngine"/> class from being created.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.CrossSectionalPrimaryDataQueryEngine.WriteObservation(Estat.Nsi.DataRetriever.Model.MappedXsValues,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoXS)">
            <summary>
            Write a primary measure observation
            </summary>
            <param name="row">
            The map between components and their values 
            </param>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <returns>
            The number of observations stored. 
            </returns>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Engines.CrossSectionalPrimaryDataQueryEngine.Instance">
            <summary>
              Gets the singleton instance
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngine">
            <summary>
            The data query engine.
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngine._instance">
            <summary>
              The singleton instance
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngine.#ctor">
            <summary>
              Prevents a default instance of the <see cref="T:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngine"/> class from being created.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngine.ExecuteSqlQuery(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries)">
            <summary>
            This method executes an SQL query on the dissemination database and writes it to <see cref="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries.SeriesWriter"/> . The SQL query is located inside <paramref name="info"/> at <see cref="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.SqlString"/>
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="info"/>
              is null
            </exception>
            <exception cref="T:Estat.Nsi.DataRetriever.DataRetrieverException">
            <see cref="T:Estat.Nsi.DataRetriever.ErrorTypes"/>
            </exception>
            <param name="info">
            The current DataRetrieval state 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngine.ReadDataMaxObsPerSeries(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries,System.Data.IDataReader,Estat.Nsi.DataRetriever.Model.MappedValues,System.Collections.Generic.IList{Estat.Sri.MappingStoreRetrieval.Engine.Mapping.IComponentMapping})">
            <summary>
            Reads the data with max observation per series.
            </summary>
            <param name="info">The info.</param>
            <param name="reader">The reader.</param>
            <param name="componentValues">The component values.</param>
            <param name="mappings">The mappings.</param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngine.StoreResultsMaxObs(Estat.Nsi.DataRetriever.Model.MappedValues,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries,Estat.Nsi.DataRetriever.Model.MaxObsStatus)">
            <summary>
            Store the SDMX compliant data for each component entity in the store.
            </summary>
            <param name="componentValues">The map between components and their values</param>
            <param name="info">The current Data Retrieval state</param>
            <param name="maxObsStatus">The max observation status.</param>
            <returns>
            The number of observations stored
            </returns>
            <exception cref="T:System.NotImplementedException">This method needs to be implemented.</exception>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngine.StoreResults(Estat.Nsi.DataRetriever.Model.MappedValues,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries)">
            <summary>
            Store the SDMX compliant data for each component entity in the store
            </summary>
            <param name="componentValues">
            The map between components and their values 
            </param>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <returns>
            The number of observations stored 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngine.StoreResults(Estat.Nsi.DataRetriever.Model.MappedValues,System.Int32,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries)">
            <summary>
            Store the SDMX compliant data for each component entity in the store
            </summary>
            <param name="componentValues">
            The map between components and their values 
            </param>
            <param name="limit">
            The limit. 
            </param>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <returns>
            The number of observations stored 
            </returns>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Engines.SeriesDataQueryEngine.Instance">
            <summary>
              Gets the singleton instance
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.DataRetrieverHelper">
            <summary>
            A helper class with static methods
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.DataRetrieverHelper.GetDataflowFromQuery(Org.Sdmxsource.Sdmx.Api.Model.Data.Query.IDataQuery)">
            <summary>
            This method retrieves the <see cref="!:Estat.Sdmx.Model.Query.DataFlowBean"/> from a <see cref="!:Estat.Sdmx.Model.Query.QueryBean"/>
            </summary>
            <param name="query">
            The <see cref="!:Estat.Sdmx.Model.Query.QueryBean"/> conaining the <see cref="!:Estat.Sdmx.Model.Query.DataFlowBean"/> 
            </param>
            <exception cref="T:Estat.Nsi.DataRetriever.DataRetrieverException">
            See the
              <see cref="!:ErrorTypes.QUERY_PARSING_ERROR"/>
            </exception>
            <returns>
            The <see cref="!:Estat.Sdmx.Model.Query.DataFlowBean"/> 
            </returns>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Engines.TabularDataOriginalQueryEngine">
            <summary>
            The tabular data original query engine.
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Engines.TabularDataQueryEngineBase">
            <summary>
            The base class for Tabular output <see cref="T:Estat.Nsi.DataRetriever.Engines.IDataQueryEngine`1"/> implementations.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.TabularDataQueryEngineBase.ReadData(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular,System.Data.IDataReader,Estat.Nsi.DataRetriever.Model.MappedValuesFlat,System.Collections.Generic.IList{Estat.Sri.MappingStoreRetrieval.Engine.Mapping.IComponentMapping})">
            <summary>
            Read data from DDB, perform mapping and transcoding and store it in the writer specified <see cref="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo"/>
            </summary>
            <param name="info">
              The current Data Retrieval state 
            </param>
            <param name="reader">
              The <see cref="T:System.Data.IDataReader"/> to read data from DDB 
            </param>
            <param name="componentValues">
              The component Values. 
            </param>
            <param name="mappings">
              The collection of component mappings 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.TabularDataQueryEngineBase.ReadData(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular,System.Data.IDataReader,Estat.Nsi.DataRetriever.Model.MappedValuesFlat,System.Int32,System.Collections.Generic.IList{Estat.Sri.MappingStoreRetrieval.Engine.Mapping.IComponentMapping})">
            <summary>
            Read data from DDB up the specified number of observations, perform mapping and transcoding and store it in the writer specified <see cref="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo"/>
            </summary>
            <param name="info">
              The current Data Retrieval state 
            </param>
            <param name="reader">
              The <see cref="T:System.Data.IDataReader"/> to read data from DDB 
            </param>
            <param name="componentValues">
              The component Values. 
            </param>
            <param name="limit">
              The maximum number of observations, should be greater than 0 
            </param>
            <param name="mappings">
              The collection of component mappings 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.TabularDataQueryEngineBase.WriteColumns(Estat.Nsi.DataRetriever.Model.MappedValuesFlat,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular)">
            <summary>
            Write the columns
            </summary>
            <param name="mappedValues">
            The mapped components and their values 
            </param>
            <param name="tabularInfo">
            The current data retrieval state 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.TabularDataQueryEngineBase.WriteData(Estat.Nsi.DataRetriever.Model.MappedValuesFlat,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular)">
            <summary>
            Write data to <see cref="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular.TabularWriter"/> from the specified <paramref name="tabularInfo"/>
            </summary>
            <param name="mappedValues">
            The map between components and their values 
            </param>
            <param name="tabularInfo">
            The current Data Retrieval state 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.TabularDataQueryEngineBase.WriteColumns(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular,Estat.Nsi.DataRetriever.Model.MappedValuesFlat,System.Collections.Generic.ICollection{Estat.Sri.MappingStoreRetrieval.Engine.Mapping.IComponentMapping})">
            <summary>
            Write the columns
            </summary>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <param name="componentValues">
            The component Values. 
            </param>
            <param name="mappings">
            The collection of component mappings 
            </param>
            <exception cref="T:System.ArgumentException">
            <paramref name="info"/>
              not
              <see cref="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular"/>
              type
              -or-
              <paramref name="componentValues"/>
              not
              <see cref="T:Estat.Nsi.DataRetriever.Model.MappedValuesFlat"/>
              type
            </exception>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Engines.TabularDataOriginalQueryEngine._instance">
            <summary>
              The singleton instance
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.TabularDataOriginalQueryEngine.#ctor">
            <summary>
              Prevents a default instance of the <see cref="T:Estat.Nsi.DataRetriever.Engines.TabularDataOriginalQueryEngine"/> class from being created.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.TabularDataOriginalQueryEngine.ExecuteSqlQuery(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular)">
            <summary>
            This method executes an SQL query on the dissemination database and writes it to the writer in <see cref="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo"/> . The SQL query is located inside <paramref name="info"/> at <see cref="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.SqlString"/>
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="info"/>
              is null
            </exception>
            <exception cref="T:Estat.Nsi.DataRetriever.DataRetrieverException">
            <see cref="T:Estat.Nsi.DataRetriever.ErrorTypes"/>
            </exception>
            <param name="info">
            The current DataRetrieval state 
            </param>
            <exception cref="T:System.ArgumentException">
            <paramref name="info"/>
              not
              <see cref="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular"/>
              type
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="info"/>
              not
              <see cref="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular"/>
              type
            </exception>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.TabularDataOriginalQueryEngine.CreateMappedValues(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular,System.Data.IDataReader)">
            <summary>
            Create and return a <see cref="T:Estat.Nsi.DataRetriever.Model.IMappedValues"/> implementation
            </summary>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <param name="reader">
            The <see cref="T:System.Data.IDataReader"/> to read data from DDB 
            </param>
            <returns>
            a <see cref="T:Estat.Nsi.DataRetriever.Model.IMappedValues"/> implementation 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.TabularDataOriginalQueryEngine.StoreResults(Estat.Nsi.DataRetriever.Model.MappedValuesFlat,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular)">
            <summary>
            Store the SDMX compliant data for each component entity in the store
            </summary>
            <param name="componentValues">
            The map between components and their values 
            </param>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <returns>
            The number of observations stored 
            </returns>
            <exception cref="T:System.ArgumentException">
            <paramref name="info"/>
              not
              <see cref="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular"/>
              type
              -or-
              <paramref name="componentValues"/>
              not
              <see cref="T:Estat.Nsi.DataRetriever.Model.MappedValuesFlat"/>
              type
            </exception>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.TabularDataOriginalQueryEngine.StoreResults(Estat.Nsi.DataRetriever.Model.MappedValuesFlat,System.Int32,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular)">
            <summary>
            Store the SDMX compliant data for each component entity in the store
            </summary>
            <param name="componentValues">
            The map between components and their values 
            </param>
            <param name="limit">
            The limit. 
            </param>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <returns>
            The number of observations stored 
            </returns>
            <exception cref="T:System.ArgumentException">
            <paramref name="info"/>
              not
              <see cref="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular"/>
              type
              -or-
              <paramref name="componentValues"/>
              not
              <see cref="T:Estat.Nsi.DataRetriever.Model.MappedValuesFlat"/>
              type
            </exception>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.TabularDataOriginalQueryEngine.WriteColumns(Estat.Nsi.DataRetriever.Model.MappedValuesFlat,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular)">
            <summary>
            Write the columns
            </summary>
            <param name="mappedValues">
            The mapped components and their values 
            </param>
            <param name="tabularInfo">
            The current data retrieval state 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.TabularDataOriginalQueryEngine.WriteData(Estat.Nsi.DataRetriever.Model.MappedValuesFlat,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular)">
            <summary>
            Write data to <see cref="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular.TabularWriter"/> from the specified <paramref name="tabularInfo"/>
            </summary>
            <param name="mappedValues">
            The map between components and their values 
            </param>
            <param name="tabularInfo">
            The current Data Retrieval state 
            </param>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Engines.TabularDataOriginalQueryEngine.Instance">
            <summary>
              Gets the singleton instance
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Engines.TabularDataQueryEngine">
            <summary>
            Dissemination Data Query engine for tabular output.
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Engines.TabularDataQueryEngine._instance">
            <summary>
              The singleton instance
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.TabularDataQueryEngine.#ctor">
            <summary>
              Prevents a default instance of the <see cref="T:Estat.Nsi.DataRetriever.Engines.TabularDataQueryEngine"/> class from being created.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.TabularDataQueryEngine.ExecuteSqlQuery(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular)">
            <summary>
            This method executes an SQL query on the dissemination database and writes it to the writer in <see cref="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo"/> . The SQL query is located inside <paramref name="info"/> at <see cref="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.SqlString"/>
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="info"/>
              is null
            </exception>
            <exception cref="T:Estat.Nsi.DataRetriever.DataRetrieverException">
            <see cref="T:Estat.Nsi.DataRetriever.ErrorTypes"/>
            </exception>
            <param name="info">
            The current DataRetrieval state 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.TabularDataQueryEngine.CreateMappedValues(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular,System.Data.IDataReader)">
            <summary>
            Create and return a <see cref="T:Estat.Nsi.DataRetriever.Model.IMappedValues"/> implementation
            </summary>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <param name="reader">
            The <see cref="T:System.Data.IDataReader"/> to read data from DDB 
            </param>
            <returns>
            a <see cref="T:Estat.Nsi.DataRetriever.Model.IMappedValues"/> implementation 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.TabularDataQueryEngine.StoreResults(Estat.Nsi.DataRetriever.Model.MappedValuesFlat,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular)">
            <summary>
            Store the SDMX compliant data for each component entity in the store
            </summary>
            <param name="componentValues">
            The map between components and their values 
            </param>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <returns>
            The number of observations stored 
            </returns>
            <exception cref="T:System.ArgumentException">
            <paramref name="info"/>
              not
              <see cref="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular"/>
              type
              -or-
              <paramref name="componentValues"/>
              not
              <see cref="T:Estat.Nsi.DataRetriever.Model.MappedValuesFlat"/>
              type
            </exception>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Engines.TabularDataQueryEngine.StoreResults(Estat.Nsi.DataRetriever.Model.MappedValuesFlat,System.Int32,Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular)">
            <summary>
            Store the SDMX compliant data for each component entity in the store
            </summary>
            <param name="componentValues">
            The map between components and their values 
            </param>
            <param name="limit">
            The limit. 
            </param>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <returns>
            The number of observations stored 
            </returns>
            <exception cref="T:System.ArgumentException">
            <paramref name="info"/>
              not
              <see cref="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular"/>
              type
              -or-
              <paramref name="componentValues"/>
              not
              <see cref="T:Estat.Nsi.DataRetriever.Model.MappedValuesFlat"/>
              type
            </exception>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Engines.TabularDataQueryEngine.Instance">
            <summary>
              Gets the singleton instance
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.DataRetrieverCore">
            <summary>
            This is the main class of the "Data Retriever" building block as identified in Eurostat's "SDMX Reference Architecture". It can be used with any "Mapping Store" complying with the database design specified there.
            </summary>
            <example>
            Code example for using Data Retriever and the Stream CompactWriter from SDMX IO in C# 
            <code source="ReUsingExamples\DataRetriever\ReUsingDataRetriever.cs" lang="cs">
            </code>
            </example>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.IDataRetrieverTabular">
            <summary>
            An interface for retrieving data and storing it in a tabular format using a <see cref="T:Estat.Sri.TabularWriters.Engine.ITabularWriter"/>
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.IDataRetrieverTabular.ExecuteSqlQuery(Org.Sdmxsource.Sdmx.Api.Model.Data.Query.IDataQuery,System.String,System.Int32,Estat.Sri.TabularWriters.Engine.ITabularWriter)">
            <summary>
            This method executes an SQL query on the dissemination database and writes the output to <paramref name="writer"/>
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="disseminationDbSql"/>
              is null
              -or-
              <paramref name="writer"/>
              is null
              -or-
              <paramref name="query"/>
              is null
            </exception>
            <exception cref="T:Estat.Nsi.DataRetriever.DataRetrieverException">
            <see cref="T:Estat.Nsi.DataRetriever.ErrorTypes"/>
            </exception>
            <param name="query">
            The query bean for which data will be requested. 
            </param>
            <param name="disseminationDbSql">
            The SQL statement to be executed 
            </param>
            <param name="limit">
            Set to a positive integer to limit the number of observations returned, else set to 0 to return all observations 
            </param>
            <param name="writer">
            The <see cref="T:Estat.Sri.TabularWriters.Engine.ITabularWriter"/> (e.g. CSV, SQLite e.t.c.) writer 
            </param>
            <example>
            An example using this method in C# 
             <code source="ReUsingExamples\DataRetriever\ReUsingDataRetrieverManySteps.cs" lang="cs"/>
            </example>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.IDataRetrieverTabular.GenerateSqlQuery(Org.Sdmxsource.Sdmx.Api.Model.Data.Query.IDataQuery)">
            <summary>
            This method generates the SQL SELECT statement for the dissemination database that will return the data for the incoming Query.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="query"/>
              is null
            </exception>
            <exception cref="T:Estat.Nsi.DataRetriever.DataRetrieverException">
            <see cref="T:Estat.Nsi.DataRetriever.ErrorTypes"/>
            </exception>
            <param name="query">
            The <see cref="!:Estat.Sdmx.Model.Query.QueryBean"/> modeling an SDMX-ML Query 
            </param>
            <returns>
            The generated sql query. 
            </returns>
            <example>
            An example using this method in C#
            <code source="ReUsingExamples\DataRetriever\ReUsingDataRetrieverManySteps.cs" lang="cs"/>
            </example>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.IDataRetrieverTabular.RetrieveData(Org.Sdmxsource.Sdmx.Api.Model.Data.Query.IDataQuery,Estat.Sri.TabularWriters.Engine.ITabularWriter,System.Boolean)">
            <summary>
            Retrieve data from a DDB and write it to the specified <paramref name="writer"/> This is the main public method of the DataRetriever class. It is called with a populated QueryBean (containing essentially an SDMX-ML Query) and a database Connection to a "Mapping Store" database. This method is responsible for: 
            <list type="bullet">
            <item>
            Retrieving the <see cref="!:MappingSetEntity"/> (the class containing the performed mappings), 
            according to the provided Dataflow ID, from the "Mapping Store". Mapping Sets are defined on a Dataflow basis. 
            Thus, this method checks the input QueryBean for the Dataflow that data are requested and fetches the appropriate
            <see cref="!:MappingSetEntity"/>. If no <see cref="!:MappingSetEntity"/> exists, an exception (<see cref="T:Estat.Nsi.DataRetriever.DataRetrieverException"/>) is thrown.                                                                                                                                                                                                                                                                                                                           ) is thrown.
            </item>
            <item>
            Calling the method generating the appropriate SQL for the dissemination database.
            </item>
            <item>
            Calling the method that executes the generated SQL and uses the <paramref name="writer"/>
            to write the output.
            </item>
            </list>
            <note type="note">
            The "Data Retriever" expects exactly one Dataflow clause under the DataWhere clause, exactly one
            DataFlowBean within the DataWhereBean (which in turn resides inside the incoming QueryBean).
            </note>
            </summary>
            <exception cref="T:Estat.Nsi.DataRetriever.DataRetrieverException">
            See the
              <see cref="T:Estat.Nsi.DataRetriever.ErrorTypes"/>
              for more details
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="query"/>
              is null
              -or-
              <paramref name="writer"/>
              is null
            </exception>
            <param name="query">
            The query bean for which data will be requested 
            </param>
            <param name="writer">
            The <see cref="T:Estat.Sri.TabularWriters.Engine.ITabularWriter"/> (e.g. CSV, SQLite e.t.c.) writer 
            </param>
            <param name="showOriginal">
            A value indicating whether to show original (DDB) values 
            </param>
            <example>
            An example using this method in C# (Without original columns) 
            <code source="ReUsingExamples\DataRetriever\ReUsingDataRetrieverTabular.cs" lang="cs"/>
            An example using this method in C# (With original columns) 
            <code source="ReUsingExamples\DataRetriever\ReUsingDataRetrieverTabularWithOriginal.cs" lang="cs"/>
            </example>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.DataRetrieverCore._headerBuilder">
            <summary>
              The Header builder
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.DataRetrieverCore._sqlBuilder">
            <summary>
              The SqlBuilder instance. This is responsible for building/generating the various SQL queries for DDB for TimeSeries data
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.DataRetrieverCore._sqlBuilderTabular">
            <summary>
              The SqlBuilder instance. This is responsible for building/generating the various SQL queries for DDB for CrossSectional data
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.DataRetrieverCore._sqlXsBuilder">
            <summary>
              The SqlBuilder instance. This is responsible for building/generating the various SQL queries for DDB for CrossSectional data
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.DataRetrieverCore._sqlComplexBuilder">
            <summary>
              The SqlBuilder instance. This is responsible for building/generating the various SQL queries for DDB for CrossSectional data
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.DataRetrieverCore._connectionStringSettings">
            <summary>
              The <see cref="T:System.Configuration.ConnectionStringSettings"/> for Mapping store
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.DataRetrieverCore._defaultHeader">
            <summary>
              This <see cref="!:Estat.Sdmx.Model.Base.HeaderBean"/> stores the default header
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.DataRetrieverCore._sdmxSchemaVersion">
            <summary>
            The SDMX schema version. This controls the behavior of <see cref="T:Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.Data.ISdmxDataRetrievalWithWriter"/> when no results are found. If set to <see cref="F:Org.Sdmxsource.Sdmx.Api.Constants.SdmxSchemaEnumType.VersionTwoPointOne"/> DR will throw a <see cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNoResultsException"/>. Otherwise a empty dataset will be written. This affects only <see cref="T:Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.Data.ISdmxDataRetrievalWithWriter"/> behavior. <see cref="T:Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.Data.IAdvancedSdmxDataRetrievalWithWriter"/> will always throw an exception. 
            While <see cref="T:Org.Sdmxsource.Sdmx.DataParser.Manager.ISdmxDataRetrievalWithCrossWriter"/> and <see cref="T:Estat.Nsi.DataRetriever.IDataRetrieverTabular"/> will never throw an exception for no results.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.DataRetrieverCore.#ctor(System.Configuration.ConnectionStringSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Nsi.DataRetriever.DataRetrieverCore"/> class. Constructor for building a new DataRetriever object. It's function is to instantiate the <see cref="!:DataRetrieverCore._log"/>
            </summary>
            <param name="connectionStringSettings">
            The connection to the "Mapping Store", from which the "Mapping Set" will be retrieved 
            </param>
            <exception cref="T:System.ArgumentNullException">
            ConnectionStringSettings is null
            </exception>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.DataRetrieverCore.#ctor(Org.Sdmxsource.Sdmx.Api.Model.Header.IHeader,System.Configuration.ConnectionStringSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Nsi.DataRetriever.DataRetrieverCore"/> class. Constructor for building a new DataRetriever object.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            defaultHeader is null
            </exception>
            <param name="defaultHeader">
            The default header to use for dataflows without header 
            </param>
            <param name="connectionStringSettings">
            The connection to the "Mapping Store", from which the "Mapping Set" will be retrieved 
            </param>
            <exception cref="T:System.ArgumentNullException">
            ConnectionStringSettings is null
            </exception>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.DataRetrieverCore.#ctor(Org.Sdmxsource.Sdmx.Api.Model.Header.IHeader,System.Configuration.ConnectionStringSettings,Org.Sdmxsource.Sdmx.Api.Constants.SdmxSchemaEnumType)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Nsi.DataRetriever.DataRetrieverCore"/> class. Constructor for building a new DataRetriever object.
            </summary>
            <param name="defaultHeader">The default header to use for dataflows without header</param>
            <param name="connectionStringSettings">The connection to the "Mapping Store", from which the "Mapping Set" will be retrieved</param>
            <param name="sdmxSchemaVersion">The SDMX schema version. 
            This controls the behavior of <see cref="T:Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.Data.ISdmxDataRetrievalWithWriter"/> when no results are found. If set to <see cref="F:Org.Sdmxsource.Sdmx.Api.Constants.SdmxSchemaEnumType.VersionTwoPointOne"/> DR will throw a <see cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNoResultsException"/>. Otherwise a empty dataset will be written. This affects only <see cref="T:Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.Data.ISdmxDataRetrievalWithWriter"/> behavior. <see cref="T:Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.Data.IAdvancedSdmxDataRetrievalWithWriter"/> will always throw an exception. 
            While <see cref="T:Org.Sdmxsource.Sdmx.DataParser.Manager.ISdmxDataRetrievalWithCrossWriter"/> and <see cref="T:Estat.Nsi.DataRetriever.IDataRetrieverTabular"/> will never throw an exception for no results.</param>
            <exception cref="T:System.ArgumentNullException">connectionStringSettings is null</exception>
            <exception cref="T:System.ArgumentNullException">defaultHeader is null</exception>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.DataRetrieverCore.ExecuteSqlQuery(Org.Sdmxsource.Sdmx.Api.Model.Data.Query.IDataQuery,System.String,System.Int32,Estat.Sri.TabularWriters.Engine.ITabularWriter)">
            <summary>
            This method executes an SQL query on the dissemination database and writes the output to <paramref name="writer"/>
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="disseminationDbSql"/>
              is null
              -or-
              <paramref name="writer"/>
              is null
              -or-
              <paramref name="query"/>
              is null
            </exception>
            <exception cref="T:Estat.Nsi.DataRetriever.DataRetrieverException">
            <see cref="T:Estat.Nsi.DataRetriever.ErrorTypes"/>
            </exception>
            <param name="query">
            The query bean for which data will be requested. 
            </param>
            <param name="disseminationDbSql">
            The SQL statement to be executed 
            </param>
            <param name="limit">
            Set to a positive integer to limit the number of observations returned, else set to 0 to return all observations 
            </param>
            <param name="writer">
            The <see cref="T:Estat.Sri.TabularWriters.Engine.ITabularWriter"/> (e.g. CSV, SQLite e.t.c.) writer 
            </param>
            <example>
            An example using this method in C#
             <code source="ReUsingExamples\DataRetriever\ReUsingDataRetrieverManySteps.cs" lang="cs"/>
            </example>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.DataRetrieverCore.ExecuteSqlQuery(Org.Sdmxsource.Sdmx.Api.Model.Data.Query.Complex.IComplexDataQuery,System.String,System.Int32,Estat.Sri.TabularWriters.Engine.ITabularWriter)">
            <summary>
            This method executes an SQL query on the dissemination database and writes the output to <paramref name="writer"/>
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="disseminationDbSql"/>
              is null
              -or-
              <paramref name="writer"/>
              is null
              -or-
              <paramref name="query"/>
              is null
            </exception>
            <exception cref="T:Estat.Nsi.DataRetriever.DataRetrieverException">
            <see cref="T:Estat.Nsi.DataRetriever.ErrorTypes"/>
            </exception>
            <param name="query">
            The query bean for which data will be requested. 
            </param>
            <param name="disseminationDbSql">
            The SQL statement to be executed 
            </param>
            <param name="limit">
            Set to a positive integer to limit the number of observations returned, else set to 0 to return all observations 
            </param>
            <param name="writer">
            The <see cref="T:Estat.Sri.TabularWriters.Engine.ITabularWriter"/> (e.g. CSV, SQLite e.t.c.) writer 
            </param>
            <example>
            An example using this method in C#
             <code source="ReUsingExamples\DataRetriever\ReUsingDataRetrieverManySteps.cs" lang="cs"/>
            </example>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.DataRetrieverCore.GenerateSqlQuery(Org.Sdmxsource.Sdmx.Api.Model.Data.Query.IDataQuery)">
            <summary>
            This method generates the SQL SELECT statement for the dissemination database that will return the data for the incoming Query.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="query"/>
              is null
            </exception>
            <exception cref="T:Estat.Nsi.DataRetriever.DataRetrieverException">
            <see cref="T:Estat.Nsi.DataRetriever.ErrorTypes"/>
            </exception>
            <param name="query">
            The <see cref="!:Estat.Sdmx.Model.Query.QueryBean"/> modeling an SDMX-ML Query 
            </param>
            <returns>
            The generated sql query. 
            </returns>
            <example>
            An example using this method in C#
             <code source="ReUsingExamples\DataRetriever\ReUsingDataRetrieverManySteps.cs" lang="cs"/>
            </example>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.DataRetrieverCore.GetData(Org.Sdmxsource.Sdmx.Api.Model.Data.Query.IDataQuery,Org.Sdmxsource.Sdmx.Api.Engine.IDataWriterEngine)">
            <summary>
            Retrieve data from a DDB and write it to the specified <paramref name="writer"/> This is the main public method of the DataRetriever class. It is called with a populated QueryBean (containing essentially an SDMX-ML Query) and a database Connection to a "Mapping Store" database. This method is responsible for: 
            <list type="bullet">
            <item>
            Retrieving the <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.MappingSetEntity"/> (the class containing the performed mappings), according to the provided Dataflow ID, from the "Mapping Store". Mapping Sets are defined on a Dataflow basis. Thus, this method checks the input QueryBean for the Dataflow that data are requested and fetches the appropriate
            <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.MappingSetEntity"/>. If no <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.MappingSetEntity"/> exists, an exception (<see cref="T:Estat.Nsi.DataRetriever.DataRetrieverException"/>) is thrown.
            </item>
            <item>
            Calling the method generating the appropriate SQL for the dissemination database.
            </item>
            <item>
            Calling the method that executes the generated SQL and uses the
             <paramref name="writer"/>
             to write the output.
            </item>
            </list>
            <note type="note">
            The "Data Retriever" expects exactly one Dataflow clause under the DataWhere clause, exactly one
                   DataFlowBean within the DataWhereBean (which in turn resides inside the incoming QueryBean).
            </note>
            </summary>
            <exception cref="T:Estat.Nsi.DataRetriever.DataRetrieverException">
            See the
              <see cref="T:Estat.Nsi.DataRetriever.ErrorTypes"/>
              for more details
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="query"/>
              is null
              -or-
              <paramref name="writer"/>
              is null
            </exception>
            <param name="query">
            The query bean for which data will be requested 
            </param>
            <param name="writer">
            The <see cref="!:ISeriesWriter"/> (e.g. Compact, Generic) writer 
            </param>
            <example>
            An example using this method in C# with <see cref="!:CompactWriter"/> 
            <code source="ReUsingExamples\DataRetriever\ReUsingDataRetriever.cs" lang="cs">
            </code>
            An example using this method in C# with <see cref="!:GenericDataWriter"/> 
            <code source="ReUsingExamples\DataRetriever\ReUsingDataRetrieverGeneric.cs" lang="cs">
            </code>
            </example>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.DataRetrieverCore.GetData(Org.Sdmxsource.Sdmx.Api.Model.Data.Query.IDataQuery,Org.Sdmxsource.Sdmx.DataParser.Engine.ICrossSectionalWriterEngine)">
            <summary>
            Retrieve data from a DDB and write it to the specified <paramref name="writer"/> This is the main public method of the DataRetriever class. It is called with a populated QueryBean (containing essentially an SDMX-ML Query) and a database Connection to a "Mapping Store" database. This method is responsible for: 
            <list type="bullet">
            <item>
            Retrieving the <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.MappingSetEntity"/> (the class containing the performed mappings), according to the provided Dataflow ID, from the "Mapping Store". Mapping Sets are defined on a Dataflow basis. Thus, this method checks the input QueryBean for the Dataflow that data are requested and fetches the appropriate
            <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.MappingSetEntity"/>. If no <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.MappingSetEntity"/> exists, an exception (<see cref="T:Estat.Nsi.DataRetriever.DataRetrieverException"/>) is thrown.
            </item>
            <item>
            Calling the method generating the appropriate SQL for the dissemination database.
            </item>
            <item>
            Calling the method that executes the generated SQL and uses the
             <paramref name="writer"/>
             to write the output.
            </item>
            </list>
            <note type="note">
            The "Data Retriever" expects exactly one Dataflow clause under the DataWhere clause, exactly one
                   DataFlowBean within the DataWhereBean (which in turn resides inside the incoming QueryBean).
            </note>
            </summary>
            <exception cref="T:Estat.Nsi.DataRetriever.DataRetrieverException">
            See the
              <see cref="T:Estat.Nsi.DataRetriever.ErrorTypes"/>
              for more details
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="query"/>
              is null
              -or-
              <paramref name="writer"/>
              is null
            </exception>
            <param name="query">
            The query bean for which data will be requested 
            </param>
            <param name="writer">
            The Cross Sectional writer 
            </param>
            <example>
            An example using this method in C# with <see cref="!:CrossSectionalWriter"/> 
             <code source="ReUsingExamples\DataRetriever\ReUsingDataRetrieverCrossSectional.cs" lang="cs">
            </code>
            </example>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.DataRetrieverCore.GetData(Org.Sdmxsource.Sdmx.Api.Model.Data.Query.Complex.IComplexDataQuery,Org.Sdmxsource.Sdmx.Api.Engine.IDataWriterEngine)">
            <summary>
            Retrieve data from a DDB and write it to the specified <paramref name="dataWriter"/> This is the main public method of the DataRetriever class. It is called with a populated IComplexDataQuery (containing essentially an SDMX-ML Query) and a database Connection to a "Mapping Store" database. This method is responsible for: 
            <list type="bullet">
            <item>
            Retrieving the <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.MappingSetEntity"/> (the class containing the performed mappings), according to the provided Dataflow ID, from the "Mapping Store". Mapping Sets are defined on a Dataflow basis. Thus, this method checks the input IComplexDataQuery for the Dataflow that data are requested and fetches the appropriate
            <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.MappingSetEntity"/>. If no <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.MappingSetEntity"/> exists, an exception (<see cref="T:Estat.Nsi.DataRetriever.DataRetrieverException"/>) is thrown.
            </item>
            <item>
            Calling the method generating the appropriate SQL for the dissemination database.
            </item>
            <item>
            Calling the method that executes the generated SQL and uses the
             <paramref name="dataWriter"/>
             to write the output.
            </item>
            </list>
            <note type="note">
            The "Data Retriever" expects exactly one Dataflow clause under the DataWhere clause, exactly one
                   DataFlowBean within the DataWhereBean (which in turn resides inside the incoming QueryBean).
            </note>
            </summary>
            <exception cref="T:Estat.Nsi.DataRetriever.DataRetrieverException">
            See the
              <see cref="T:Estat.Nsi.DataRetriever.ErrorTypes"/>
              for more details
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="dataQuery"/>
              is null
              -or-
              <paramref name="dataWriter"/>
              is null
            </exception>
            <param name="dataQuery">
            The query bean for which data will be requested 
            </param>
            <param name="dataWriter">
            The Cross Sectional writer 
            </param>
            <example>
            An example using this method in C# with <see cref="!:CrossSectionalWriter"/> 
             <code source="ReUsingExamples\DataRetriever\ReUsingDataRetrieverCrossSectional.cs" lang="cs">
            </code>
            </example>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.DataRetrieverCore.RetrieveData(Org.Sdmxsource.Sdmx.Api.Model.Data.Query.IDataQuery,Estat.Sri.TabularWriters.Engine.ITabularWriter,System.Boolean)">
            <summary>
            Retrieve data from a DDB and write it to the specified <paramref name="writer"/> This is the main public method of the DataRetriever class. It is called with a populated QueryBean (containing essentially an SDMX-ML Query) and a database Connection to a "Mapping Store" database. This method is responsible for: 
            <list type="bullet">
            <item>
            Retrieving the <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.MappingSetEntity"/> (the class containing the performed mappings), according to the provided Dataflow ID, from the "Mapping Store". Mapping Sets are defined on a Dataflow basis. Thus, this method checks the input QueryBean for the Dataflow that data are requested and fetches the appropriate
            <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.MappingSetEntity"/>. If no <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.MappingSetEntity"/> exists, an exception (<see cref="T:Estat.Nsi.DataRetriever.DataRetrieverException"/>) is thrown.
            </item>
            <item>
            Calling the method generating the appropriate SQL for the dissemination database.
            </item>
            <item>
            Calling the method that executes the generated SQL and uses the
             <paramref name="writer"/>
             to write the output.
            </item>
            </list>
            <note type="note">
            The "Data Retriever" expects exactly one Dataflow clause under the DataWhere clause, exactly one
                   DataFlowBean within the DataWhereBean (which in turn resides inside the incoming QueryBean).
            </note>
            </summary>
            <exception cref="T:Estat.Nsi.DataRetriever.DataRetrieverException">
            See the
              <see cref="T:Estat.Nsi.DataRetriever.ErrorTypes"/>
              for more details
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="query"/>
              is null
              -or-
              <paramref name="writer"/>
              is null
            </exception>
            <param name="query">
            The query bean for which data will be requested 
            </param>
            <param name="writer">
            The <see cref="T:Estat.Sri.TabularWriters.Engine.ITabularWriter"/> (e.g. CSV, SQLite e.t.c.) writer 
            </param>
            <param name="showOriginal">
            A value indicating whether to show original (DDB) values 
            </param>
            <example> 
            An example using this method in C# (Without original columns) 
            <code source="ReUsingExamples\DataRetriever\ReUsingDataRetrieverTabular.cs" lang="cs"/>
            An example using this method in C# (With original columns) 
            <code source="ReUsingExamples\DataRetriever\ReUsingDataRetrieverTabularWithOriginal.cs" lang="cs"/>
            </example>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.DataRetrieverCore.NormallizeDatabaseProvider(System.Configuration.ConnectionStringSettings)">
            <summary>
            Normallizes the DDB provider names so both DDB and MASTORE use the same.
            </summary>
            <param name="connectionStringSettings">
            The connection to the mapping store 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.DataRetrieverCore.ValidateMappingSet(Estat.Nsi.DataRetriever.Model.DataRetrievalInfo)">
            <summary>
            Check if the <see cref="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.MappingSet"/> from <paramref name="info"/> is complete
            </summary>
            <param name="info">
            The current data retrieval state 
            </param>
            <exception cref="T:Estat.Nsi.DataRetriever.DataRetrieverException">
            Incomplete mapping set. Please check if all dimensions, measure(s) and mandatory attributes are mapped
            </exception>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.DataRetrieverCore.ExecuteSql``1(``0,Estat.Nsi.DataRetriever.Engines.IDataQueryEngine{``0})">
            <summary>
            This method executes an SQL query on the dissemination database
            </summary>
            <param name="info">
            The current Data Retrieval state 
            </param>
            <param name="queryEngine">
            The query engine. 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.DataRetrieverCore.GenerateSql(Estat.Nsi.DataRetriever.Model.DataRetrievalInfo,Estat.Nsi.DataRetriever.Builders.ISqlBuilder)">
            <summary>
            Generate the SQL string using <paramref name="sqlBuilder"/> with <paramref name="info"/>
            </summary>
            <param name="info">
            The current dataretrieval state. 
            </param>
            <param name="sqlBuilder">
            The sql builder. 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.DataRetrieverCore.Initialize(Org.Sdmxsource.Sdmx.Api.Model.Data.Query.IDataQuery)">
            <summary>
            This method initializes the Data Retriever. It performs some validation the Query, and retrieves from the Mapping Store the mapping set (if any) of the dataflow of the QueryBean 
            <note type="note">
            The
                                                                                                                                                                                                  <see cref="!:KeyFamilyBean"/>
                                                                                                                                                                                                  method should be called only after
                                                                                                                                                                                                  this method has been called.
            </note>
            </summary>
            <exception cref="T:Estat.Nsi.DataRetriever.DataRetrieverException">
            See the
              <see cref="T:Estat.Nsi.DataRetriever.ErrorTypes"/>
              for more details
            </exception>
            <exception cref="T:System.ArgumentNullException">
            ConnectionStringSettings is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            query is null
            </exception>
            <param name="query">
            The QueryBean containing the SDMX query 
            </param>
            <returns>
            The mapping set for the dataflow in <paramref name="query"/> 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.DataRetrieverCore.FilterMappingSet(Org.Sdmxsource.Sdmx.Api.Model.Data.Query.IDataQuery,Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.MappingSetEntity)">
            <summary>
            SRA-349 Filter data to be returned
            </summary>
            <param name="query">
            The IDataQuery containing the SDMX query 
            </param>
            <returns>
            The filtered mapping set entity for the dataflow in <paramref name="query"/> 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.DataRetrieverCore.IsObservationComponent(Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.ComponentEntity)">
            <summary>
            SRA-349 check the component entity type observation
            </summary>
            <param name="component">
            The ComponentEntity containing the component
            </param>
            <returns>
            True for an observation component, false for all other types 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.DataRetrieverCore.IsAttributeComponent(Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.ComponentEntity)">
            <summary>
            SRA-349 check the component entity type attribute
            </summary>
            <param name="component">
            The ComponentEntity containing the component
            </param>
            <returns>
            True for an attribute component, false for all other types 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.DataRetrieverCore.RetrieveMappingSet(Org.Sdmxsource.Sdmx.Api.Model.Objects.DataStructure.IDataflowObject)">
            <summary>
            Returns the mapping set of the specified <paramref name="dataFlow"/> .
            </summary>
            <param name="dataFlow">
            The Query dataflow 
            </param>
            <returns>
            The Mapping Set 
            </returns>
            <exception cref="T:Estat.Nsi.DataRetriever.DataRetrieverException">
            See the
              <see cref="T:Estat.Nsi.DataRetriever.ErrorTypes"/>
            </exception>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.DataRetrieverCore.WriteHeader(Org.Sdmxsource.Sdmx.Api.Engine.IWriterEngine,Estat.Nsi.DataRetriever.Model.DataRetrievalInfo)">
            <summary>
            Write the SDMX header (from <paramref name="info"/> ) to <paramref name="writer"/>
            </summary>
            <param name="writer">
            The writer. 
            </param>
            <param name="info">
            The info. 
            </param>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.DataRetrieverException">
            <summary>
            This is an exception thrown while retrieving data
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.DataRetrieverException._errorType">
            <summary>
              An optional DataRetriever error enumeration
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.DataRetrieverException.#ctor(System.Exception,Org.Sdmxsource.Sdmx.Api.Constants.SdmxErrorCode,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Nsi.DataRetriever.DataRetrieverException"/> class. Initializes with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="nestedException">
            The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception. 
            </param>
             /// <param name="errorCode">
            The error code 
            </param>
            <param name="message">
            The error message that explains the reason for the exception. 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.DataRetrieverException.#ctor(System.String,Org.Sdmxsource.Sdmx.Api.Constants.SdmxErrorCode)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Nsi.DataRetriever.DataRetrieverException"/> class with a specified error message and error code
            </summary>
            <param name="errorMessage">
            The error message that explains the reason for the exception. 
            </param>
            <param name="errorCode">
            The error code
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.DataRetrieverException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown. 
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination. 
            </param>
            <exception cref="T:System.ArgumentNullException">
            The
              <paramref name="info"/>
              parameter is a null reference (Nothing in Visual Basic).
            </exception>
            <filterpriority>2</filterpriority>
            <PermissionSet>
              <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*"/>
              <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="SerializationFormatter"/>
            </PermissionSet>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.DataRetrieverException.ErrorType">
            <summary>
              Gets the DataRetriever error enumeration (optional)
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.ErrorTypes">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.ErrorTypes.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.ErrorTypes.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Manager.CrossSectionalQueryEngineManager">
            <summary>
            The <see cref="!:IQueryEngineManager"/> impementation for time series
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Manager.IQueryEngineManager`1">
            <summary>
            The interface for manager classes that determine which <see cref="T:Estat.Nsi.DataRetriever.Engines.IDataQueryEngine`1"/> to use.
            </summary>
            <typeparam name="T">
            The DR state type.
            </typeparam>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Manager.IQueryEngineManager`1.GetQueryEngine(`0)">
            <summary>
            Get a <see cref="T:Estat.Nsi.DataRetriever.Engines.IDataQueryEngine`1"/> implementation based on the specified <paramref name="info"/>
            </summary>
            <param name="info">
            The current data retrieval state 
            </param>
            <returns>
            a <see cref="T:Estat.Nsi.DataRetriever.Engines.IDataQueryEngine`1"/> implementation based on the specified <paramref name="info"/> 
            </returns>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Manager.CrossSectionalQueryEngineManager._instance">
            <summary>
              The singleton instance
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Manager.CrossSectionalQueryEngineManager.#ctor">
            <summary>
              Prevents a default instance of the <see cref="T:Estat.Nsi.DataRetriever.Manager.CrossSectionalQueryEngineManager"/> class from being created.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Manager.CrossSectionalQueryEngineManager.GetQueryEngine(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoXS)">
            <summary>
            Get a <see cref="!:IDataQueryEngine"/> implementation based on the specified <paramref name="info"/>
            </summary>
            <param name="info">
            The current data retrieval state 
            </param>
            <returns>
            a <see cref="!:IDataQueryEngine"/> implementation based on the specified <paramref name="info"/> 
            </returns>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Manager.CrossSectionalQueryEngineManager.Instance">
            <summary>
              Gets the singleton instance
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Manager.SeriesQueryEngineManager">
            <summary>
            The <see cref="T:Estat.Nsi.DataRetriever.Manager.IQueryEngineManager`1"/> implementation for time series
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Manager.SeriesQueryEngineManager._instance">
            <summary>
              The singleton instance
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Manager.SeriesQueryEngineManager.#ctor">
            <summary>
              Prevents a default instance of the <see cref="T:Estat.Nsi.DataRetriever.Manager.SeriesQueryEngineManager"/> class from being created.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Manager.SeriesQueryEngineManager.GetQueryEngine(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries)">
            <summary>
            Get a <see cref="T:Estat.Nsi.DataRetriever.Engines.IDataQueryEngine`1"/> implementation based on the specified <paramref name="info"/>
            </summary>
            <param name="info">
            The current data retrieval state 
            </param>
            <returns>
            a <see cref="T:Estat.Nsi.DataRetriever.Engines.IDataQueryEngine`1"/> implementation based on the specified <paramref name="info"/> 
            </returns>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Manager.SeriesQueryEngineManager.Instance">
            <summary>
              Gets the singleton instance
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Model.ComponentValue">
            <summary>
            A class that holds a component and value pairs
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.ComponentValue.#ctor(Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.ComponentEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Nsi.DataRetriever.Model.ComponentValue"/> class.
            </summary>
            <param name="key">
            The dsd component.
            </param>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.ComponentValue.Key">
            <summary>
              Gets the DSD Component
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.ComponentValue.Value">
            <summary>
              Gets or sets the value
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo">
            <summary>
            This class holds the current state of the data retrieval
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo._logger">
            <summary>
            The logger
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo._allDimensions">
            <summary>
            The _all dimensions
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo._componentIdMap">
            <summary>
              Holds the map between component concept id and the ComponentEntity. Used in getting the ComponentEntity from SDMX-ML Query clauses
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo._componentMapping">
            <summary>
              A dictionary to find the mapping of each DSD component
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo._connectionStringSettings">
            <summary>
              The Mapping Store connection string settings
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo._schemaVersion">
            <summary>
            The _schema version
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo._crossSectionalMeasureMappings">
            <summary>
              Cross Sectional measures
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo._mappingSet">
            <summary>
              The mapping set of the dataflow found in the SDMX query
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo._measureDimensionQueryValues">
            <summary>
              The Measure dimension SDMX Query values if any
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo._query">
            <summary>
              The current SDMX Query object
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo._complexQuery">
            <summary>
              The current SDMX complex Query object
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo._xsMeasureMappings">
            <summary>
              This field holds the XSMeasureMapping which are used in case they are mapped instead of Measure Dimension
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo._dimensionAtObservation">
            <summary>
            The _dimension at observation
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo._isTimePeriodAtObservation">
            <summary>
            A value indicating whether the time period is the dimension at observation.
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo._componentMappingList">
            <summary>
              The list of component mappings
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo._isTruncated">
            <summary>
              This field holds if the current dataset is truncated
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo._recordsRead">
            <summary>
              This field holds if the no of records read from DDB
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo._limit">
            <summary>
              The current limit
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo._sqlString">
            <summary>
              Holds the final SQL string
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo._timeMapping">
            <summary>
              The object used to store the mapping of the time dimension
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo._timeTranscoder">
            <summary>
              The object that is used for transcoding the time fields
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo._dimensionAtObservationMapping">
            <summary>
            The _dimension at observation mapping
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo"/> class.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.#ctor(Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.MappingSetEntity,Org.Sdmxsource.Sdmx.Api.Model.Data.Query.IDataQuery,System.Configuration.ConnectionStringSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo"/> class.
            </summary>
            <param name="mappingSet">
            The mapping set of the dataflow found in the sdmx query 
            </param>
            <param name="query">
            The current SDMX Query object 
            </param>
            <param name="connectionStringSettings">
            The Mapping Store connection string settings 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.#ctor(Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.MappingSetEntity,Org.Sdmxsource.Sdmx.Api.Model.Data.Query.IDataQuery,System.Configuration.ConnectionStringSettings,Org.Sdmxsource.Sdmx.Api.Constants.SdmxSchemaEnumType)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo"/> class.
            </summary>
            <param name="mappingSet">The mapping set of the dataflow found in the SDMX query</param>
            <param name="query">The current SDMX Query object</param>
            <param name="connectionStringSettings">The Mapping Store connection string settings</param>
            <param name="schemaVersion">The schema version.</param>
            <exception cref="T:System.ArgumentNullException">
            mappingSet
            or
            connectionStringSettings
            </exception>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.#ctor(Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.MappingSetEntity,Org.Sdmxsource.Sdmx.Api.Model.Data.Query.Complex.IComplexDataQuery,System.Configuration.ConnectionStringSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo"/> class.
            </summary>
            <param name="mappingSet">
            The mapping set of the dataflow found in the SDMX query 
            </param>
            <param name="query">
            The current SDMX Query object 
            </param>
            <param name="connectionStringSettings">
            The Mapping Store connection string settings 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.BuildXSMeasures">
            <summary>
            Getter for the list of available XS Measures in case the XS Measures are mapped
            </summary>
            <returns>
            A list of available XS Measures Mappings or null in case they were not mapped 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.BuildEffectiveDimensionAtObservation">
            <summary>
            Builds the effective dimension at observation.
            </summary>
            <returns>The effective dimension at observation.</returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.GetFromQueryDimensionValues(Org.Sdmxsource.Sdmx.Api.Model.Data.Query.IDataQuery,Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.ComponentEntity)">
            <summary>
            Gets the list of <paramref name="dimension"/> values inside a <paramref name="query"/>
            </summary>
            <param name="query">
            The SDMX Model query 
            </param>
            <param name="dimension">
            The <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.ComponentEntity"/> of a dimension 
            </param>
            <returns>
            the list of <paramref name="dimension"/> values inside a <paramref name="query"/> 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.BuildMappings">
            <summary>
            Builds the component to Mapping dictionary. Before building it the methods make sure that the dictionary is empty
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.IsTimeDimensionMapping(Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.MappingEntity)">
            <summary>
            Returns a value indicating whether the <paramref name="mapping"/> is for a TimeDimension
            </summary>
            <param name="mapping">
            The <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.MappingEntity"/> to check 
            </param>
            <returns>
            A value indicating whether the <paramref name="mapping"/> is for a TimeDimension 
            </returns>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.DimensionAtObservationMapping">
            <summary>
            Gets the dimension at observation mapping
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.AllComponentMappings">
            <summary>
              Gets the main component
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.ComponentIdMap">
            <summary>
              Gets the map between component concept id and the ComponentEntity. Used in getting the ComponentEntity from SDMX-ML Query clauses
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.ComponentMapping">
            <summary>
              Gets a dictionary to find the mapping of each DSD component
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.ConnectionStringSettings">
            <summary>
              Gets the Mapping Store DataBase Connection String Settings.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.CrossSectionalMeasureMappings">
            <summary>
              Gets the current Cross Sectional Measure mappings
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.DefaultHeader">
            <summary>
              Gets or sets the default SDMX Header
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.IsTruncated">
            <summary>
              Gets or sets a value indicating whether the current dataset is truncated
            </summary>
            <remarks>
              TODO This is not currently supported.
            </remarks>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.RecordsRead">
            <summary>
              Gets or sets a value indicating whether the no of records read from DDB
            </summary>
            <remarks>
              TODO This is not currently supported.
            </remarks>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.Limit">
            <summary>
              Gets or sets the current limit. Defaults to <see cref="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.Query"/> 's <see cref="P:Org.Sdmxsource.Sdmx.Api.Model.Data.Query.Complex.IComplexDataQuery.DefaultLimit"/>
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.MappingSet">
            <summary>
              Gets the mapping set of the dataflow found in the sdmx query
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.MeasureComponent">
            <summary>
              Gets the Measure Component
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.EffectiveDimensionAtObservation">
            <summary>
            Gets the effective dimension at observation.
            </summary>
            <value>
            The effective dimension at observation.
            </value>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.FirstNObservations">
            <summary>
            Gets the first N observations per series.
            </summary>
            <value>
            The first N observations per series.
            </value>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.LastNObservations">
            <summary>
            Gets the last N observations per series.
            </summary>
            <value>
            The last N observations per series.
            </value>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.HasLastNObservations">
            <summary>
            Gets a value indicating whether this instance has last n observations.
            </summary>
            <value>
            <c>true</c> if this instance has last n observations; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.HasFirstNObservations">
            <summary>
            Gets a value indicating whether this instance has first n observations.
            </summary>
            <value>
            <c>true</c> if this instance has first n observations; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.HasFirstAndLastNObservations">
            <summary>
            Gets a value indicating whether this instance has first and last n observations.
            </summary>
            <value>
            <c>true</c> if this instance has first and last n observations; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.HasMaxObsPerSeries">
            <summary>
            Gets a value indicating whether this instance has max OBS per series.
            </summary>
            <value>
            <c>true</c> if this instance has max OBS per series; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.BaseDataQuery">
            <summary>
            Gets the base data query.
            </summary>
            <value>
            The base data query.
            </value>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.Query">
            <summary>
              Gets the current SDMX Query object
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.ComplexQuery">
            <summary>
              Gets the current SDMX Query object
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.SqlString">
            <summary>
              Gets or sets the final SQL string
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.TimeMapping">
            <summary>
              Gets the object used to store the mapping of the time dimension
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.TimeTranscoder">
            <summary>
              Gets the object that is used for transcoding the time fields
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.IsTimePeriodAtObservation">
            <summary>
            Gets a value indicating whether the time period is the dimension at observation.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.IsAllDimensions">
            <summary>
            Gets a value indicating whether this instance is all dimensions.
            </summary>
            <value>
            <c>true</c> if this instance is all dimensions; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfo.DimensionAtObservation">
            <summary>
            Gets the dimension at observation
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries">
            <summary>
            The current data retrieval state for Time Series output
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries._dataSetAttributes">
            <summary>
              The dataSet attributes
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries._groupNameTable">
            <summary>
              The <see cref="T:System.Xml.NameTable"/> used to store atomized strings from group key values
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries._groups">
            <summary>
              A dictionary between a <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.GroupEntity"/> and <see cref="T:Estat.Nsi.DataRetriever.Model.GroupInformation"/>
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries._seriesObsComponents">
            <summary>
              Hold all series and observation components
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries._seriesWriter">
            <summary>
              Writer provided that is based on the series model to write the retrieved data.
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries._useDataSetSqlQuery">
            <summary>
              A value indicating whether values for attributes attached to dataset level should be retrieved from DDB using a separate SQL query.
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries._componentMappings">
            <summary>
            The component mappings for series. It is filled by <see cref="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries._seriesObsComponents"/>
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries._dataSetSqlString">
            <summary>
              Holds the SQL string for getting the dataset attributes
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries._sqlWhereCache">
            <summary>
              Holds the cached where clauses which is useful for TimeSeries with Groups and/or DataSet attributes
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries.#ctor(Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.MappingSetEntity,Org.Sdmxsource.Sdmx.Api.Model.Data.Query.IDataQuery,System.Configuration.ConnectionStringSettings,Org.Sdmxsource.Sdmx.Api.Engine.IDataWriterEngine,Org.Sdmxsource.Sdmx.Api.Constants.SdmxSchemaEnumType)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries"/> class.
            </summary>
            <param name="mappingSet">The mapping set of the dataflow found in the sdmx query</param>
            <param name="query">The current SDMX Query object</param>
            <param name="connectionStringSettings">The Mapping Store connection string settings</param>
            <param name="seriesWriter">The series Writer.</param>
            <param name="sdmxSchemaVersion">The SDMX schema version.</param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries.#ctor(Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.MappingSetEntity,Org.Sdmxsource.Sdmx.Api.Model.Data.Query.Complex.IComplexDataQuery,System.Configuration.ConnectionStringSettings,Org.Sdmxsource.Sdmx.Api.Engine.IDataWriterEngine)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries"/> class.
            </summary>
            <param name="mappingSet">
            The mapping set of the dataflow found in the sdmx query 
            </param>
            <param name="query">
            The current SDMX Query object 
            </param>
            <param name="connectionStringSettings">
            The Mapping Store connection string settings 
            </param>
            <param name="seriesWriter">
            The series Writer. 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries.AddDataSetAttributes(Estat.Sri.MappingStoreRetrieval.Engine.Mapping.IComponentMapping)">
            <summary>
            Add <paramref name="componentMapping"/> to <see cref="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries._dataSetAttributes"/>
            </summary>
            <param name="componentMapping">
            The dataset level attribute <see cref="T:Estat.Sri.MappingStoreRetrieval.Engine.Mapping.IComponentMapping"/> 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries.AddSeriesObsMapping(Estat.Sri.MappingStoreRetrieval.Engine.Mapping.IComponentMapping)">
            <summary>
            Adds series OBS mapping.
            </summary>
            <param name="componentMapping">
            The component mapping. 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries.AddTimeSeriesGroups(Estat.Sri.MappingStoreRetrieval.Engine.Mapping.IComponentMapping)">
            <summary>
            Add <paramref name="componentMapping"/> to <see cref="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries._groups"/>
            </summary>
            <param name="componentMapping">
            The group level attribute <see cref="T:Estat.Sri.MappingStoreRetrieval.Engine.Mapping.IComponentMapping"/> 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries.BuildSeriesMappings">
            <summary>
            Build Time series mappings
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries.BuildTimeSeriesGroupMappings">
            <summary>
            Build Time series group mappings
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries.AllComponentMappings">
            <summary>
              Gets series and observation components
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries.DataSetAttributes">
            <summary>
              Gets the DataSet level Attribute mappings
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries.DataSetSqlString">
            <summary>
              Gets or sets the SQL string for getting the dataset attributes
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries.GroupNameTable">
            <summary>
              Gets the <see cref="T:System.Xml.NameTable"/> used to store atomized strings from group key values
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries.Groups">
            <summary>
              Gets a dictionary between a <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.GroupEntity"/> and <see cref="T:Estat.Nsi.DataRetriever.Model.GroupInformation"/>
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries.SeriesWriter">
            <summary>
              Gets writer provided that is based on the series model to write the retrieved data. If null the XS writer should be set instead.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries.SqlWhereCache">
            <summary>
              Gets or sets the cached where clauses which is useful for TimeSeries with Groups and/or DataSet attributes
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries.WriteGroups">
            <summary>
            Gets a value indicating whether we should write observations.
            </summary>
            <value>
            <c>true</c> if we should write observations; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries.WriteObservations">
            <summary>
            Gets a value indicating whether we should write observations.
            </summary>
            <value>
            <c>true</c> if we should write observations; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries.WriteAttributes">
            <summary>
            Gets a value indicating whether write attributes. It depends on the <see cref="P:Org.Sdmxsource.Sdmx.Api.Model.Data.Query.IBaseDataQuery.DataQueryDetail"/>
            </summary>
            <value>
              <c>true</c> if we should write attributes; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoComplex._complexWriter">
            <summary>
              Writer provided that is based on the XS model to write the retrieved data.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoComplex.#ctor(Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.MappingSetEntity,Org.Sdmxsource.Sdmx.Api.Model.Data.Query.Complex.IComplexDataQuery,System.Configuration.ConnectionStringSettings,Org.Sdmxsource.Sdmx.Api.Engine.IDataWriterEngine)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular"/> class.
            </summary>
            <param name="mappingSet">
            The mapping set of the dataflow found in the sdmx query 
            </param>
            <param name="query">
            The current SDMX Query object 
            </param>
            <param name="connectionStringSettings">
            The Mapping Store connection string settings 
            </param>
            <param name="complexWriter">
            The tabular Writer. 
            </param>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular">
            <summary>
            The current data retrieval state for tabular output
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular._tabularWriter">
            <summary>
              Writer provided for tabular to write the retrieved data.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular.#ctor(Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.MappingSetEntity,Org.Sdmxsource.Sdmx.Api.Model.Data.Query.IDataQuery,System.Configuration.ConnectionStringSettings,Estat.Sri.TabularWriters.Engine.ITabularWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular"/> class.
            </summary>
            <param name="mappingSet">
            The mapping set of the dataflow found in the sdmx query 
            </param>
            <param name="query">
            The current SDMX Query object 
            </param>
            <param name="connectionStringSettings">
            The Mapping Store connection string settings 
            </param>
            <param name="tabularWriter">
            The tabular Writer. 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular.#ctor(Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.MappingSetEntity,Org.Sdmxsource.Sdmx.Api.Model.Data.Query.Complex.IComplexDataQuery,System.Configuration.ConnectionStringSettings,Estat.Sri.TabularWriters.Engine.ITabularWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular"/> class.
            </summary>
            <param name="mappingSet">
            The mapping set of the dataflow found in the sdmx query 
            </param>
            <param name="query">
            The current SDMX Query object 
            </param>
            <param name="connectionStringSettings">
            The Mapping Store connection string settings 
            </param>
            <param name="tabularWriter">
            The tabular Writer. 
            </param>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular.TabularWriter">
            <summary>
              Gets the writer provided for tabular to write the retrieved data. If null the <see cref="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries.SeriesWriter"/> or <see cref="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoXS.XSWriter"/> should be set instead.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular.HasFirstNObservations">
            <summary>
            Gets a value indicating whether this instance has first n observations.
            </summary>
            <value>
            <c>true</c> if this instance has first n observations; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoTabular.HasLastNObservations">
            <summary>
            Gets a value indicating whether this instance has last n observations.
            </summary>
            <value>
            <c>true</c> if this instance has last n observations; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoXS">
            <summary>
            The current data retrieval state for Cross Sectional output
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoXS._xsMeasureCodeToConcept">
            <summary>
              Gets the XSMeasure attached code to Concept ref map
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoXS._xsWriter">
            <summary>
              Writer provided that is based on the XS model to write the retrieved data.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoXS.#ctor(Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.MappingSetEntity,Org.Sdmxsource.Sdmx.Api.Model.Data.Query.IDataQuery,System.Configuration.ConnectionStringSettings,Org.Sdmxsource.Sdmx.DataParser.Engine.ICrossSectionalWriterEngine)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoXS"/> class.
            </summary>
            <param name="mappingSet">
            The mapping set of the dataflow found in the sdmx query 
            </param>
            <param name="query">
            The current SDMX Query object 
            </param>
            <param name="connectionStringSettings">
            The Mapping Store connection string settings 
            </param>
            <param name="xsWriter">
            The ICrossSectionalWriter Writer. 
            </param>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoXS.XSMeasureCodeToConcept">
            <summary>
              Gets the XSMeasure attached code to Concept ref map
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoXS.XSWriter">
            <summary>
              Gets the writer provided that is based on the XS model to write the retrieved data. If null the seriesWriter should be set instead.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoXS.HasFirstNObservations">
            <summary>
            Gets a value indicating whether this instance has first n observations.
            </summary>
            <value>
            <c>true</c> if this instance has first n observations; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.DataRetrievalInfoXS.HasLastNObservations">
            <summary>
            Gets a value indicating whether this instance has last n observations.
            </summary>
            <value>
            <c>true</c> if this instance has last n observations; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Model.GroupInformation">
            <summary>
            This class holds TimeSeries Group information
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.GroupInformation._componentMappings">
            <summary>
              The component mappings for this group
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.GroupInformation._keySet">
            <summary>
              The set of keys already processed
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.GroupInformation._thisGroup">
            <summary>
              The group entity
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.GroupInformation._sql">
            <summary>
              The SQL String
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.GroupInformation.#ctor(Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.GroupEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Nsi.DataRetriever.Model.GroupInformation"/> class.
            </summary>
            <param name="thisGroup">
            The group entity 
            </param>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.GroupInformation.ComponentMappings">
            <summary>
              Gets the component mappings for this group
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.GroupInformation.KeySet">
            <summary>
              Gets the set of keys already processed
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.GroupInformation.MeasureComponent">
            <summary>
              Gets or sets the group dimension that is a measure component and is not mapped.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.GroupInformation.SQL">
            <summary>
              Gets or sets the SQL String
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.GroupInformation.ThisGroup">
            <summary>
              Gets the group entity
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Model.IMappedValues">
            <summary>
            Mapped values collection interface
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.IMappedValues.Add(System.Int32,System.String)">
            <summary>
            Add the <paramref name="value"/> to component at <paramref name="index"/>. 
            The index is specified in constructor
            </summary>
            <param name="index">The index</param>
            <param name="value">The value</param>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.IMappedValues.TimeValue">
            <summary>
              Gets or sets the Time dimension value
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.IMappedValues.FrequencyValue">
            <summary>
              Gets or sets the frequency value value
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.IMappedValues.DimensionAtObservationValue">
            <summary>
            Gets or sets the dimension at observation value
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Model.MappedValues">
            <summary>
            Holds the mapped and transcoded values following the series structure
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Model.MappedValuesBase">
            <summary>
            The mapped values base.
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedValuesBase._componentValues">
            <summary>
              An array of collections used to store all components. The index used is <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.CrossSectionalLevels"/>
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedValuesBase._measureDimensionValue">
            <summary>
              The measure dimension value
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedValuesBase._primaryMeasureValue">
            <summary>
              The primary measure value
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedValuesBase._timeDimensionValue">
            <summary>
              The time dimension <see cref="T:Estat.Nsi.DataRetriever.Model.ComponentValue"/>
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedValuesBase._frequencyDimensionValue">
            <summary>
              The frequency dimension <see cref="T:Estat.Nsi.DataRetriever.Model.ComponentValue"/>
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedValuesBase._dimensionAtObservationValue">
            <summary>
            The dimension at observation value
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MappedValuesBase.Add(System.Int32,System.String)">
            <summary>
            Add the <paramref name="value"/> to component at <paramref name="index"/> .
            </summary>
            <param name="index">
            The index 
            </param>
            <param name="value">
            The value 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MappedValuesBase.CopyValues(System.Collections.Generic.List{Estat.Nsi.DataRetriever.Model.ComponentValue},System.Collections.Generic.IList{System.String})">
            <summary>
            Copy the <see cref="P:Estat.Nsi.DataRetriever.Model.ComponentValue.Value"/> of <paramref name="currentKeyValues"/> to <paramref name="previousKeyValues"/>
            </summary>
            <param name="currentKeyValues">
            The list of <see cref="T:Estat.Nsi.DataRetriever.Model.ComponentValue"/> 
            </param>
            <param name="previousKeyValues">
            The list of string 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MappedValuesBase.EqualKeyValues(System.Collections.Generic.IList{Estat.Nsi.DataRetriever.Model.ComponentValue},System.Collections.Generic.IList{System.String})">
            <summary>
            Returns a value indicating whether the values in <paramref name="currentKeyValues"/> are equal to the specified <paramref name="previousKeyValues"/> .
            </summary>
            <param name="currentKeyValues">
            The component values. 
            </param>
            <param name="previousKeyValues">
            The previous key values. 
            </param>
            <returns>
            a value indicating whether the values in <paramref name="currentKeyValues"/> are equal to the specified <paramref name="previousKeyValues"/> . 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MappedValuesBase.SetTimeDimensionComponent(Estat.Sri.MappingStoreRetrieval.Engine.Mapping.ITimeDimension)">
            <summary>
            Set the time dimension
            </summary>
            <param name="timeDimension">
            The Time Dimension mapping 
            </param>
            <returns>
            The time dimension <see cref="T:Estat.Nsi.DataRetriever.Model.ComponentValue"/> 
            </returns>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.MappedValuesBase.MeasureDimensionValue">
            <summary>
              Gets or sets the measure dimension value
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.MappedValuesBase.PrimaryMeasureValue">
            <summary>
              Gets or sets the primary measure value
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.MappedValuesBase.TimeDimensionValue">
            <summary>
              Gets or sets the primary measure value
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.MappedValuesBase.TimeValue">
            <summary>
              Gets or sets the Time dimension value
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.MappedValuesBase.FrequencyValue">
            <summary>
              Gets or sets the Time dimension value
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.MappedValuesBase.DimensionAtObservationValue">
            <summary>
            Gets or sets the dimension at observation value
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.MappedValuesBase.ComponentValues">
            <summary>
              Gets an array of collections used to store all components.
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedValues._attributeDataSetValues">
            <summary>
              dataset attribute values
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedValues._attributeGroupValues">
            <summary>
              group attribute values. It should contain only the attributes of a specific group.
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedValues._attributeObservationValues">
            <summary>
              OBS attribute values
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedValues._attributeSeriesValues">
            <summary>
              series attribute values
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedValues._dimensionValues">
            <summary>
              All dimension values
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedValues._keyValues">
            <summary>
              The dimension key values
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedValues._previousKeyValues">
            <summary>
              The previous key values
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedValues._xsMeasureCachedSeriesAttribute">
            <summary>
              The list of all series dimension values minus the measure dimension. It is used only when XS measures are mapped.
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedValues._xsMeasureCachedSeriesKey">
            <summary>
              The list of all series dimension values minus the measure dimension. It is used only when XS measures are mapped.
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedValues._xsMeasureCaches">
            <summary>
              XS Measure cache. It is used only when XS measures are mapped.
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedValues._xsMeasures">
            <summary>
              CrossSectional measure values
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedValues._startedDataSet">
            <summary>
              A value indicating whether the SDMX DSD Attributes attached to DataSet level have been processed.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MappedValues.#ctor(Estat.Nsi.DataRetriever.Model.DataRetrievalInfo,System.Collections.Generic.IEnumerable{Estat.Sri.MappingStoreRetrieval.Engine.Mapping.IComponentMapping})">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Nsi.DataRetriever.Model.MappedValues"/> class.
            </summary>
            <param name="info">
            The current data retrieval state 
            </param>
            <param name="componentMappings">
            The component Mappings. 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MappedValues.#ctor(Estat.Nsi.DataRetriever.Model.DataRetrievalInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Nsi.DataRetriever.Model.MappedValues"/> class.
            </summary>
            <param name="info">
            The current data retrieval state 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MappedValues.AddToBuffer(Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.ComponentEntity)">
            <summary>
            Add <paramref name="xsComponent"/> to buffer
            </summary>
            <param name="xsComponent">
            The XS Measure to add to buffer 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MappedValues.InitXsBuffer">
            <summary>
            Initialize the buffers used for mappings with XS Measures mapped.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MappedValues.IsNewKey">
            <summary>
            Gets a value indicating whether this is a new key or it is the same as the last one.
            </summary>
            <returns>
            a value indicating whether this is a new key or it is the same as the last one. 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MappedValues.CopyComponentValues(System.Collections.Generic.IEnumerable{Estat.Nsi.DataRetriever.Model.ComponentValue},System.Collections.Generic.ICollection{Estat.Nsi.DataRetriever.Model.ComponentValue})">
            <summary>
            Clear the <paramref name="destination"/> and copy all items from <paramref name="source"/> to <paramref name="destination"/>
            </summary>
            <param name="source">The source list of <see cref="T:Estat.Nsi.DataRetriever.Model.ComponentValue"/></param>
            <param name="destination">The destination list of <see cref="T:Estat.Nsi.DataRetriever.Model.ComponentValue"/></param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MappedValues.GetXSMeasureValue(Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.ComponentEntity)">
            <summary>
            Gets the value for the specified <paramref name="component"/>
            </summary>
            <param name="component">
            The CrossSectional measure 
            </param>
            <returns>
            the value for the specified <paramref name="component"/> 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MappedValues.SetComponentOrder(System.Collections.Generic.IEnumerable{Estat.Sri.MappingStoreRetrieval.Engine.Mapping.IComponentMapping},Estat.Nsi.DataRetriever.Model.DataRetrievalInfo)">
            <summary>
            Initialize the internal order of the components based on the specified <paramref name="componentMappings"/>
            </summary>
            <param name="componentMappings">
            The component mappings 
            </param>
            /// <param name="info">
            The data retrieval info 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MappedValues.IsDimensionObsReference(Estat.Nsi.DataRetriever.Model.ComponentValue,Estat.Nsi.DataRetriever.Model.DataRetrievalInfo)">
            <summary>
            Checks if the dimension at observation is in the dimension references of the component <paramref name="componentMappings"/>
            </summary>
            <param name="componentValue">
            The component value 
            </param>
            /// <param name="info">
            The data retrieval info 
            </param>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.MappedValues.AttributeDataSetValues">
            <summary>
              Gets the attributes attached to DataSet level
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.MappedValues.AttributeGroupValues">
            <summary>
              Gets group attribute values. To avoid extra checks, only attributes and dimensions of a specific group should be added at <see cref="M:Estat.Nsi.DataRetriever.Model.MappedValuesBase.Add(System.Int32,System.String)"/> . So this should contain only the attributes of a specific group.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.MappedValues.AttributeObservationValues">
            <summary>
              Gets the Observation attribute values
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.MappedValues.AttributeSeriesValues">
            <summary>
              Gets the series attribute values
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.MappedValues.DimensionValues">
            <summary>
              Gets all dimension values. This means either the series dimensions (all of them except time) or the dimensions of a specific group.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.MappedValues.StartedDataSet">
            <summary>
              Gets or sets a value indicating whether the SDMX DSD Attributes attached to DataSet level have been processed.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.MappedValues.XSMeasureCaches">
            <summary>
              Gets the list of XS Measure buffer. It is used only when XS measures are mapped.
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Model.MappedValuesFlat">
            <summary>
            Holds the mapped and transcoded values without any attachment level information.
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedValuesFlat._attributeValues">
            <summary>
              Attribute values
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedValuesFlat._dimensionValues">
            <summary>
              Dimension values
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedValuesFlat._measureValues">
            <summary>
              Primary /XS values values
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedValuesFlat._record">
            <summary>
              The current data record reference.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MappedValuesFlat.#ctor(Estat.Nsi.DataRetriever.Model.DataRetrievalInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Nsi.DataRetriever.Model.MappedValuesFlat"/> class.
            </summary>
            <param name="info">
            The current data retrieval state 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MappedValuesFlat.#ctor(System.Data.IDataRecord,Estat.Nsi.DataRetriever.Model.DataRetrievalInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Nsi.DataRetriever.Model.MappedValuesFlat"/> class.
            </summary>
            <param name="record">
              The current data record reference. used to retrieve the local columns 
            </param>
            <param name="info">
            The current data retrieval state 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MappedValuesFlat.GetLocalColumns">
            <summary>
            Returns an enumeration of the local column names
            </summary>
            <returns>
            an enumeration of the local column names 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MappedValuesFlat.GetLocalValues">
            <summary>
            Returns an enumeration of a key value pairs of local column name and value
            </summary>
            <returns>
            an enumeration of a key value pairs of local column name and value 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MappedValuesFlat.SetComponentOrder(System.Collections.Generic.IEnumerable{Estat.Sri.MappingStoreRetrieval.Engine.Mapping.IComponentMapping})">
            <summary>
            Initialize the internal order of the components based on the specified <paramref name="componentMappings"/>
            </summary>
            <param name="componentMappings">
            The component mappings 
            </param>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.MappedValuesFlat.AttributeValues">
            <summary>
              Gets the attribute values
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.MappedValuesFlat.DimensionValues">
            <summary>
              Gets the Dimension values
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.MappedValuesFlat.MeasureValues">
            <summary>
              Gets the Primary /XS values values
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Model.MappedXsValues">
            <summary>
            The mapped xs values.
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedXsValues._attributeValues">
            <summary>
              An array of collections used to store the attributes of different cross sectional levels. The index used is <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.CrossSectionalLevels"/>
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedXsValues._dataSetIndex">
            <summary>
              The data set level index
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedXsValues._dimensionValues">
            <summary>
              An array of collections used to store the dimensions of different cross sectional levels. The index used is <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.CrossSectionalLevels"/>
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedXsValues._groupIndex">
            <summary>
              The group level index
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedXsValues._keyValues">
            <summary>
              An array of collections used to store the dimensions of different cross sectional levels. The index used is <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.CrossSectionalLevels"/>
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedXsValues._observationIndex">
            <summary>
              The observation level index
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedXsValues._previousKeyValues">
            <summary>
              The previous key values
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedXsValues._sectionIndex">
            <summary>
              The section level index
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedXsValues._startedLevel">
            <summary>
              A value indicating whether a specific level has started at all.
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MappedXsValues._xsMeasureValues">
            <summary>
              CrossSectional measure values
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MappedXsValues.#ctor(Estat.Nsi.DataRetriever.Model.DataRetrievalInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Nsi.DataRetriever.Model.MappedXsValues"/> class.
            </summary>
            <param name="info">
            The info. 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MappedXsValues.GetXSMeasureValue(Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.ComponentEntity)">
            <summary>
            Gets the value for the specified <paramref name="component"/>
            </summary>
            <param name="component">
            The CrossSectional measure 
            </param>
            <returns>
            the value for the specified <paramref name="component"/> 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MappedXsValues.IsNewGroupKey">
            <summary>
            Gets a value indicating whether this is a new group key or it is the same as the last one.
            </summary>
            <returns>
            a value indicating whether this is a new group key or it is the same as the last one. 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MappedXsValues.IsNewSectionKey">
            <summary>
            Gets a value indicating whether this is a new group key or it is the same as the last one.
            </summary>
            <returns>
            a value indicating whether this is a new group key or it is the same as the last one. 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MappedXsValues.GetIndex(Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.CrossSectionalLevels)">
            <summary>
            Gets the index for cross sectional level from the specified <paramref name="level"/>
            </summary>
            <param name="level">
            The <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.CrossSectionalLevels"/> 
            </param>
            <returns>
            the index for cross sectional level from the specified <paramref name="level"/> 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MappedXsValues.HandleTimeDimension(Estat.Nsi.DataRetriever.Model.ComponentValue)">
            <summary>
            Handle Time Dimension components
            </summary>
            <param name="keyedValue">
            The time dimension <see cref="T:Estat.Nsi.DataRetriever.Model.ComponentValue"/> 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MappedXsValues.IsNewKeyAtLevel(System.Int32)">
            <summary>
            Gets a value indicating whether the <see cref="P:Estat.Nsi.DataRetriever.Model.ComponentValue.Value"/> in <see cref="F:Estat.Nsi.DataRetriever.Model.MappedXsValues._keyValues"/> equal to <see cref="F:Estat.Nsi.DataRetriever.Model.MappedXsValues._previousKeyValues"/> at the specified <paramref name="index"/>
            </summary>
            <param name="index">
            The attachment level index, <see cref="M:Estat.Nsi.DataRetriever.Model.MappedXsValues.GetIndex(Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.CrossSectionalLevels)"/> . 
            </param>
            <returns>
            a value indicating whether the <see cref="P:Estat.Nsi.DataRetriever.Model.ComponentValue.Value"/> in <see cref="F:Estat.Nsi.DataRetriever.Model.MappedXsValues._keyValues"/> equal to <see cref="F:Estat.Nsi.DataRetriever.Model.MappedXsValues._previousKeyValues"/> at the specified <paramref name="index"/> 
            </returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MappedXsValues.SetComponentOrder(System.Collections.Generic.IEnumerable{Estat.Sri.MappingStoreRetrieval.Engine.Mapping.IComponentMapping})">
            <summary>
            Initialize the internal order of the components based on the specified <paramref name="componentMappings"/>
            </summary>
            <param name="componentMappings">
            The component mappings 
            </param>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.MappedXsValues.DataSetLevelAttributeValues">
            <summary>
              Gets the Attributes attached to data set level
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.MappedXsValues.DataSetLevelDimensionValues">
            <summary>
              Gets the Dimensions attached to data set level
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.MappedXsValues.GroupLevelAttributeValues">
            <summary>
              Gets the Attributes attached to group level
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.MappedXsValues.GroupLevelDimensionValues">
            <summary>
              Gets the Dimensions attached to group level
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.MappedXsValues.ObservationLevelAttributeValues">
            <summary>
              Gets the Attributes attached to group level
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.MappedXsValues.ObservationLevelDimensionValues">
            <summary>
              Gets the Dimensions attached to group level
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.MappedXsValues.SectionAttributeValues">
            <summary>
              Gets the Attributes attached to section level
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.MappedXsValues.SectionLevelDimensionValues">
            <summary>
              Gets the Dimensions attached to section level
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.MappedXsValues.StartedDataSet">
            <summary>
              Gets or sets a value indicating whether dataset has been parsed.
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Model.MaxObsStatus">
            <summary>
            The max OBS status.
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MaxObsStatus._writeObsFunc">
            <summary>
            The _write observation function
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MaxObsStatus._queueLastObsAction">
            <summary>
            The _queue last observation action
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MaxObsStatus._lastObsQueue">
            <summary>
            The _last observation queue
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MaxObsStatus._lastNObservations">
            <summary>
            The _last n observations
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MaxObsStatus._limit">
            <summary>
            The limit
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MaxObsStatus._info">
            <summary>
            The _info
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MaxObsStatus._lastObsWritten">
            <summary>
            The _last observation written
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MaxObsStatus._count">
            <summary>
                The _count
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.MaxObsStatus._totalWrittenCount">
            <summary>
            The _total count
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MaxObsStatus.#ctor(Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries,System.Func{Estat.Nsi.DataRetriever.Model.DataRetrievalInfoSeries,System.String,System.String,System.Collections.Generic.IEnumerable{Estat.Nsi.DataRetriever.Model.ComponentValue},System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Nsi.DataRetriever.Model.MaxObsStatus"/> class.
            </summary>
            <param name="info">
            The info.
            </param>
            <param name="writeObsFunc">
            The write observation method.
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MaxObsStatus.Add(System.Tuple{System.String,System.String,System.Collections.Generic.IEnumerable{Estat.Nsi.DataRetriever.Model.ComponentValue}})">
            <summary>
            Adds the specified write observation.
            </summary>
            <param name="writeObs">The write observation action..</param>
            <returns>The number of observation actually written.</returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MaxObsStatus.ResetCount">
            <summary>
                Resets the count.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MaxObsStatus.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MaxObsStatus.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="managed"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MaxObsStatus.WriteObs(System.Tuple{System.String,System.String,System.Collections.Generic.IEnumerable{Estat.Nsi.DataRetriever.Model.ComponentValue}})">
            <summary>
            Writes the observation.
            </summary>
            <param name="tuple">The tuple.</param>
            <returns>The number of observations.</returns>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.MaxObsStatus.WriteOrSkip(System.Int32,System.Tuple{System.String,System.String,System.Collections.Generic.IEnumerable{Estat.Nsi.DataRetriever.Model.ComponentValue}})">
            <summary>
            Writes the observation or skips it.
            </summary>
            <param name="firstNObservations">
            The first n observations.
            </param>
            <param name="values">
            The values.
            </param>
            <returns>
            The number of observations written.
            </returns>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.MaxObsStatus.LastObservationsWritten">
            <summary>
            Gets the last observation written
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Model.ReadOnlyKey">
            <summary>
            This class is used to created key to be used in <see cref="T:System.Collections.Generic.IDictionary`2"/>
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.ReadOnlyKey._hashCode">
            <summary>
              The hash code
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.ReadOnlyKey._keys">
            <summary>
              The key values collection
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.ReadOnlyKey.#ctor(Estat.Nsi.DataRetriever.Model.MappedValues,System.Xml.XmlNameTable)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Nsi.DataRetriever.Model.ReadOnlyKey"/> class.
            </summary>
            <param name="keys">
            The <see cref="T:Estat.Nsi.DataRetriever.Model.MappedValues"/> to retrieve the keys from. 
            </param>
            <param name="nameTable">
            The name Table. 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.ReadOnlyKey.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/> .
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/> ; otherwise, false. 
            </returns>
            <param name="obj">
            The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/> . 
            </param>
            <exception cref="T:System.NullReferenceException">
            The
              <paramref name="obj"/>
              parameter is null.
            </exception>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.ReadOnlyKey.Equals(Estat.Nsi.DataRetriever.Model.ReadOnlyKey)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false. 
            </returns>
            <param name="other">
            An object to compare with this object. 
            </param>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.ReadOnlyKey.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/> . 
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Model.XsMeasureCache">
            <summary>
            This class is used to use buffering in order prevent big TS files when XS measures are mapped.
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.XsMeasureCache._attributes">
            <summary>
              The list of time and observation value per XS Measure. It is used only when XS measures are mapped
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.XsMeasureCache._cachedSeriesAttributes">
            <summary>
              The list of all series dimension values minus the measure dimension. It is used only when XS measures are mapped.
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.XsMeasureCache._cachedSeriesKey">
            <summary>
              The list of all series dimension values minus the measure dimension. It is used only when XS measures are mapped.
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.XsMeasureCache._xsMeasureCachedObservations">
            <summary>
              The list of time and observation value per XS Measure. It is used only when XS measures are mapped
            </summary>
        </member>
        <member name="F:Estat.Nsi.DataRetriever.Model.XsMeasureCache._xsMeasureCode">
            <summary>
              The measure code
            </summary>
        </member>
        <member name="M:Estat.Nsi.DataRetriever.Model.XsMeasureCache.#ctor(System.Collections.Generic.List{Estat.Nsi.DataRetriever.Model.ComponentValue},System.Collections.Generic.List{Estat.Nsi.DataRetriever.Model.ComponentValue},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Nsi.DataRetriever.Model.XsMeasureCache"/> class.
            </summary>
            <param name="cachedSeriesKey">
            The last Cached Series Key. 
            </param>
            <param name="cachedSeriesAttributes">
            The xs Measure Cached Series Attributes. 
            </param>
            <param name="xsMeasureCode">
            The xs Measure Code. 
            </param>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.XsMeasureCache.Attributes">
            <summary>
              Gets the list of time and observation value per XS Measure. It is used only when XS measures are mapped
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.XsMeasureCache.CachedSeriesAttributes">
            <summary>
              Gets the list of all series dimension values minus the measure dimension. It is used only when XS measures are mapped.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.XsMeasureCache.CachedSeriesKey">
            <summary>
              Gets the list of all series dimension values minus the measure dimension. It is used only when XS measures are mapped.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.XsMeasureCache.XSMeasureCachedObservations">
            <summary>
              Gets the list of time and observation value per XS Measure. It is used only when XS measures are mapped
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Model.XsMeasureCache.XSMeasureCode">
            <summary>
              Gets the measure code
            </summary>
        </member>
        <member name="T:Estat.Nsi.DataRetriever.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.DataRetriever_ExecuteSqlQuery_Error_during_writing_responce">
            <summary>
              Looks up a localized string similar to Error during writing responce.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.DataRetriever_ExecuteSqlQuery_Error_executing_generated_SQL_and_populating_SDMX_model">
            <summary>
              Looks up a localized string similar to Error executing generated SQL and populating SDMX model.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.DataRetriever_GenerateComponentWhere_">
            <summary>
              Looks up a localized string similar to  (&apos;{0} is not mapped&apos; = &apos;{1}&apos;) .
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.DataRetriever_GenerateFrom_Begin_GenerateFrom____">
            <summary>
              Looks up a localized string similar to Begin GenerateFrom ....
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.DataRetriever_GenerateFrom_End_GenerateFrom____">
            <summary>
              Looks up a localized string similar to End GenerateFrom ....
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.DataRetriever_GenerateFrom_Generated_FROM___0_">
            <summary>
              Looks up a localized string similar to Generated FROM: {0}.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.DataRetriever_GenerateSqlQuery_Could_not_generate_sql_query">
            <summary>
              Looks up a localized string similar to Could not generate sql query.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.DataRetriever_GetMessageHeader_Error_populating_header">
            <summary>
              Looks up a localized string similar to Error populating header.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.DataRetriever_Initialize_Could_not_retrieve_Mappings_from__Mapping_Store___Cause__">
            <summary>
              Looks up a localized string similar to Could not retrieve Mappings from &quot;Mapping Store&quot;! Cause: .
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.DataRetriever_Initialize_Error_while_retrieving_Mappings_from__Mapping_Store___Cause__">
            <summary>
              Looks up a localized string similar to Error while retrieving Mappings from &quot;Mapping Store&quot;! Cause: .
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.DataRetriever_RetrieveData_End_Data_Retriever_initialization">
            <summary>
              Looks up a localized string similar to End Data Retriever initialization.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.DataRetriever_RetrieveData_End_Retrieving_header_information">
            <summary>
              Looks up a localized string similar to End Retrieving header information.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.DataRetriever_RetrieveData_Query_executed_successfully_and_DataSet_populated">
            <summary>
              Looks up a localized string similar to Query executed successfully and SDMX DataSet populated.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.DataRetriever_RetrieveData_Start_Initializing_Data_Retriever">
            <summary>
              Looks up a localized string similar to Start Initializing Data Retriever.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.DataRetriever_RetrieveData_Start_Retrieving_header_information">
            <summary>
              Looks up a localized string similar to Start Retrieving header information.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.DataRetriever_RetrieveDataTable_End_Executing_SQL_in_dissemination_database_and_populate_DataTable">
            <summary>
              Looks up a localized string similar to End Executing SQL in dissemination database and populate DataTable.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.DataRetriever_RetrieveDataTable_Query_executed_successfully_and_DataTable_populated">
            <summary>
              Looks up a localized string similar to Query executed successfully and DataTable populated.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.DataRetriever_RetrieveDataTable_Start_Executing_SQL_in_dissemination_database_and_populate_DataTable">
            <summary>
              Looks up a localized string similar to Start Executing SQL in dissemination database and populate DataTable.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.ErrorComponentValuesNotMappedValuesFlaType">
            <summary>
              Looks up a localized string similar to componentValues not of MappedValuesFlat type.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.ErrorIncompleteMappingSet">
            <summary>
              Looks up a localized string similar to Incomplete mapping set. Please check if all dimensions, measure(s) and mandatory attributes are mapped.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.ErrorInfoNotDataRetrievalInfoTabularType">
            <summary>
              Looks up a localized string similar to info not of DataRetrievalInfoTabular type.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.ErrorNoHeader">
            <summary>
              Looks up a localized string similar to No Header information in the Mapping Store and no default header defined.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.ErrorTypeNotDataRetrievalInfoSeries">
            <summary>
              Looks up a localized string similar to Type not DataRetrievalInfoSeries.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.ErrorTypeNotMappedXsValues">
            <summary>
              Looks up a localized string similar to Type not MappedXsValues.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.ErrorUnableToGenerateSQL">
            <summary>
              Looks up a localized string similar to Unable to generate SQL.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.ExceptionNotInit">
            <summary>
              Looks up a localized string similar to DataRetriever not initialized. Please call Initialize method.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.InfoBeginGenerateSelect">
            <summary>
              Looks up a localized string similar to Begin GenerateSelect ....
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.InfoBeginGenerateSql">
            <summary>
              Looks up a localized string similar to Begin GenerateSql ....
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.InfoBeginGenerateWhere">
            <summary>
              Looks up a localized string similar to Begin GenerateWhere ....
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.InfoDataRetrieverBBInvoked">
            <summary>
              Looks up a localized string similar to Data Retriever building block invoked..
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.InfoEndDataRetrieverBBInvoked">
            <summary>
              Looks up a localized string similar to DataRetriever Building Block invoke completed.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.InfoEndExecutingSql">
            <summary>
              Looks up a localized string similar to End Executing SQL in dissemination database and write to SDMXIO writer.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.InfoEndGenerateOrderBy">
            <summary>
              Looks up a localized string similar to End GenerateOrderBy ....
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.InfoEndGenerateSelect">
            <summary>
              Looks up a localized string similar to End GenerateSelect ....
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.InfoEndGenerateSql">
            <summary>
              Looks up a localized string similar to End GenerateSql ....
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.InfoEndGenerateWhere">
            <summary>
              Looks up a localized string similar to End GenerateWhere ....
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.InfoEndGeneratingSQLDDB">
            <summary>
              Looks up a localized string similar to End Generating SQL for dissemination database.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.InfoGeneratedOrderByFormat1">
            <summary>
              Looks up a localized string similar to Generated OrderBy: {0}.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.InfoGeneratedSelectFormat1">
            <summary>
              Looks up a localized string similar to Generated SELECT: {0}.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.InfoGeneratedSQLFormat1">
            <summary>
              Looks up a localized string similar to Generated SQL: {0}.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.InfoGeneratedWhereFormat1">
            <summary>
              Looks up a localized string similar to Generated Where: {0}.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.InfoGenerateOrderBy">
            <summary>
              Looks up a localized string similar to Begin GenerateOrderBy ....
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.InfoOutput">
            <summary>
              Looks up a localized string similar to Output: .
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.InfoStartExecutingSql">
            <summary>
              Looks up a localized string similar to Start Executing SQL in dissemination database and write to SDMXIO writer.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.InfoStartGeneratingSQLDDB">
            <summary>
              Looks up a localized string similar to Start Generating SQL for dissemination database.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.MissingDataflowInQuery">
            <summary>
              Looks up a localized string similar to No Dataflow in query or dataflow not in first DataWhere.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.MissingFrequency">
            <summary>
              Looks up a localized string similar to Cannot transcode time if there is no Frequency dimension in the DSD..
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.No_header_information_in_the_Mapping_Store">
            <summary>
              Looks up a localized string similar to No header information in the Mapping Store; using default header.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.NoDataWhereInQuery">
            <summary>
              Looks up a localized string similar to No DataWhere in query.
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.NoMappingForDataflowFormat1">
            <summary>
              Looks up a localized string similar to Cannot retrieve data for dataflow: {0}. Either there was no mapping for it or you are not authorized to access this dataflow..
            </summary>
        </member>
        <member name="P:Estat.Nsi.DataRetriever.Properties.Resources.NoRecordsFound">
            <summary>
              Looks up a localized string similar to NoRecordsFound.
            </summary>
        </member>
    </members>
</doc>
