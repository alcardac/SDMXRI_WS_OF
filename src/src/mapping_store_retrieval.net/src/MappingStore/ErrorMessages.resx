<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ComponentMappingNNMapping" xml:space="preserve">
    <value>Unsupported mapping. N-N mappings are not supported. Component {0}</value>
    <comment>1 parameter: components concept id</comment>
  </data>
  <data name="ComponentMappingNoMappingFormat1" xml:space="preserve">
    <value>Incomplete mapping. Neither constant value or columns mapped for component {0}.</value>
    <comment>1 parameter: components concept id</comment>
  </data>
  <data name="ComponentMappingNoTranscodingFormat1" xml:space="preserve">
    <value>Incomplete mapping. Transcoding must be enabled for 1-N or N-1 mappings. Component {0}.</value>
    <comment>1 parameter: components concept id</comment>
  </data>
  <data name="ComponentMappingNoTranscodingRulesFormat1" xml:space="preserve">
    <value>Incomplete mapping. No trancoding rules defined for component {0}.</value>
    <comment>1 parameter: components concept id</comment>
  </data>
  <data name="CrossSectionalMeasureNotMappedFormat1" xml:space="preserve">
    <value>Cross Sectional Measure '{0}' is not mapped.</value>
    <comment>1 parameter: components concept id</comment>
  </data>
  <data name="MandatoryAttributeNotMappedFormat1" xml:space="preserve">
    <value>Mandatory attribute '{0}' is not mapped.</value>
    <comment>1 parameter: components concept id</comment>
  </data>
  <data name="MappingStoreNoEntityFormat2" xml:space="preserve">
    <value>There was no {0} for Id:{1}</value>
    <comment>2 parameter: type and id</comment>
  </data>
  <data name="PrimaryMeasureNotMappedFormat1" xml:space="preserve">
    <value>Primary Measure '{0}' is not mapped.</value>
    <comment>1 parameter: components concept id</comment>
  </data>
  <data name="TimeDimensionInvalidTimeInSDMXQueryFormat" xml:space="preserve">
    <value>Could not parse SDMX Query Time element : {0}.Please check if it is in Time Period format.</value>
    <comment>1 parameter. SDMX Query time element</comment>
  </data>
  <data name="TimeDimensionTranscodingOver2Columns" xml:space="preserve">
    <value>TimeDimension transcoding with 3 or more columns is not yet supported</value>
  </data>
  <data name="TimeDimensionUnsupportedMappingFormat1" xml:space="preserve">
    <value>Incomplete Mapping. {0} column Time Dimension mapping without transcoding is not supported</value>
    <comment>1 parameter: local column count</comment>
  </data>
  <data name="TimeDimensionVariableLenPeriodNotFirst" xml:space="preserve">
    <value>Variable length period is used but period is first</value>
  </data>
  <data name="TimeDimensionYearNo4Digits" xml:space="preserve">
    <value>The year selection must be exactly 4 digits.</value>
  </data>
  <data name="TimeDimensionYearPeriodOverlap" xml:space="preserve">
    <value>Year and Period selections overlap</value>
  </data>
  <data name="UnknownDatabaseTypeFormat1" xml:space="preserve">
    <value>Unknown Database type: '{0}'</value>
    <comment>
      1 parameter: database type
    </comment>
  </data>
  <data name="MoreThanOneArtefact" xml:space="preserve">
    <value>More than one artefact returned</value>
  </data>
  <data name="CrossReferenceNotSet" xml:space="preserve">
    <value>CrossReference not set. Set the CrossReference property to a ICrossReferenceMutableRetrievalManager instance before calling this method.</value>
  </data>
    <data name="CrossReferenceIdentifiable" xml:space="preserve">
    <value>Not implemented getting references from non-maintainable types : </value>
  </data>
    <data name="ExceptionISdmxMutableObjectAuthRetrievalManagerNotSet" xml:space="preserve">
    <value>IAuthSdmxMutableObjectRetrievalManager not set and allowed dataflows is not null. Blocking output..</value>
  </data>
    <data name="UnknownStructureQueryDetail" xml:space="preserve">
    <value>Unknown StructureQueryDetail</value>
  </data>
    <data name="DataflowIdIsNull" xml:space="preserve">
    <value>IMaintainableRefObject.MaintainableId cannot be null</value>
  </data>
    <data name="InvalidTimeTranscoding" xml:space="preserve">
    <value>Tried to add TimeTranscodingEntity with TranscodingId different that then one specified in the constructor.</value>
  </data>
</root>