/*******************************************************************************
 * Copyright (c) 2012 Metadata Technology Ltd.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Public License v3.0
 * which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/gpl.html
 * 
 * This file is part of the SDMX Component Library.
 * 
 * The SDMX Component Library is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * The SDMX Component Library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with The SDMX Component Library If not, see <http://www.gnu.org/licenses/>.
 * 
 * Contributors:
 *     Metadata Technology - initial API and implementation
 ******************************************************************************/
// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.2011051901     
// 5/10/2012 7:20 μμ    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
 namespace Org.Sdmxsource.Sdmx.SdmxObjects.Model.MutableBaseObjects.Base {
	
	using Org.Sdmxsource.Sdmx.Api.Model.Objects.Base;
	using Org.Sdmxsource.Sdmx.Api.Model.Mutable.Base;
	using Org.Sdmxsource.Sdmx.Api.Model.MutableBaseObjects.Base;
	using Org.Sdmxsource.Sdmx.Api.Model.BaseObjects.Base;
	using Org.Sdmxsource.Sdmx.SdmxObjects.Model.Mutable.Base;
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.IO;
	using System.Runtime.CompilerServices;
	
	[Serializable]
	public class AnnotationMutableObjectBaseCore : 
			IAnnotationMutableObjectBase {
		private const long serialVersionUID = 1L;
	
		private string title;
		private string url;
		private string type;
		private IList<ITextTypeWrapperMutableObject> texts;
	
		public AnnotationMutableObjectBaseCore(IAnnotationObjectBase annotation) {
			this.title = annotation.Title;
			if (annotation.Url != null) {
				this.url = annotation.Url.ToString();
			}
			this.type = annotation.Type;
			//HACK This is a hack
			//		if(annotation.getTexts() != null) {
			//			for (TextTypeWrapper currentTextType : annotation.getTexts()) {
			//				this.texts.add(new TextTypeWrapperMutableCore(currentTextType));
			//			}
			//		}
		}
	
		public AnnotationMutableObjectBaseCore(IAnnotation annotation) {
			this.title = annotation.Title;
			if (annotation.URL != null) {
				this.url = annotation.URL.ToString();
			}
			this.type = annotation.Type;
			if (annotation.Text != null) {
				/* foreach */
				foreach (ITextTypeWrapper currentTextType  in  annotation.Text) {
					this.texts.Add(new TextTypeWrapperMutableCore(currentTextType));
				}
			}
		}
	
		public AnnotationMutableObjectBaseCore() {
		}
	
		
		public virtual string Title {
		  get {
				return title;
			}
		  set {
				this.title = value;
			}
		}
		
	
		
		public virtual string Url {
		  get {
				return url;
			}
		  set {
				this.url = value;
			}
		}
		
	
		
		public virtual string Type {
		  get {
				return type;
			}
		  set {
				this.type = value;
			}
		}
		
	
		
		public virtual IList<ITextTypeWrapperMutableObject> Texts {
		  get {
				return texts;
			}
		  set {
				this.texts = value;
			}
		}
		
	}
}
