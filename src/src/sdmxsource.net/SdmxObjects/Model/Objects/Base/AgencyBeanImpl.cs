// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.2011051901     
// 5/10/2012 7:21 μμ    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
 /// <summary>
/// Copyright (c) 2012 Metadata Technology Ltd.
/// All rights reserved. This program and the accompanying materials
/// are made available under the terms of the GNU Public License v3.0
/// which accompanies this distribution, and is available at
/// http://www.gnu.org/licenses/gpl.html
/// This file is part of the SDMX Component Library.
/// The SDMX Component Library is free software: you can redistribute it and/or modify
/// it under the terms of the GNU General Public License as published by
/// the Free Software Foundation, either version 3 of the License, or
/// (at your option) any later version.
/// The SDMX Component Library is distributed in the hope that it will be useful,
/// but WITHOUT ANY WARRANTY; without even the implied warranty of
/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
/// GNU General Public License for more details.
/// You should have received a copy of the GNU General Public License
/// along with The SDMX Component Library If not, see <http://www.gnu.org/licenses/>.
/// Contributors:
/// Metadata Technology - initial API and implementation
/// </summary>
///
namespace Org.Sdmxsource.Sdmx.SdmxObjects.Model.Objects.Base {
	
	using Org.Sdmx.Resources.SdmxMl.Schemas.V10.Structure;
	using Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure;
	using Org.Sdmxsource.Sdmx.Api.Constants;
	using Org.Sdmxsource.Sdmx.Api.Model.Objects.Base;
	using Org.Sdmxsource.Sdmx.Api.Model.Mutable.Base;
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.IO;
	using System.Runtime.CompilerServices;
	
	[Serializable]
	public class AgencyCore : ItemCore, IAgency {
		private const long serialVersionUID = 1L;
	
		///////////////////////////////////////////////////////////////////////////////////////////////////
		////////////BUILD FROM MUTABLE BEANS			 //////////////////////////////////////////////////
		///////////////////////////////////////////////////////////////////////////////////////////////////
		public AgencyCore(IAgencyMutableObject bean, IAgencyScheme parent) : base(bean, parent) {
		}
	
		///////////////////////////////////////////////////////////////////////////////////////////////////
		////////////BUILD FROM V2.1 SCHEMA				 //////////////////////////////////////////////////
		///////////////////////////////////////////////////////////////////////////////////////////////////
		public AgencyCore(
				Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AgencyType type,
				IAgencyScheme parent) : base(bean, Org.Sdmxsource.Sdmx.Api.Constants.SdmxStructureType.GetFromEnum(SdmxStructureEnumType.AGENCY), bean.Id, bean.Uri, bean.NameList, null, null, parent) {
		}
	
		///////////////////////////////////////////////////////////////////////////////////////////////////
		////////////BUILD FROM V2 SCHEMA				 //////////////////////////////////////////////////
		///////////////////////////////////////////////////////////////////////////////////////////////////
		public AgencyCore(OrganisationType bean, IAgencyScheme parent) : base(bean, Org.Sdmxsource.Sdmx.Api.Constants.SdmxStructureType.GetFromEnum(SdmxStructureEnumType.AGENCY), bean.Id, bean.Uri, bean.NameList, bean.DescriptionList, bean.Annotations, parent) {
		}
	
		///////////////////////////////////////////////////////////////////////////////////////////////////
		////////////BUILD FROM V1 SCHEMA				 //////////////////////////////////////////////////
		///////////////////////////////////////////////////////////////////////////////////////////////////
		public AgencyCore(AgencyType bean, IAgencyScheme parent) {
		}
	
		///////////////////////////////////////////////////////////////////////////////////////////////////
		////////////DEEP VALIDATION							 //////////////////////////////////////////////////
		///////////////////////////////////////////////////////////////////////////////////////////////////
		public override bool DeepEquals(ISDMXObject bean) {
			if (bean.StructureType == Org.Sdmxsource.Sdmx.Api.Constants.SdmxStructureType.GetFromEnum(SdmxStructureEnumType.AGENCY)) {
				IAgency that = (IAgency) bean;
				if (!Org.Sdmxsource.Util.ObjectUtil.Equivalent(FullId, that.FullId)) {
					return false;
				}
				return base.DeepEqualsInternal(that);
			}
			return false;
		}
	
		///////////////////////////////////////////////////////////////////////////////////////////////////
		////////////VALIDATION								 //////////////////////////////////////////////////
		///////////////////////////////////////////////////////////////////////////////////////////////////	
		protected internal override void ValidateId(bool startWithIntAllowed) {
			//Not allowed to start with an integer
			base.ValidateId(false);
		}
	
		
		public virtual String FullId {
		  get {
				IAgencyScheme parent = (IAgencyScheme) MaintainableParent;
				if (parent.IsDefaultScheme()) {
					return this.Id;
				}
				return parent.AgencyId + "." + this.Id;
			}
		}
		
	
		
		public virtual override String Urn {
		  get {
				return structureType.UrnPrefix + FullId;
			}
		}
		
	}
}
