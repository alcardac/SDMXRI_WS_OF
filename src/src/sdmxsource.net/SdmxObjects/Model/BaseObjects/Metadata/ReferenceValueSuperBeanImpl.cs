// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.2011051901     
// 5/10/2012 7:21 μμ    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
 /// <summary>
/// Copyright (c) 2012 Metadata Technology Ltd.
/// All rights reserved. This program and the accompanying materials
/// are made available under the terms of the GNU Public License v3.0
/// which accompanies this distribution, and is available at
/// http://www.gnu.org/licenses/gpl.html
/// This file is part of the SDMX Component Library.
/// The SDMX Component Library is free software: you can redistribute it and/or modify
/// it under the terms of the GNU General Public License as published by
/// the Free Software Foundation, either version 3 of the License, or
/// (at your option) any later version.
/// The SDMX Component Library is distributed in the hope that it will be useful,
/// but WITHOUT ANY WARRANTY; without even the implied warranty of
/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
/// GNU General Public License for more details.
/// You should have received a copy of the GNU General Public License
/// along with The SDMX Component Library If not, see <http://www.gnu.org/licenses/>.
/// Contributors:
/// Metadata Technology - initial API and implementation
/// </summary>
///
namespace Org.Sdmxsource.Sdmx.SdmxObjects.Model.BaseObjects.Metadata {
	
	using Org.Sdmxsource.Sdmx.Api.Manager.Retrieval;
	using Org.Sdmxsource.Sdmx.Api.Model.Objects.Base;
	using Org.Sdmxsource.Sdmx.Api.Model.Objects.Registry;
	using Org.Sdmxsource.Sdmx.Api.Model.Metadata;
	using Org.Sdmxsource.Sdmx.Api.Model.BaseObjects.Metadata;
	using Org.Sdmxsource.Sdmx.SdmxObjects.Model.BaseObjects.Base;
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.IO;
	using System.Runtime.CompilerServices;
	
	/// <summary>
	/// ReferenceValue contains a value for a target reference object reference. 
	/// <p/>
	/// When this is taken with its sibling elements, they identify the object or objects to which the reported metadata apply. 
	/// The content of this will either be a reference to an identifiable object, a data key, a reference to a data set, or a report period.
	/// </summary>
	///
	[Serializable]
	public class ReferenceValueObjectBaseCore : ObjectBaseCore, IReferenceValueBase {
		private const long serialVersionUID = 3931084247512860391L;
		private IIdentifiableObject identifiableReference;
		private IContentConstraintObject contentConstraintReference;
		private IReferenceValue builtFrom;
	
		public ReferenceValueObjectBaseCore(IReferenceValue builtFrom,
				IIdentifiableRetrievalManager retrievalManager) : base(builtFrom) {
			this.builtFrom = builtFrom;
			if (builtFrom.IdentifiableReference != null) {
				identifiableReference = retrievalManager.GetIdentifiableObject(builtFrom.GetIdentifiableReference());
			}
			if (builtFrom.ContentConstraintReference != null) {
				contentConstraintReference = retrievalManager.GetIdentifiableObject<IContentConstraintObject>(
						builtFrom.ContentConstraintReference,
						typeof(IContentConstraintObject));
			}
		}
	
		
		public virtual String Id {
		  get {
				return builtFrom.Id;
			}
		}
		
	
		
		public virtual String DatasetId {
		  get {
				return builtFrom.DatasetId;
			}
		}
		
	
		
		public virtual IList<IDataKey> DataKeys {
		  get {
				return builtFrom.DataKeys;
			}
		}
		
	
		
		public virtual bool DatasetReference {
		  get {
				return builtFrom.DatasetReference;
			}
		}
		
	
		public virtual bool IsIdentifiableReference {
			get {return builtFrom.IdentifiableReference; }
		}
	
		
		public virtual bool DatakeyReference {
		  get {
				return builtFrom.DatakeyReference;
			}
		}
		
	
		
		public virtual bool ContentConstriantReference {
		  get {
				return builtFrom.ContentConstriantReference;
			}
		}
		
	
		
		public virtual IIdentifiableObject GetIdentifiableReference() {
		  
				return identifiableReference;
			
		}
		
	
		
		public virtual IContentConstraintObject ContentConstraintReference {
		  get {
				return contentConstraintReference;
			}
		}
		
	
		
		public ISdmxObject BuiltFrom {
		  get {
				return builtFrom;
			}
		}
		
	}
}
