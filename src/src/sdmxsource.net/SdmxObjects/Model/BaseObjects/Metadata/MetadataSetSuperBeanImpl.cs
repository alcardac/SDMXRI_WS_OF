// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.2011051901     
// 5/10/2012 7:21 μμ    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
 /// <summary>
/// Copyright (c) 2012 Metadata Technology Ltd.
/// All rights reserved. This program and the accompanying materials
/// are made available under the terms of the GNU Public License v3.0
/// which accompanies this distribution, and is available at
/// http://www.gnu.org/licenses/gpl.html
/// This file is part of the SDMX Component Library.
/// The SDMX Component Library is free software: you can redistribute it and/or modify
/// it under the terms of the GNU General Public License as published by
/// the Free Software Foundation, either version 3 of the License, or
/// (at your option) any later version.
/// The SDMX Component Library is distributed in the hope that it will be useful,
/// but WITHOUT ANY WARRANTY; without even the implied warranty of
/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
/// GNU General Public License for more details.
/// You should have received a copy of the GNU General Public License
/// along with The SDMX Component Library If not, see <http://www.gnu.org/licenses/>.
/// Contributors:
/// Metadata Technology - initial API and implementation
/// </summary>
///
namespace Org.Sdmxsource.Sdmx.SdmxObjects.Model.BaseObjects.Metadata {
	
	using Org.Sdmxsource.Sdmx.Api.Exception;
	using Org.Sdmxsource.Sdmx.Api.Manager.Retrieval;
	using Org.Sdmxsource.Sdmx.Api.Model.Base;
	using Org.Sdmxsource.Sdmx.Api.Model.Objects.Base;
	using Org.Sdmxsource.Sdmx.Api.Model.Objects.Metadatastructure;
	using Org.Sdmxsource.Sdmx.Api.Model.Metadata;
	using Org.Sdmxsource.Sdmx.Api.Model.BaseObjects.Metadata;
	using Org.Sdmxsource.Sdmx.SdmxObjects.Model.BaseObjects.Base;
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.IO;
	using System.Runtime.CompilerServices;
	
	[Serializable]
    public class MetadataSetBaseCore : ObjectBaseCore, IMetadataSetBase
    {
		private const long serialVersionUID = 7206438606756205144L;
		private IMetadataStructureDefinitionObject metadataStructure;
		private IDataProvider dataProvider;
        private IList<IMetadataReportBase> reports;
		private IMetadataSet builtFrom;

        public MetadataSetBaseCore(IMetadataSet builtFrom, IIdentifiableRetrievalManager retrievalManager)
            : base(builtFrom)
        {
            this.reports = new List<IMetadataReportBase>();
			this.builtFrom = builtFrom;
			this.metadataStructure = retrievalManager.GetIdentifiableObject<IMetadataStructureDefinitionObject>(
					builtFrom.MsdReference,
					typeof(IMetadataStructureDefinitionObject));
			if (builtFrom.DataProviderReference != null) {
                this.dataProvider = retrievalManager.GetIdentifiableObject<IDataProvider>(
						builtFrom.DataProviderReference,
						typeof(IDataProvider));
			}
			if (builtFrom.Reports != null) {
				/* foreach */
				foreach (IMetadataReport metadataReport  in  builtFrom.Reports) {
					IReportStructure rs = GetReportStructure(metadataReport,
							metadataStructure.ReportStructures);
					this.reports.Add(new MetadataReportBaseCore(rs, metadataReport, retrievalManager));
				}
			}
		}
	
		private IReportStructure GetReportStructure(IMetadataReport metadataReport, IList<IReportStructure> reportStructures) {
			/* foreach */
			foreach (IReportStructure currentRS  in  reportStructures) {
				if (currentRS.Id.Equals(metadataReport.Id)) {
					return currentRS;
				}
			}
			throw new ReferenceException(
					"Can not find reference to report structure with id "
							+ metadataReport.Id);
		}
	
		
		public virtual ISdmxDate ReportingBeginDate {
		  get {
				return builtFrom.ReportingBeginDate;
			}
		}
		
	
		
		public virtual ISdmxDate ReportingEndDate {
		  get {
				return builtFrom.ReportingEndDate;
			}
		}
		
	
		
		public virtual ISdmxDate ValidFromDate {
		  get {
				return builtFrom.ValidFromDate;
			}
		}



        public virtual ISdmxDate ValidToDate
        {
		  get {
				return builtFrom.ValidToDate;
			}
		}



        public virtual ISdmxDate PublicationYear
        {
		  get {
				return builtFrom.PublicationYear;
			}
		}
		
	
		
		public virtual Object PublicationPeriod {
		  get {
				return builtFrom.PublicationPeriod;
			}
		}
		
	
		
		public virtual IMetadataStructureDefinitionObject MetadataStructure {
		  get {
				return metadataStructure;
			}
		}
		
	
		
		public virtual IDataProvider DataProvider {
		  get {
				return dataProvider;
			}
		}
		
	
		
		public virtual IList<IMetadataReportBase> Reports {
		  get {
              return new List<IMetadataReportBase>(reports);
			}
		}
		
	
		
		public ISdmxObject BuiltFrom {
		  get {
				return builtFrom;
			}
		}
		
	}
}
