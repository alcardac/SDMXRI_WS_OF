/*******************************************************************************
 * Copyright (c) 2012 Metadata Technology Ltd.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Public License v3.0
 * which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/gpl.html
 * 
 * This file is part of the SDMX Component Library.
 * 
 * The SDMX Component Library is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * The SDMX Component Library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with The SDMX Component Library If not, see <http://www.gnu.org/licenses/>.
 * 
 * Contributors:
 *     Metadata Technology - initial API and implementation
 ******************************************************************************/
// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.2011051901     
// 5/10/2012 7:21 μμ    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
 namespace Org.Sdmxsource.Sdmx.SdmxObjects.Model.BaseObjects.Datastructure {
	
	using Org.Sdmxsource.Sdmx.Api.Model.Objects.Datastructure;
	using Org.Sdmxsource.Sdmx.Api.Model.BaseObjects.Codelist;
	using Org.Sdmxsource.Sdmx.Api.Model.BaseObjects.Conceptscheme;
	using Org.Sdmxsource.Sdmx.Api.Model.BaseObjects.Datastructure;
	using Org.Sdmxsource.Sdmx.SdmxObjects.Exception;
	using Org.Sdmxsource.Sdmx.SdmxObjects.Model.BaseObjects.Base;
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.IO;
	using System.Runtime.CompilerServices;
	
	[Serializable]
	public class DimensionObjectBaseCore : ComponentObjectBaseCore, 
			IDimensionObjectBase {
		private const long serialVersionUID = 1L;

	    private readonly ISet<IHierarchicalCodelistObjectBase> _hcls;
	    private readonly bool _isFrequenyDimension;
	    private readonly bool _isMeasureDimension;
	    private readonly bool _isTimeDimension;
	    private readonly IDimension _dimension;
	
		public DimensionObjectBaseCore(IDimension dimension,
				ICodelistObjectBase codeList, IConceptObjectBase concept) : this(dimension, codeList, concept, null) {
			this._dimension = dimension;
		}
	
		public DimensionObjectBaseCore(IDimension dimension,
				ICodelistObjectBase codeList, IConceptObjectBase concept,
				ISet<IHierarchicalCodelistObjectBase> hcls0) : base(dimension, codeList, concept) {
			this._dimension = dimension;
			this._isFrequenyDimension = dimension.FrequencyDimension;
			this._isMeasureDimension = dimension.MeasureDimension;
			this._isTimeDimension = dimension.TimeDimension;
	
			this._hcls = hcls0;
			if (hcls0 == null) {
				this._hcls = new HashSet<IHierarchicalCodelistObjectBase>();
			}
			if (concept == null) {
				throw new ModelException(Org.Sdmxsource.Sdmx.Api.Constants.ExceptionCode.JavaRequiredObjectNull,
						typeof(IConceptObjectBase).FullName);
			}
		}
	
		
		public ISet<IHierarchicalCodelistObjectBase> HierarchicalCodelists {
		  get {
				return new HashSet<IHierarchicalCodelistObjectBase>(_hcls);
			}
		}
		
	
		
		public bool Frequency {
		  get {
				return this._isFrequenyDimension;
			}
		}
		
	
		
		public virtual bool FrequencyDimension {
		  get {
				return this._isFrequenyDimension;
			}
		}
		
	
		
		public virtual bool MeasureDimension {
		  get {
				return this._isMeasureDimension;
			}
		}
		
	
		
		public virtual bool TimeDimension {
		  get {
				return _isTimeDimension;
			}
		}
		
	
		
		public IDimension BuiltFrom {
		  get {
				return _dimension;
			}
		}
		
	}
}
