<?xml version="1.0" encoding="utf-8"?>
<topic id="e5de6ddd-608f-4af5-9747-722021e26c6d" revisionNumber="1">
  <developerWalkthroughDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->

    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <!-- <autoOutline /> -->

      <para>This article explains some of the basics to get started with parsing and writing SDMX-ML files.</para>
    </introduction>

    <!-- <prerequisites><content>Optional prerequisites info</content></prerequisites> -->

    <!-- One or more procedure or section with procedure -->
    

    <!-- Optional additional procedure or section with procedure -->
    <section address="ParsingSection">
      <title>Parsing SDMX-ML ....</title>
      <content>
        <procedure>
          <title>structure messages...</title>
          <steps class="ordered">
            <step>
              <content>
                <para>
                  Use an implementation of <codeEntityReference>T:Org.Sdmxsource.Sdmx.Api.Manager.Parse.IStructureParsingManager</codeEntityReference>
                </para>
              </content>
            </step>
          </steps>
          <!-- <conclusion>Optional conclusion</conclusion> -->
        </procedure>
        <procedure>
          <title>Registry Interface messages with Structural metadata (e.g QueryStructureResponse)...</title>
          <steps class="ordered">
            <step>
              <content>
                <para>
                  Use an implementation of <codeEntityReference>T:Org.Sdmxsource.Sdmx.Api.Manager.Parse.IStructureParsingManager</codeEntityReference>
                </para>
              </content>
            </step>
          </steps>
          <!-- <conclusion>Optional conclusion</conclusion> -->
        </procedure>
        <procedure>
          <title>Structure Queries (e.g QueryStructureRequest)...</title>
          <steps class="ordered">
            <step>
              <content>
                <para>
                  Use an implementation of <codeEntityReference>T:Org.Sdmxsource.Sdmx.Structureparser.Manager.Parsing.IQueryParsingManager</codeEntityReference>
                </para>
              </content>
            </step>
          </steps>
          <!-- <conclusion>Optional conclusion</conclusion> -->
        </procedure>
        <procedure>
          <title>Data Queries...</title>
          <steps class="ordered">
            <step>
              <content>
                <para>
                  Use an implementation of <codeEntityReference>T:Org.Sdmxsource.Sdmx.Structureparser.Manager.Parsing.IDataQueryParseManager</codeEntityReference>
                </para>
              </content>
            </step>
          </steps>
          <!-- <conclusion>Optional conclusion</conclusion> -->
        </procedure>
        <procedure>
          <title>Dataset or Metadatasets...</title>
          <steps class="ordered">
            <step>
              <content>
                <para>
                  Sorry not implemented.
                </para>
              </content>
            </step>
          </steps>
          <!-- <conclusion>Optional conclusion</conclusion> -->
        </procedure>
      </content>
    </section>
<section address="WritingSection">
      <title>Writing SDMX-ML ....</title>
      <content>
        <procedure>
          <title>structure messages...</title>
          <steps class="ordered">
            <step>
              <content>
                <para>
                  Use an implementation of <codeEntityReference>T:Org.Sdmxsource.Sdmx.Api.Manager.Output.IStructureWritingManager</codeEntityReference>
                </para>
              </content>
            </step>
          </steps>
          <!-- <conclusion>Optional conclusion</conclusion> -->
        </procedure>
        <procedure>
          <title>Registry Interface messages with Structural metadata (e.g QueryStructureResponse)...</title>
          <steps class="ordered">
            <step>
              <content>
                <para>
                  Use an implementation of <codeEntityReference>T:Org.Sdmxsource.Sdmx.Api.Manager.Output.IStructureWritingManager</codeEntityReference>
                </para>
              </content>
            </step>
          </steps>
          <!-- <conclusion>Optional conclusion</conclusion> -->
        </procedure>
        <procedure>
          <title>Structure Queries (e.g QueryStructureRequest)...</title>
          <steps class="ordered">
            <step>
              <content>
                <para>
                  Sorry not implemented yet.
                </para>
              </content>
            </step>
          </steps>
          <!-- <conclusion>Optional conclusion</conclusion> -->
        </procedure>
        <procedure>
          <title>Data Queries...</title>
          <steps class="ordered">
            <step>
              <content>
                <para>
                  Sorry not implemented yet.
                </para>
              </content>
            </step>
          </steps>
          <!-- <conclusion>Optional conclusion</conclusion> -->
        </procedure>
        <procedure>
          <title>Datasets...</title>
          <steps class="ordered">
            <step>
              <content>
                <para>
                 Use an implementation of <codeEntityReference>T:Org.Sdmxsource.Sdmx.Api.Engine.IDataWriterEngine</codeEntityReference>
                </para>
              </content>
            </step>
          </steps>
          <!-- <conclusion>Optional conclusion</conclusion> -->
        </procedure>
         <procedure>
          <title>Datasets (Cross-Sectional SDMX v2.0)...</title>
          <steps class="ordered">
            <step>
              <content>
                <para>
                 Use an implementation of <codeEntityReference>T:Estat.Sri.SdmxDataParser.Engine.ICrossSectionalWriterEngine</codeEntityReference>
                </para>
              </content>
            </step>
          </steps>
          <!-- <conclusion>Optional conclusion</conclusion> -->
        </procedure>
      </content>
    </section>
    <!-- Optional next steps info
    <nextSteps>
      <content><para>Next steps info goes here</para></content>
    </nextSteps>
    -->

    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID">Link text</link>
      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>
      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on CodePlex</linkText>
          <linkAlternateText>Go to CodePlex</linkAlternateText>
          <linkUri>http://shfb.codeplex.com</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerWalkthroughDocument>
</topic>
