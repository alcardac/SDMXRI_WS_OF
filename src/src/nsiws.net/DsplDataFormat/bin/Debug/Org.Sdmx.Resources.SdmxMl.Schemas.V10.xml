<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Org.Sdmx.Resources.SdmxMl.Schemas.V10</name>
    </assembly>
    <members>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.common.TextType">
            <summary>
            <para>
            TextType provides for a set of language-specific alternates to be provided for any human-readable construct in the instance.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.common.TextType.#ctor">
            <summary>
            <para>
            TextType provides for a set of language-specific alternates to be provided for any human-readable construct in the instance.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.common.TextType.lang">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.common.AnnotationType">
            <summary>
            <para>
            AnnotationType provides for non-documentation notes and annotations to be embedded in data and structure messages. It provides optional fields for providing a title, a type description, a URI, and the text of the annotation.
            </para>
            <para>
            Regular expression: (AnnotationTitle?, AnnotationType1?, AnnotationURL?, AnnotationText*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.common.AnnotationType.#ctor">
            <summary>
            <para>
            AnnotationType provides for non-documentation notes and annotations to be embedded in data and structure messages. It provides optional fields for providing a title, a type description, a URI, and the text of the annotation.
            </para>
            <para>
            Regular expression: (AnnotationTitle?, AnnotationType1?, AnnotationURL?, AnnotationText*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.common.AnnotationType.AnnotationTitle">
            <summary>
            <para>
            AnnotationTitle provides a title for the annotation.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AnnotationTitle?, AnnotationType1?, AnnotationURL?, AnnotationText*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.common.AnnotationType.AnnotationType1">
            <summary>
            <para>
            AnnotationType is used to distinguish between annotations designed to support various uses. The types are not enumerated, as these can be specified by the user or creator of the annotations. The definitions and use of annotation types should be documented by their creator.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AnnotationTitle?, AnnotationType1?, AnnotationURL?, AnnotationText*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.common.AnnotationType.AnnotationURL">
            <summary>
            <para>
            This is a URI - typically a URL - which points to an external resource which may contain or supplement the annotation. If a specific behavior is desired, an annotation type should be defined which specifies the use of this field more exactly.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AnnotationTitle?, AnnotationType1?, AnnotationURL?, AnnotationText*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.common.AnnotationType.AnnotationText">
            <summary>
            <para>
            This is a language-specific string which holds the text oif the annotation.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AnnotationTitle?, AnnotationType1?, AnnotationURL?, AnnotationText*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.common.AnnotationsType">
            <summary>
            <para>
            AnnotationsType provides for a list of annotations to be attached to data and structure messages.
            </para>
            <para>
            Regular expression: (Annotation+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.common.AnnotationsType.#ctor">
            <summary>
            <para>
            AnnotationsType provides for a list of annotations to be attached to data and structure messages.
            </para>
            <para>
            Regular expression: (Annotation+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.common.AnnotationsType.Annotation">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Annotation+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.common.TimePeriodType">
            <summary>
            <para>
            TIME_PERIOD is not completely expressable in XML Schema's date type: instead we use the union of dateTime, date, gYearMonth, and gYear. The default name for the concept is TIME_PERIOD. Semi-annual and quarterly periods would be described in terms of their beginning month, weekly periods in terms of their Monday: e.g. the second quarter of 2002 as 2002-04, since it starts with April.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.common.ActionType">
            <summary>
            <para>
            ActionType provides a list of actions, describing the intention of the data transmission from the sender's side. Each action applies to the entire dataset for which it is given.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.common.AlphaType">
            <summary>
            <para>
            This type is used for datatyping the contents of uncoded attributes. It places no restrictions on characters used, but carries the semantic of the key-family designer in a fashion similar to that of the corresponding SDMX_EDI message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.common.AlphaNumericType">
            <summary>
            <para>
            This type is used for datatyping the contents of uncoded attributes. It places no restrictions on characters used, but carries the semantic of the key-family designer in a fashion similar to that of the corresponding SDMX_EDI message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.compact.DataSetType">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.compact.DataSetType.#ctor">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.compact.GroupType">
            <summary>
            <para>
            GroupType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.compact.GroupType.#ctor">
            <summary>
            <para>
            GroupType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.compact.SeriesType">
            <summary>
            <para>
            SeriesType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.compact.SeriesType.#ctor">
            <summary>
            <para>
            SeriesType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.compact.ObsType">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.compact.ObsType.#ctor">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.compact.DataSet">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.compact.DataSet.#ctor">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.compact.DataSet.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V10.compact.DataSetType)">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.compact.Group">
            <summary>
            <para>
            GroupType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.compact.Group.#ctor">
            <summary>
            <para>
            GroupType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.compact.Group.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V10.compact.GroupType)">
            <summary>
            <para>
            GroupType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.compact.Series">
            <summary>
            <para>
            SeriesType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.compact.Series.#ctor">
            <summary>
            <para>
            SeriesType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.compact.Series.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V10.compact.SeriesType)">
            <summary>
            <para>
            SeriesType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.compact.Obs">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.compact.Obs.#ctor">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.compact.Obs.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V10.compact.ObsType)">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.cross.DataSetType">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.cross.DataSetType.#ctor">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.cross.GroupType">
            <summary>
            <para>
            GroupType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. The time attribute holds the value for the time dimension concept as specified in the key family. If time is not used as a concept in the key family, then no value need be provided.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.cross.GroupType.#ctor">
            <summary>
            <para>
            GroupType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. The time attribute holds the value for the time dimension concept as specified in the key family. If time is not used as a concept in the key family, then no value need be provided.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.cross.GroupType.time">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.cross.SectionType">
            <summary>
            <para>
            SectionType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.cross.SectionType.#ctor">
            <summary>
            <para>
            SectionType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.cross.ObsType">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. It is capable of expressing the value and attributes of any single available cross-sectional measure (when extended).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.cross.ObsType.#ctor">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. It is capable of expressing the value and attributes of any single available cross-sectional measure (when extended).
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.cross.DataSet">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.cross.DataSet.#ctor">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.cross.DataSet.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V10.cross.DataSetType)">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.cross.Group">
            <summary>
            <para>
            GroupType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. The time attribute holds the value for the time dimension concept as specified in the key family. If time is not used as a concept in the key family, then no value need be provided.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.cross.Group.#ctor">
            <summary>
            <para>
            GroupType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. The time attribute holds the value for the time dimension concept as specified in the key family. If time is not used as a concept in the key family, then no value need be provided.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.cross.Group.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V10.cross.GroupType)">
            <summary>
            <para>
            GroupType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. The time attribute holds the value for the time dimension concept as specified in the key family. If time is not used as a concept in the key family, then no value need be provided.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.cross.Group.time">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.cross.Section">
            <summary>
            <para>
            SectionType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.cross.Section.#ctor">
            <summary>
            <para>
            SectionType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.cross.Section.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V10.cross.SectionType)">
            <summary>
            <para>
            SectionType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.cross.Obs">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. It is capable of expressing the value and attributes of any single available cross-sectional measure (when extended).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.cross.Obs.#ctor">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. It is capable of expressing the value and attributes of any single available cross-sectional measure (when extended).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.cross.Obs.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V10.cross.ObsType)">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. It is capable of expressing the value and attributes of any single available cross-sectional measure (when extended).
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.DataSetType">
            <summary>
            <para>
            DataSetType defines the structure of a data set. This consists of a key family reference which contains the ID of the key family, and the attribute values attached at the data set level. A DataSet may be used to transmit documentation (that is, only attribute values), data, or a combination of both. If providing only documentation, you need not send the complete set of attributes. If transmitting only data, the Group may be omitted if desired. Uniqueness constraints are defined for the attributes of the data set. If dataset-level attributes are sent in a delete message, then any valid attribute value will indicate that the current attribute value should be deleted. The keyFamilyURI attribute is provided to allow a URI (typically a URL) to be provided, pointing to an SDMX-ML Structure message describing the key family.
            
            </para>
            <para>
            Regular expression: (KeyFamilyRef, Attributes?, (Group* | Series*)*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.DataSetType.#ctor">
            <summary>
            <para>
            DataSetType defines the structure of a data set. This consists of a key family reference which contains the ID of the key family, and the attribute values attached at the data set level. A DataSet may be used to transmit documentation (that is, only attribute values), data, or a combination of both. If providing only documentation, you need not send the complete set of attributes. If transmitting only data, the Group may be omitted if desired. Uniqueness constraints are defined for the attributes of the data set. If dataset-level attributes are sent in a delete message, then any valid attribute value will indicate that the current attribute value should be deleted. The keyFamilyURI attribute is provided to allow a URI (typically a URL) to be provided, pointing to an SDMX-ML Structure message describing the key family.
            
            </para>
            <para>
            Regular expression: (KeyFamilyRef, Attributes?, (Group* | Series*)*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.DataSetType.KeyFamilyRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (KeyFamilyRef, Attributes?, (Group* | Series*)*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.DataSetType.Attributes">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (KeyFamilyRef, Attributes?, (Group* | Series*)*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.DataSetType.Group">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (KeyFamilyRef, Attributes?, (Group* | Series*)*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.DataSetType.Series">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (KeyFamilyRef, Attributes?, (Group* | Series*)*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.DataSetType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (KeyFamilyRef, Attributes?, (Group* | Series*)*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.DataSetType.keyFamilyURI">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.GroupType">
            <summary>
            <para>
            The key values at the group level may be stated explicitly, and all which are not wildcarded listed in GroupKey - they must also all be given a value at the series level. It is not necessary to specify the group key, however, as this may be inferred from the values repeated at the series level. If only documentation (group-level attributes) are being transmitted, however, the GroupKey cannot be omitted. The type attribute contains the name of the declared group in the key family. If any group-level attributes are specified in a delete message, then any valid value supplied for the attribute indicates that the current attribute value should be deleted for the specified attribute.
            
            </para>
            <para>
            Regular expression: (GroupKey?, Attributes?, Series*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.GroupType.#ctor">
            <summary>
            <para>
            The key values at the group level may be stated explicitly, and all which are not wildcarded listed in GroupKey - they must also all be given a value at the series level. It is not necessary to specify the group key, however, as this may be inferred from the values repeated at the series level. If only documentation (group-level attributes) are being transmitted, however, the GroupKey cannot be omitted. The type attribute contains the name of the declared group in the key family. If any group-level attributes are specified in a delete message, then any valid value supplied for the attribute indicates that the current attribute value should be deleted for the specified attribute.
            
            </para>
            <para>
            Regular expression: (GroupKey?, Attributes?, Series*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.GroupType.GroupKey">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (GroupKey?, Attributes?, Series*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.GroupType.Attributes">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (GroupKey?, Attributes?, Series*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.GroupType.Series">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (GroupKey?, Attributes?, Series*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.GroupType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (GroupKey?, Attributes?, Series*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.GroupType.type">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.SeriesType">
            <summary>
            <para>
            SeriesType specifies the structure of a series. This includes all of the key values, values for all the attributes, and the set of observations making up the series content. Messages may transmit only attributes, only data, or both. Regardless, the series key is always required. Key values appear at the Series level in an ordered sequence which corresponds to the key sequence in the key family. A series in a delete message need not supply more than the key, indicating that the entire series identified by that key should be deleted. If series attributes are sent in a delete message, any valid value specified for an attribute indicates that the attribute should be deleted.
            
            </para>
            <para>
            Regular expression: (SeriesKey, Attributes?, Obs*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.SeriesType.#ctor">
            <summary>
            <para>
            SeriesType specifies the structure of a series. This includes all of the key values, values for all the attributes, and the set of observations making up the series content. Messages may transmit only attributes, only data, or both. Regardless, the series key is always required. Key values appear at the Series level in an ordered sequence which corresponds to the key sequence in the key family. A series in a delete message need not supply more than the key, indicating that the entire series identified by that key should be deleted. If series attributes are sent in a delete message, any valid value specified for an attribute indicates that the attribute should be deleted.
            
            </para>
            <para>
            Regular expression: (SeriesKey, Attributes?, Obs*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.SeriesType.SeriesKey">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (SeriesKey, Attributes?, Obs*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.SeriesType.Attributes">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (SeriesKey, Attributes?, Obs*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.SeriesType.Obs">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (SeriesKey, Attributes?, Obs*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.SeriesType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (SeriesKey, Attributes?, Obs*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.SeriesKeyType">
            <summary>
            <para>
            SeriesKeyType defines the contents of a series key. Each non-time dimension must have a value supplied for it, in the order in which the dimensions are specified in the key family. 
            </para>
            <para>
            Regular expression: (Value+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.SeriesKeyType.#ctor">
            <summary>
            <para>
            SeriesKeyType defines the contents of a series key. Each non-time dimension must have a value supplied for it, in the order in which the dimensions are specified in the key family. 
            </para>
            <para>
            Regular expression: (Value+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.SeriesKeyType.Value">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Value+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.ObsType">
            <summary>
            <para>
            ObsType defines the structure of an observation. This includes a time and observation value, as well as values for each of the attributes assigned at the observation level by the key family. In a delete message, only the time need be given, indicating that the observation identified by the key and time should be deleted. For an update message, both time and observation value are required. If any attributes appear in a delete message, any valid value supplied for an attribute indicates that the current value should be deleted.		
            
            </para>
            <para>
            Regular expression: (Time, ObsValue?, Attributes?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.ObsType.#ctor">
            <summary>
            <para>
            ObsType defines the structure of an observation. This includes a time and observation value, as well as values for each of the attributes assigned at the observation level by the key family. In a delete message, only the time need be given, indicating that the observation identified by the key and time should be deleted. For an update message, both time and observation value are required. If any attributes appear in a delete message, any valid value supplied for an attribute indicates that the current value should be deleted.		
            
            </para>
            <para>
            Regular expression: (Time, ObsValue?, Attributes?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.ObsType.Time">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Time, ObsValue?, Attributes?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.ObsType.ObsValue">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Time, ObsValue?, Attributes?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.ObsType.Attributes">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Time, ObsValue?, Attributes?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.ObsType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Time, ObsValue?, Attributes?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.ValuesType">
            <summary>
            <para>
            Regular expression: (Value+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.ValuesType.#ctor">
            <summary>
            <para>
            Regular expression: (Value+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.ValuesType.Value">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Value+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.ValueType">
            <summary>
            <para>
            ValueType is used to assign a single value to a concept, as for attribute values and key values. It has no element content.	
            
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.ValueType.#ctor">
            <summary>
            <para>
            ValueType is used to assign a single value to a concept, as for attribute values and key values. It has no element content.	
            
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.ValueType.concept">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.ValueType.value">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.ObsValueType">
            <summary>
            <para>
            ObsValueType describes the information set for an observation value. This is associated with the primary measure concept declared in the key family.
            
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.ObsValueType.#ctor">
            <summary>
            <para>
            ObsValueType describes the information set for an observation value. This is associated with the primary measure concept declared in the key family.
            
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.ObsValueType.value">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.DataSet">
            <summary>
            <para>
            DataSetType defines the structure of a data set. This consists of a key family reference which contains the ID of the key family, and the attribute values attached at the data set level. A DataSet may be used to transmit documentation (that is, only attribute values), data, or a combination of both. If providing only documentation, you need not send the complete set of attributes. If transmitting only data, the Group may be omitted if desired. Uniqueness constraints are defined for the attributes of the data set. If dataset-level attributes are sent in a delete message, then any valid attribute value will indicate that the current attribute value should be deleted. The keyFamilyURI attribute is provided to allow a URI (typically a URL) to be provided, pointing to an SDMX-ML Structure message describing the key family.
            
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.DataSet.#ctor">
            <summary>
            <para>
            DataSetType defines the structure of a data set. This consists of a key family reference which contains the ID of the key family, and the attribute values attached at the data set level. A DataSet may be used to transmit documentation (that is, only attribute values), data, or a combination of both. If providing only documentation, you need not send the complete set of attributes. If transmitting only data, the Group may be omitted if desired. Uniqueness constraints are defined for the attributes of the data set. If dataset-level attributes are sent in a delete message, then any valid attribute value will indicate that the current attribute value should be deleted. The keyFamilyURI attribute is provided to allow a URI (typically a URL) to be provided, pointing to an SDMX-ML Structure message describing the key family.
            
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.DataSet.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.DataSetType)">
            <summary>
            <para>
            DataSetType defines the structure of a data set. This consists of a key family reference which contains the ID of the key family, and the attribute values attached at the data set level. A DataSet may be used to transmit documentation (that is, only attribute values), data, or a combination of both. If providing only documentation, you need not send the complete set of attributes. If transmitting only data, the Group may be omitted if desired. Uniqueness constraints are defined for the attributes of the data set. If dataset-level attributes are sent in a delete message, then any valid attribute value will indicate that the current attribute value should be deleted. The keyFamilyURI attribute is provided to allow a URI (typically a URL) to be provided, pointing to an SDMX-ML Structure message describing the key family.
            
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.DataSet.KeyFamilyRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (KeyFamilyRef, Attributes?, (Group* | Series*)*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.DataSet.Attributes">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (KeyFamilyRef, Attributes?, (Group* | Series*)*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.DataSet.Group">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (KeyFamilyRef, Attributes?, (Group* | Series*)*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.DataSet.Series">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (KeyFamilyRef, Attributes?, (Group* | Series*)*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.DataSet.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (KeyFamilyRef, Attributes?, (Group* | Series*)*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.generic.DataSet.keyFamilyURI">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.MessageType">
            <summary>
            <para>
            The Message is an abstract type which is used by all of the messages, to allow inheritance of common features. It also provides uniqueness constraints for the header fields.
            </para>
            <para>
            Regular expression: (Header)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.MessageType.#ctor">
            <summary>
            <para>
            The Message is an abstract type which is used by all of the messages, to allow inheritance of common features. It also provides uniqueness constraints for the header fields.
            </para>
            <para>
            Regular expression: (Header)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.MessageType.Header">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Header)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.StructureType">
            <summary>
            <para>
            StructureType defines the contents of a structure message.
            </para>
            <para>
            Regular expression: (Header, Agencies?, CodeLists?, Concepts?, KeyFamilies?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.StructureType.#ctor">
            <summary>
            <para>
            StructureType defines the contents of a structure message.
            </para>
            <para>
            Regular expression: (Header, Agencies?, CodeLists?, Concepts?, KeyFamilies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.StructureType.Agencies">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, Agencies?, CodeLists?, Concepts?, KeyFamilies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.StructureType.CodeLists">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, Agencies?, CodeLists?, Concepts?, KeyFamilies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.StructureType.Concepts">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, Agencies?, CodeLists?, Concepts?, KeyFamilies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.StructureType.KeyFamilies">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, Agencies?, CodeLists?, Concepts?, KeyFamilies?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.GenericDataType">
            <summary>
            <para>
            GenericDataType defines the contents of a GenericData message.
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.GenericDataType.#ctor">
            <summary>
            <para>
            GenericDataType defines the contents of a GenericData message.
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.GenericDataType.DataSet">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.UtilityDataType">
            <summary>
            <para>
            UtilityDataType defines the contents of a UtilityData message.
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.UtilityDataType.#ctor">
            <summary>
            <para>
            UtilityDataType defines the contents of a UtilityData message.
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.UtilityDataType.DataSet">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.CompactDataType">
            <summary>
            <para>
            CompactDataType defines the contents of a CompactData message.
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.CompactDataType.#ctor">
            <summary>
            <para>
            CompactDataType defines the contents of a CompactData message.
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.CompactDataType.DataSet">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.CrossSectionalDataType">
            <summary>
            <para>
            CrossSectionalDataType defines the contents of a CrossSectionalData message.
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.CrossSectionalDataType.#ctor">
            <summary>
            <para>
            CrossSectionalDataType defines the contents of a CrossSectionalData message.
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.CrossSectionalDataType.DataSet">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.QueryMessageType">
            <summary>
            <para>
            QueryMessageType defines the contents of a QueryMessage.
            </para>
            <para>
            Regular expression: (Header, Query)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.QueryMessageType.#ctor">
            <summary>
            <para>
            QueryMessageType defines the contents of a QueryMessage.
            </para>
            <para>
            Regular expression: (Header, Query)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.QueryMessageType.Query">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Header, Query)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.MessageGroupType">
            <summary>
            <para>
            MessageGroupType defines the contents of a MessageGroup message.
            </para>
            <para>
            Regular expression: (Header, (DataSet+ | DataSet1+ | DataSet2+ | DataSet3+))
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.MessageGroupType.#ctor">
            <summary>
            <para>
            MessageGroupType defines the contents of a MessageGroup message.
            </para>
            <para>
            Regular expression: (Header, (DataSet+ | DataSet1+ | DataSet2+ | DataSet3+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.MessageGroupType.DataSet">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (DataSet+ | DataSet1+ | DataSet2+ | DataSet3+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.MessageGroupType.DataSet1">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (DataSet+ | DataSet1+ | DataSet2+ | DataSet3+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.MessageGroupType.DataSet2">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (DataSet+ | DataSet1+ | DataSet2+ | DataSet3+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.MessageGroupType.DataSet3">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (DataSet+ | DataSet1+ | DataSet2+ | DataSet3+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.MessageGroupType.id">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.HeaderType">
            <summary>
            <para>
            HeaderType defines the header fields used for all messages. ID identifies a data flow definition, which, when combined with time, uniquely identifies the data set. Test indicates whather the message is for test purposes or not. Truncated is used in data messages which are responding to Query messages, and is set to true only if the response has been truncated to meet size limits suggested by the defaultLimit attribute in the Query mesage.  Name provides a name for the transmission. Prepared is the date prepared. Sender is information about the sender, and Receiver is information about the receiver. Agency provides the code identifier/abbreviation for the maintenance agency of a data set. Data set id provides an identifier for a contained data set. Action code provides a code for determining whether the enclosed message is an Update or Delete message (not to be used with the UtilityData message). KeyFamilyRef is used to reference a key family for a contained data set, using its id. (This information is required at the DataSet level for some messages, but is provided here as a convenience for those messages which do not require it.) KeyFamilyAgency specifies the agency of the key family using its coded id.  Fields which refer to a contained data set need not be used if the message contains a query or structural information - these messages provide specific fields for holding this information. The ones here are not to be used as defaults. Extracted is a time-stamp from the system rendering the data; ReportingBegin and ReportingEnd provide the time period covered by the message (in the case of data). Source provides human-readable information about the source of the data.
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.HeaderType.#ctor">
            <summary>
            <para>
            HeaderType defines the header fields used for all messages. ID identifies a data flow definition, which, when combined with time, uniquely identifies the data set. Test indicates whather the message is for test purposes or not. Truncated is used in data messages which are responding to Query messages, and is set to true only if the response has been truncated to meet size limits suggested by the defaultLimit attribute in the Query mesage.  Name provides a name for the transmission. Prepared is the date prepared. Sender is information about the sender, and Receiver is information about the receiver. Agency provides the code identifier/abbreviation for the maintenance agency of a data set. Data set id provides an identifier for a contained data set. Action code provides a code for determining whether the enclosed message is an Update or Delete message (not to be used with the UtilityData message). KeyFamilyRef is used to reference a key family for a contained data set, using its id. (This information is required at the DataSet level for some messages, but is provided here as a convenience for those messages which do not require it.) KeyFamilyAgency specifies the agency of the key family using its coded id.  Fields which refer to a contained data set need not be used if the message contains a query or structural information - these messages provide specific fields for holding this information. The ones here are not to be used as defaults. Extracted is a time-stamp from the system rendering the data; ReportingBegin and ReportingEnd provide the time period covered by the message (in the case of data). Source provides human-readable information about the source of the data.
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.HeaderType.ID">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.HeaderType.Test">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.HeaderType.Truncated">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.HeaderType.Name">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.HeaderType.Prepared">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.HeaderType.Sender">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.HeaderType.Receiver">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.HeaderType.KeyFamilyRef">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.HeaderType.KeyFamilyAgency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.HeaderType.DataSetAgency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.HeaderType.DataSetID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.HeaderType.DataSetAction">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.HeaderType.Extracted">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.HeaderType.ReportingBegin">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.HeaderType.ReportingEnd">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.HeaderType.Source">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.PartyType">
            <summary>
            <para>
            PartyType defines the information which is sent about various parties such as senders and receivers of messages. The Name is the ID of the party, and Contact provides contact details.
            </para>
            <para>
            Regular expression: (Name*, Contact*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.PartyType.#ctor">
            <summary>
            <para>
            PartyType defines the information which is sent about various parties such as senders and receivers of messages. The Name is the ID of the party, and Contact provides contact details.
            </para>
            <para>
            Regular expression: (Name*, Contact*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.PartyType.Name">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name*, Contact*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.PartyType.Contact">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name*, Contact*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.PartyType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.ContactType">
            <summary>
            <para>
            ContactType provides defines the contact information about a party. The Name provides a human-readable name.
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.ContactType.#ctor">
            <summary>
            <para>
            ContactType provides defines the contact information about a party. The Name provides a human-readable name.
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.ContactType.Name">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.ContactType.Department">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.ContactType.Role">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.ContactType.Telephone">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.ContactType.Fax">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.ContactType.X400">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.ContactType.URI">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.ContactType.Email">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.HeaderTimeType">
            <summary>
            <para>
            Provides a union type of xs:date and xs:dateTime for the header fields in the message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.Structure">
            <summary>
            <para>
            StructureType defines the contents of a structure message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.Structure.#ctor">
            <summary>
            <para>
            StructureType defines the contents of a structure message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.Structure.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.StructureType)">
            <summary>
            <para>
            StructureType defines the contents of a structure message.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.Structure.Agencies">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, Agencies?, CodeLists?, Concepts?, KeyFamilies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.Structure.CodeLists">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, Agencies?, CodeLists?, Concepts?, KeyFamilies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.Structure.Concepts">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, Agencies?, CodeLists?, Concepts?, KeyFamilies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.Structure.KeyFamilies">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, Agencies?, CodeLists?, Concepts?, KeyFamilies?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.GenericData">
            <summary>
            <para>
            GenericDataType defines the contents of a GenericData message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.GenericData.#ctor">
            <summary>
            <para>
            GenericDataType defines the contents of a GenericData message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.GenericData.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.GenericDataType)">
            <summary>
            <para>
            GenericDataType defines the contents of a GenericData message.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.GenericData.DataSet">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.UtilityData">
            <summary>
            <para>
            UtilityDataType defines the contents of a UtilityData message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.UtilityData.#ctor">
            <summary>
            <para>
            UtilityDataType defines the contents of a UtilityData message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.UtilityData.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.UtilityDataType)">
            <summary>
            <para>
            UtilityDataType defines the contents of a UtilityData message.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.UtilityData.DataSet">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.CompactData">
            <summary>
            <para>
            CompactDataType defines the contents of a CompactData message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.CompactData.#ctor">
            <summary>
            <para>
            CompactDataType defines the contents of a CompactData message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.CompactData.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.CompactDataType)">
            <summary>
            <para>
            CompactDataType defines the contents of a CompactData message.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.CompactData.DataSet">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.CrossSectionalData">
            <summary>
            <para>
            CrossSectionalDataType defines the contents of a CrossSectionalData message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.CrossSectionalData.#ctor">
            <summary>
            <para>
            CrossSectionalDataType defines the contents of a CrossSectionalData message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.CrossSectionalData.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.CrossSectionalDataType)">
            <summary>
            <para>
            CrossSectionalDataType defines the contents of a CrossSectionalData message.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.CrossSectionalData.DataSet">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.QueryMessage">
            <summary>
            <para>
            QueryMessageType defines the contents of a QueryMessage.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.QueryMessage.#ctor">
            <summary>
            <para>
            QueryMessageType defines the contents of a QueryMessage.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.QueryMessage.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.QueryMessageType)">
            <summary>
            <para>
            QueryMessageType defines the contents of a QueryMessage.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.QueryMessage.Query">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Header, Query)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.MessageGroup">
            <summary>
            <para>
            MessageGroupType defines the contents of a MessageGroup message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.MessageGroup.#ctor">
            <summary>
            <para>
            MessageGroupType defines the contents of a MessageGroup message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.MessageGroup.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.MessageGroupType)">
            <summary>
            <para>
            MessageGroupType defines the contents of a MessageGroup message.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.MessageGroup.DataSet">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (DataSet+ | DataSet1+ | DataSet2+ | DataSet3+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.MessageGroup.DataSet1">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (DataSet+ | DataSet1+ | DataSet2+ | DataSet3+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.MessageGroup.DataSet2">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (DataSet+ | DataSet1+ | DataSet2+ | DataSet3+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.MessageGroup.DataSet3">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (DataSet+ | DataSet1+ | DataSet2+ | DataSet3+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.MessageGroup.id">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.Header">
            <summary>
            <para>
            HeaderType defines the header fields used for all messages. ID identifies a data flow definition, which, when combined with time, uniquely identifies the data set. Test indicates whather the message is for test purposes or not. Truncated is used in data messages which are responding to Query messages, and is set to true only if the response has been truncated to meet size limits suggested by the defaultLimit attribute in the Query mesage.  Name provides a name for the transmission. Prepared is the date prepared. Sender is information about the sender, and Receiver is information about the receiver. Agency provides the code identifier/abbreviation for the maintenance agency of a data set. Data set id provides an identifier for a contained data set. Action code provides a code for determining whether the enclosed message is an Update or Delete message (not to be used with the UtilityData message). KeyFamilyRef is used to reference a key family for a contained data set, using its id. (This information is required at the DataSet level for some messages, but is provided here as a convenience for those messages which do not require it.) KeyFamilyAgency specifies the agency of the key family using its coded id.  Fields which refer to a contained data set need not be used if the message contains a query or structural information - these messages provide specific fields for holding this information. The ones here are not to be used as defaults. Extracted is a time-stamp from the system rendering the data; ReportingBegin and ReportingEnd provide the time period covered by the message (in the case of data). Source provides human-readable information about the source of the data.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.Header.#ctor">
            <summary>
            <para>
            HeaderType defines the header fields used for all messages. ID identifies a data flow definition, which, when combined with time, uniquely identifies the data set. Test indicates whather the message is for test purposes or not. Truncated is used in data messages which are responding to Query messages, and is set to true only if the response has been truncated to meet size limits suggested by the defaultLimit attribute in the Query mesage.  Name provides a name for the transmission. Prepared is the date prepared. Sender is information about the sender, and Receiver is information about the receiver. Agency provides the code identifier/abbreviation for the maintenance agency of a data set. Data set id provides an identifier for a contained data set. Action code provides a code for determining whether the enclosed message is an Update or Delete message (not to be used with the UtilityData message). KeyFamilyRef is used to reference a key family for a contained data set, using its id. (This information is required at the DataSet level for some messages, but is provided here as a convenience for those messages which do not require it.) KeyFamilyAgency specifies the agency of the key family using its coded id.  Fields which refer to a contained data set need not be used if the message contains a query or structural information - these messages provide specific fields for holding this information. The ones here are not to be used as defaults. Extracted is a time-stamp from the system rendering the data; ReportingBegin and ReportingEnd provide the time period covered by the message (in the case of data). Source provides human-readable information about the source of the data.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.Header.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.HeaderType)">
            <summary>
            <para>
            HeaderType defines the header fields used for all messages. ID identifies a data flow definition, which, when combined with time, uniquely identifies the data set. Test indicates whather the message is for test purposes or not. Truncated is used in data messages which are responding to Query messages, and is set to true only if the response has been truncated to meet size limits suggested by the defaultLimit attribute in the Query mesage.  Name provides a name for the transmission. Prepared is the date prepared. Sender is information about the sender, and Receiver is information about the receiver. Agency provides the code identifier/abbreviation for the maintenance agency of a data set. Data set id provides an identifier for a contained data set. Action code provides a code for determining whether the enclosed message is an Update or Delete message (not to be used with the UtilityData message). KeyFamilyRef is used to reference a key family for a contained data set, using its id. (This information is required at the DataSet level for some messages, but is provided here as a convenience for those messages which do not require it.) KeyFamilyAgency specifies the agency of the key family using its coded id.  Fields which refer to a contained data set need not be used if the message contains a query or structural information - these messages provide specific fields for holding this information. The ones here are not to be used as defaults. Extracted is a time-stamp from the system rendering the data; ReportingBegin and ReportingEnd provide the time period covered by the message (in the case of data). Source provides human-readable information about the source of the data.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.Header.ID">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.Header.Test">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.Header.Truncated">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.Header.Name">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.Header.Prepared">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.Header.Sender">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.Header.Receiver">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.Header.KeyFamilyRef">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.Header.KeyFamilyAgency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.Header.DataSetAgency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.Header.DataSetID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.Header.DataSetAction">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.Header.Extracted">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.Header.ReportingBegin">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.Header.ReportingEnd">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.message.Header.Source">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AgenciesType">
            <summary>
            <para>
            AgenciesType contains one or more Agencies.
            </para>
            <para>
            Regular expression: (Agency+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AgenciesType.#ctor">
            <summary>
            <para>
            AgenciesType contains one or more Agencies.
            </para>
            <para>
            Regular expression: (Agency+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AgenciesType.Agency">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Agency+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AgencyType">
            <summary>
            <para>
            AgencyType provides a structure for describing agencies and their contact information. The id attribute carries a code identifying the agency. The version attribute indicates the version of the agency description. The uri attribute provides a uri for an alternate way of identifying the agency information (typically a URL resolving to an agency described in SDMX-ML). Name is an element which provides for a human-readable name for the organization. MaintenanceContact provides contact information for the agency when acting as a MaintenanceAgency; CollectorContact does the same when the agency is acting as a statistics collector; DisseminatorContact for when the agency functions as a statistics disseminator; and ReporterContact for when the Agency is functioning as a statistics reporter. OtherContact is used to describe any other role. Note that the Role field in the contact information structure should only be specified for OtherContact. It is allowable to reference full Agency information by using (at a minimum) only the id, name, and uri fields, with the uri pointing to an external description in a valid SDMX-ML Structure message which provides more complete information. (This is termed an "external reference".) If an external reference is being made, the isExternalReference attribute must be set to “true”.
            </para>
            <para>
            Regular expression: (Name+, MaintenanceContact?, CollectorContact?, DisseminatorContact?, ReporterContact?, OtherContact*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AgencyType.#ctor">
            <summary>
            <para>
            AgencyType provides a structure for describing agencies and their contact information. The id attribute carries a code identifying the agency. The version attribute indicates the version of the agency description. The uri attribute provides a uri for an alternate way of identifying the agency information (typically a URL resolving to an agency described in SDMX-ML). Name is an element which provides for a human-readable name for the organization. MaintenanceContact provides contact information for the agency when acting as a MaintenanceAgency; CollectorContact does the same when the agency is acting as a statistics collector; DisseminatorContact for when the agency functions as a statistics disseminator; and ReporterContact for when the Agency is functioning as a statistics reporter. OtherContact is used to describe any other role. Note that the Role field in the contact information structure should only be specified for OtherContact. It is allowable to reference full Agency information by using (at a minimum) only the id, name, and uri fields, with the uri pointing to an external description in a valid SDMX-ML Structure message which provides more complete information. (This is termed an "external reference".) If an external reference is being made, the isExternalReference attribute must be set to “true”.
            </para>
            <para>
            Regular expression: (Name+, MaintenanceContact?, CollectorContact?, DisseminatorContact?, ReporterContact?, OtherContact*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AgencyType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, MaintenanceContact?, CollectorContact?, DisseminatorContact?, ReporterContact?, OtherContact*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AgencyType.MaintenanceContact">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, MaintenanceContact?, CollectorContact?, DisseminatorContact?, ReporterContact?, OtherContact*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AgencyType.CollectorContact">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, MaintenanceContact?, CollectorContact?, DisseminatorContact?, ReporterContact?, OtherContact*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AgencyType.DisseminatorContact">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, MaintenanceContact?, CollectorContact?, DisseminatorContact?, ReporterContact?, OtherContact*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AgencyType.ReporterContact">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, MaintenanceContact?, CollectorContact?, DisseminatorContact?, ReporterContact?, OtherContact*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AgencyType.OtherContact">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, MaintenanceContact?, CollectorContact?, DisseminatorContact?, ReporterContact?, OtherContact*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AgencyType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AgencyType.version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AgencyType.uri">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AgencyType.isExternalReference">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ContactType">
            <summary>
            <para>
            ContactType provides defines the contact information about a party. The id element is used to carry user id information for the contact, whereas Name provides a human-readable name.
            </para>
            <para>
            Regular expression: (Name*, id?, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ContactType.#ctor">
            <summary>
            <para>
            ContactType provides defines the contact information about a party. The id element is used to carry user id information for the contact, whereas Name provides a human-readable name.
            </para>
            <para>
            Regular expression: (Name*, id?, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ContactType.Name">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name*, id?, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ContactType.id">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name*, id?, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ContactType.Department">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name*, id?, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ContactType.Role">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name*, id?, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ContactType.Telephone">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, id?, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ContactType.Fax">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, id?, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ContactType.X400">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, id?, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ContactType.URI">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, id?, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ContactType.Email">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, id?, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.CodeListsType">
            <summary>
            <para>
            CodelistsType contains one or more codelists. It also defines uniqueness constraints for codelist IDs.
            </para>
            <para>
            Regular expression: (CodeList*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.CodeListsType.#ctor">
            <summary>
            <para>
            CodelistsType contains one or more codelists. It also defines uniqueness constraints for codelist IDs.
            </para>
            <para>
            Regular expression: (CodeList*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.CodeListsType.CodeList">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (CodeList*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.CodeListType">
            <summary>
            <para>
            CodeListType defines the contents of a codelist. This includes an ID, the agency which maintains the codelist, its version, and a URL where it is located. Elements are provided for supplying a name and the codes. It is acceptable to provide only the id, name, and uri fields at a minimum, with the uri pointing to an SDMX Structure message containing complete details on the codelist. (This is termed an "external reference".) If an external reference is being made, the isExternalReference attribute must be set to “true”.
            </para>
            <para>
            Regular expression: (Name+, Code*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.CodeListType.#ctor">
            <summary>
            <para>
            CodeListType defines the contents of a codelist. This includes an ID, the agency which maintains the codelist, its version, and a URL where it is located. Elements are provided for supplying a name and the codes. It is acceptable to provide only the id, name, and uri fields at a minimum, with the uri pointing to an SDMX Structure message containing complete details on the codelist. (This is termed an "external reference".) If an external reference is being made, the isExternalReference attribute must be set to “true”.
            </para>
            <para>
            Regular expression: (Name+, Code*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.CodeListType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Code*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.CodeListType.Code">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Code*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.CodeListType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Code*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.CodeListType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.CodeListType.agency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.CodeListType.version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.CodeListType.uri">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.CodeListType.isExternalReference">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.CodeType">
            <summary>
            <para>
            CodeType defines the structure of a code. This allows for plain-text descriptions as element content, and the coded value as the value attribute. (Short descriptions or other presentational information may be added using Annotations with an indicative type field [eg, "ShortDescription"]).
            </para>
            <para>
            Regular expression: (Description+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.CodeType.#ctor">
            <summary>
            <para>
            CodeType defines the structure of a code. This allows for plain-text descriptions as element content, and the coded value as the value attribute. (Short descriptions or other presentational information may be added using Annotations with an indicative type field [eg, "ShortDescription"]).
            </para>
            <para>
            Regular expression: (Description+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.CodeType.Description">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Description+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.CodeType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Description+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.CodeType.value">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ConceptsType">
            <summary>
            <para>
            ConceptsType defines the structure of a set of Concepts.
            </para>
            <para>
            Regular expression: (Concept+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ConceptsType.#ctor">
            <summary>
            <para>
            ConceptsType defines the structure of a set of Concepts.
            </para>
            <para>
            Regular expression: (Concept+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ConceptsType.Concept">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Concept+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ConceptType">
            <summary>
            <para>
            ConceptType specifies the information provided for a single concept. This includes a name, as element content, and an ID. It is possible to use the uri field to point to the location of an SDMX-ML Structure message which contains a more detailed version of the concept. (This is termed an "external reference".) If an external reference is being made, the isExternalReference attribute must be set to "true".
            </para>
            <para>
            Regular expression: (Name+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ConceptType.#ctor">
            <summary>
            <para>
            ConceptType specifies the information provided for a single concept. This includes a name, as element content, and an ID. It is possible to use the uri field to point to the location of an SDMX-ML Structure message which contains a more detailed version of the concept. (This is termed an "external reference".) If an external reference is being made, the isExternalReference attribute must be set to "true".
            </para>
            <para>
            Regular expression: (Name+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ConceptType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ConceptType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ConceptType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ConceptType.agency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ConceptType.version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ConceptType.uri">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ConceptType.isExternalReference">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.KeyFamiliesType">
            <summary>
            <para>
            KeyFamiliesType defines the structure for describing one or more key families. It also provides uniqueness constraints for each of the key family IDs.
            </para>
            <para>
            Regular expression: (KeyFamily+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.KeyFamiliesType.#ctor">
            <summary>
            <para>
            KeyFamiliesType defines the structure for describing one or more key families. It also provides uniqueness constraints for each of the key family IDs.
            </para>
            <para>
            Regular expression: (KeyFamily+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.KeyFamiliesType.KeyFamily">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (KeyFamily+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.KeyFamilyType">
            <summary>
            <para>
            KeyFamilyType defines the structure of a key-family description. This includes the name and a set of components (attributes and dimensions) as element content, and an ID, agency, version, and the URL where located as attributes.
            </para>
            <para>
            Regular expression: (Name+, Components, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.KeyFamilyType.#ctor">
            <summary>
            <para>
            KeyFamilyType defines the structure of a key-family description. This includes the name and a set of components (attributes and dimensions) as element content, and an ID, agency, version, and the URL where located as attributes.
            </para>
            <para>
            Regular expression: (Name+, Components, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.KeyFamilyType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Components, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.KeyFamilyType.Components">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Name+, Components, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.KeyFamilyType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Components, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.KeyFamilyType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.KeyFamilyType.agency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.KeyFamilyType.version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.KeyFamilyType.uri">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ComponentsType">
            <summary>
            <para>
            ComponentsType describes the dimensions, groups, attributes, and measures of the key family. If TimeDimension is included in the key family - which it must be if time series formats for the data (GenericData, CompactData, and UtilityData formats) are to be used - then there must also be a frequency dimension. 
            </para>
            <para>
            Regular expression: (Dimension*, TimeDimension?, Group*, PrimaryMeasure, CrossSectionalMeasure*, Attribute*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ComponentsType.#ctor">
            <summary>
            <para>
            ComponentsType describes the dimensions, groups, attributes, and measures of the key family. If TimeDimension is included in the key family - which it must be if time series formats for the data (GenericData, CompactData, and UtilityData formats) are to be used - then there must also be a frequency dimension. 
            </para>
            <para>
            Regular expression: (Dimension*, TimeDimension?, Group*, PrimaryMeasure, CrossSectionalMeasure*, Attribute*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ComponentsType.Dimension">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Dimension*, TimeDimension?, Group*, PrimaryMeasure, CrossSectionalMeasure*, Attribute*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ComponentsType.TimeDimension">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Dimension*, TimeDimension?, Group*, PrimaryMeasure, CrossSectionalMeasure*, Attribute*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ComponentsType.Group">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Dimension*, TimeDimension?, Group*, PrimaryMeasure, CrossSectionalMeasure*, Attribute*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ComponentsType.PrimaryMeasure">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Dimension*, TimeDimension?, Group*, PrimaryMeasure, CrossSectionalMeasure*, Attribute*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ComponentsType.CrossSectionalMeasure">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Dimension*, TimeDimension?, Group*, PrimaryMeasure, CrossSectionalMeasure*, Attribute*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.ComponentsType.Attribute">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Dimension*, TimeDimension?, Group*, PrimaryMeasure, CrossSectionalMeasure*, Attribute*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.DimensionType">
            <summary>
            <para>
            DimensionType describes the structure of non-Time dimensions. The order of their declaration is significant: it is used to describe the order in which they will appear in data formats for which key values are supplied in an ordered fashion (exclusive of the Time dimension, which is not represented as a member of the ordered key). In the case of key families which are used for cross-sectional data as well as time-series data, any "measure" dimension must have the value of the "isMeasureDimension" attribute set to "true". If a dimension is declared to be a measure dimension, it must have a measure declared elsewhere in the key family which corresponds to each value in the codelist which represents it. Any dimension which corresponds to the frequency concept must have its isFrequencyDimension attribute set to "true". There may only be one such dimension in any key family. (Conventionally, it is the first dimension in the ordered set of dimensions - the key.) If a key family describes cross-sectional data, then for each non-time dimension, the crossSectionalAttachDataSet, crossSectionalAttachGroup, crossSectionalAttachSection, and crossSectionalAttachObservation attributes must be given values. A value of "true" for any of these attributes indicates that the dimension may be provided a value at the indicated level within the cross-sectional structure. Note that these attributes do not need to be provided for any dimension with the isFrequencyDimension set to "true", as these dimensions are always attached only at the group level, as is time. A key family designed for cross-sectional use must be structured such that any observation's complete key can be unambiguously described by taking each dimension value from its observation level, section level, group level, and data set level, and ordered according to the sequence given in the key family. 
            </para>
            <para>
            Regular expression: (Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.DimensionType.#ctor">
            <summary>
            <para>
            DimensionType describes the structure of non-Time dimensions. The order of their declaration is significant: it is used to describe the order in which they will appear in data formats for which key values are supplied in an ordered fashion (exclusive of the Time dimension, which is not represented as a member of the ordered key). In the case of key families which are used for cross-sectional data as well as time-series data, any "measure" dimension must have the value of the "isMeasureDimension" attribute set to "true". If a dimension is declared to be a measure dimension, it must have a measure declared elsewhere in the key family which corresponds to each value in the codelist which represents it. Any dimension which corresponds to the frequency concept must have its isFrequencyDimension attribute set to "true". There may only be one such dimension in any key family. (Conventionally, it is the first dimension in the ordered set of dimensions - the key.) If a key family describes cross-sectional data, then for each non-time dimension, the crossSectionalAttachDataSet, crossSectionalAttachGroup, crossSectionalAttachSection, and crossSectionalAttachObservation attributes must be given values. A value of "true" for any of these attributes indicates that the dimension may be provided a value at the indicated level within the cross-sectional structure. Note that these attributes do not need to be provided for any dimension with the isFrequencyDimension set to "true", as these dimensions are always attached only at the group level, as is time. A key family designed for cross-sectional use must be structured such that any observation's complete key can be unambiguously described by taking each dimension value from its observation level, section level, group level, and data set level, and ordered according to the sequence given in the key family. 
            </para>
            <para>
            Regular expression: (Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.DimensionType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.DimensionType.concept">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.DimensionType.codelist">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.DimensionType.isMeasureDimension">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.DimensionType.isFrequencyDimension">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.DimensionType.crossSectionalAttachDataSet">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.DimensionType.crossSectionalAttachGroup">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.DimensionType.crossSectionalAttachSection">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.DimensionType.crossSectionalAttachObservation">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.TimeDimensionType">
            <summary>
            <para>
            TimeDimensionType describes the special Time dimension. Any key family which will be used for time-series formats (GenericData, CompactData, and UtilityData) must include the time dimension. Any key family which uses the time dimension must also declare a frequency dimension, conventionally the first dimension in the key (the set of ordered non-time dimensions). A TextFormat element may be included for indicating the representation of time in some non-XML data formats. The concept attribute must contain the concept name of the time concept. The codelist attribute may provide the value of the concept name of a codelist if needed.
            </para>
            <para>
            Regular expression: (TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.TimeDimensionType.#ctor">
            <summary>
            <para>
            TimeDimensionType describes the special Time dimension. Any key family which will be used for time-series formats (GenericData, CompactData, and UtilityData) must include the time dimension. Any key family which uses the time dimension must also declare a frequency dimension, conventionally the first dimension in the key (the set of ordered non-time dimensions). A TextFormat element may be included for indicating the representation of time in some non-XML data formats. The concept attribute must contain the concept name of the time concept. The codelist attribute may provide the value of the concept name of a codelist if needed.
            </para>
            <para>
            Regular expression: (TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.TimeDimensionType.TextFormat">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.TimeDimensionType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.TimeDimensionType.concept">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.TimeDimensionType.codelist">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.GroupType">
            <summary>
            <para>
            GroupType declares any useful groupings of data, based on a selection of the declared (non-Time) dimensions (indicated with the DimensionRef element) which form partial keys to which attributes may be attached. The value of the DimensionRef element is the concept of the dimension - that is, the value of the dimension's concept attribute. Thus, if data is to be presented as a set of time series which vary only according to their differing frequencies, a "sibling group" would be declared, with all dimensions except the frequency dimension in it. If data is commonly grouped as a set of all countries, then a "Country Group" could be declared, with all dimensions except the country dimension forming part of the partial key. Any dimension which is not part of a group has a value which varies at the series level (for time series formats). There is no requirement to have only a single dimension ommitted from a partial key - it can be any subset of the set of ordered dimensions (that is, all dimensions except the time dimension, which may never be declared as belonging to a group partial key). All groups declared in the key family must be unique - that is, you may not have duplicate partial keys. All groups must also be given unique names (id attributes). Although it is conventional to declare dimensions in the same order as they are declared in the ordered key, there is no requirement to do so - the ordering of the values of the key are taken from the order in which the dimensions are declared. The Description element provides a human-readable description (potentially in multiple, parallel languages) of the group. Note that for cross-sectional formats, the named group mechanism is not used, but is instead replaced by a generic group which carries time and frequency values with it, and allows for any available group-level attributes to be specified if desired. 
            </para>
            <para>
            Regular expression: (DimensionRef+, Description*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.GroupType.#ctor">
            <summary>
            <para>
            GroupType declares any useful groupings of data, based on a selection of the declared (non-Time) dimensions (indicated with the DimensionRef element) which form partial keys to which attributes may be attached. The value of the DimensionRef element is the concept of the dimension - that is, the value of the dimension's concept attribute. Thus, if data is to be presented as a set of time series which vary only according to their differing frequencies, a "sibling group" would be declared, with all dimensions except the frequency dimension in it. If data is commonly grouped as a set of all countries, then a "Country Group" could be declared, with all dimensions except the country dimension forming part of the partial key. Any dimension which is not part of a group has a value which varies at the series level (for time series formats). There is no requirement to have only a single dimension ommitted from a partial key - it can be any subset of the set of ordered dimensions (that is, all dimensions except the time dimension, which may never be declared as belonging to a group partial key). All groups declared in the key family must be unique - that is, you may not have duplicate partial keys. All groups must also be given unique names (id attributes). Although it is conventional to declare dimensions in the same order as they are declared in the ordered key, there is no requirement to do so - the ordering of the values of the key are taken from the order in which the dimensions are declared. The Description element provides a human-readable description (potentially in multiple, parallel languages) of the group. Note that for cross-sectional formats, the named group mechanism is not used, but is instead replaced by a generic group which carries time and frequency values with it, and allows for any available group-level attributes to be specified if desired. 
            </para>
            <para>
            Regular expression: (DimensionRef+, Description*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.GroupType.DimensionRef">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (DimensionRef+, Description*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.GroupType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DimensionRef+, Description*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.GroupType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (DimensionRef+, Description*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.GroupType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AttributeType">
            <summary>
            <para>
            AttributeType describes the structure of attributes declared in the key family. If the codelist attribute is not used, then the attribute is uncoded. You may use the TextFormat element to specify constraints on the value of the uncoded attribute. The concept attribute contains the name of a concept. The codelist attribute supplies the id value of a codelist. The attachmentLevel attribute indicates the level to which the attribute is attached in time-series formats (GenericData, CompactData, and UtilityData formats). The assignmentStatus attribute indicates whether a value must be provided for the attribute when sending documentation along with the data. The AttachmentGroup element is included only when the attribute is attached at the Group level, to indicate which declared group or groups the attribute may be attached to. For each such group, an AttachmentGroup element should appear, with the content of the element being the name of the group. The AttachmentMeasure element is similar, indicating for cross-sectional formats which declared measure or measures the attribute attached at the observation level may be attached to. The isTimeFormat attribute indicates that the attribute represents the concept of time format (typically a mandatory series-level attribute with a codelist representation taken from ISO 8601). For key families not used to structure cross-sectional formats, this element may be ommitted. Each such element contains the name of the declared measure. The attributes crossSectionalAttachDataSet, crossSectionalAttachGroup, crossSectionalAttachSection, and crossSectionalAttachObservation indicate what the attachment level or levels are for cross-sectional data formats, and may be ommitted if the key family will not be used to structure them. A value of "true" indicates that it is permissible to provide a value for the attribute at the specified level within the structure. Note that all groups in cross-sectional formats are replaced by a generic group which has any values for time and frequency, and allows any group-level attributes to be attached to it. 
            </para>
            <para>
            Regular expression: (TextFormat?, AttachmentGroup*, AttachmentMeasure*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AttributeType.#ctor">
            <summary>
            <para>
            AttributeType describes the structure of attributes declared in the key family. If the codelist attribute is not used, then the attribute is uncoded. You may use the TextFormat element to specify constraints on the value of the uncoded attribute. The concept attribute contains the name of a concept. The codelist attribute supplies the id value of a codelist. The attachmentLevel attribute indicates the level to which the attribute is attached in time-series formats (GenericData, CompactData, and UtilityData formats). The assignmentStatus attribute indicates whether a value must be provided for the attribute when sending documentation along with the data. The AttachmentGroup element is included only when the attribute is attached at the Group level, to indicate which declared group or groups the attribute may be attached to. For each such group, an AttachmentGroup element should appear, with the content of the element being the name of the group. The AttachmentMeasure element is similar, indicating for cross-sectional formats which declared measure or measures the attribute attached at the observation level may be attached to. The isTimeFormat attribute indicates that the attribute represents the concept of time format (typically a mandatory series-level attribute with a codelist representation taken from ISO 8601). For key families not used to structure cross-sectional formats, this element may be ommitted. Each such element contains the name of the declared measure. The attributes crossSectionalAttachDataSet, crossSectionalAttachGroup, crossSectionalAttachSection, and crossSectionalAttachObservation indicate what the attachment level or levels are for cross-sectional data formats, and may be ommitted if the key family will not be used to structure them. A value of "true" indicates that it is permissible to provide a value for the attribute at the specified level within the structure. Note that all groups in cross-sectional formats are replaced by a generic group which has any values for time and frequency, and allows any group-level attributes to be attached to it. 
            </para>
            <para>
            Regular expression: (TextFormat?, AttachmentGroup*, AttachmentMeasure*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AttributeType.TextFormat">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (TextFormat?, AttachmentGroup*, AttachmentMeasure*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AttributeType.AttachmentGroup">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (TextFormat?, AttachmentGroup*, AttachmentMeasure*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AttributeType.AttachmentMeasure">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (TextFormat?, AttachmentGroup*, AttachmentMeasure*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AttributeType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (TextFormat?, AttachmentGroup*, AttachmentMeasure*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AttributeType.concept">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AttributeType.codelist">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AttributeType.attachmentLevel">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AttributeType.assignmentStatus">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AttributeType.isTimeFormat">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AttributeType.crossSectionalAttachDataSet">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AttributeType.crossSectionalAttachGroup">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AttributeType.crossSectionalAttachSection">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AttributeType.crossSectionalAttachObservation">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.TextFormatType">
            <summary>
            <para>
            TextFormatType defines the information for describing a text format. If the TextType attribute is not specified, any valid characters may be included in the text field. (It corresponds to the xs:string datatype of W3C XML Schema.) In this case, the Length attribute is interpreted as a maximum length. Otherwise, length provides either maximum or set string lengths as per the TextType attribute value. The decimals attribute provides the precision (the number of decimal places) that numeric data must use. This is an integer indicating the number of digits to occur after the decimal separator ("."). If used, a missing digit in numeric data is to be interpreted as a 0. If not used, no restrictions on the number of digits provided in data exist for the purposes of exchange.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.TextFormatType.#ctor">
            <summary>
            <para>
            TextFormatType defines the information for describing a text format. If the TextType attribute is not specified, any valid characters may be included in the text field. (It corresponds to the xs:string datatype of W3C XML Schema.) In this case, the Length attribute is interpreted as a maximum length. Otherwise, length provides either maximum or set string lengths as per the TextType attribute value. The decimals attribute provides the precision (the number of decimal places) that numeric data must use. This is an integer indicating the number of digits to occur after the decimal separator ("."). If used, a missing digit in numeric data is to be interpreted as a 0. If not used, no restrictions on the number of digits provided in data exist for the purposes of exchange.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.TextFormatType.length">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.TextFormatType.decimals">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.TextFormatType.TextType">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.TextTypeType">
            <summary>
            <para>
            TextTypeType provides an enumerated list of the types of characters allowed in a TextFormat field.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.PrimaryMeasureType">
            <summary>
            <para>
            PrimaryMeasureType describes the observation values for all presentations of the data, except those cross-sectional formats which have multiple measures (for which a set of cross-sectional measures are used instead). The concept attribute points to the unique concept represented by the measure. The PrimaryMeasure  is conventionally associated with the OBS-VALUE concept. 
            </para>
            <para>
            Regular expression: (Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.PrimaryMeasureType.#ctor">
            <summary>
            <para>
            PrimaryMeasureType describes the observation values for all presentations of the data, except those cross-sectional formats which have multiple measures (for which a set of cross-sectional measures are used instead). The concept attribute points to the unique concept represented by the measure. The PrimaryMeasure  is conventionally associated with the OBS-VALUE concept. 
            </para>
            <para>
            Regular expression: (Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.PrimaryMeasureType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.PrimaryMeasureType.concept">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.CrossSectionalMeasureType">
            <summary>
            <para>
            CrossSectionalMeasureType describes the observation values for multiple-measure cross-sectional data formats. For non-cross sectional key families, it is not necesary to specify any cross-sectional measures.The concept attribute points to the unique concept represented by the measure. The measureDimension attribute contains the concept name of the measure dimension. The code attribute contains the value of its corresponding code in the codelist used to represent the measure dimension. A CrossSectionalMeasure must be declared for each code in the codelist used to represent the measure dimension - these will replace the primary measure for multiple-measure cross-sectional data formats.
            </para>
            <para>
            Regular expression: (Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.CrossSectionalMeasureType.#ctor">
            <summary>
            <para>
            CrossSectionalMeasureType describes the observation values for multiple-measure cross-sectional data formats. For non-cross sectional key families, it is not necesary to specify any cross-sectional measures.The concept attribute points to the unique concept represented by the measure. The measureDimension attribute contains the concept name of the measure dimension. The code attribute contains the value of its corresponding code in the codelist used to represent the measure dimension. A CrossSectionalMeasure must be declared for each code in the codelist used to represent the measure dimension - these will replace the primary measure for multiple-measure cross-sectional data formats.
            </para>
            <para>
            Regular expression: (Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.CrossSectionalMeasureType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.CrossSectionalMeasureType.concept">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.CrossSectionalMeasureType.measureDimension">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.CrossSectionalMeasureType.code">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.DataSetType">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes and elements to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.DataSetType.#ctor">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes and elements to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.GroupType">
            <summary>
            <para>
            GroupType acts as a structural base, which is renamed and extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.GroupType.#ctor">
            <summary>
            <para>
            GroupType acts as a structural base, which is renamed and extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.SeriesType">
            <summary>
            <para>
            SeriesType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.SeriesType.#ctor">
            <summary>
            <para>
            SeriesType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.KeyType">
            <summary>
            <para>
            KeyType describes the abstract type which defines the Key element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.KeyType.#ctor">
            <summary>
            <para>
            KeyType describes the abstract type which defines the Key element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.ObsType">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.ObsType.#ctor">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.DataSet">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes and elements to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.DataSet.#ctor">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes and elements to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.DataSet.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.DataSetType)">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes and elements to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.Group">
            <summary>
            <para>
            GroupType acts as a structural base, which is renamed and extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.Group.#ctor">
            <summary>
            <para>
            GroupType acts as a structural base, which is renamed and extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.Group.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.GroupType)">
            <summary>
            <para>
            GroupType acts as a structural base, which is renamed and extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.Series">
            <summary>
            <para>
            SeriesType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.Series.#ctor">
            <summary>
            <para>
            SeriesType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.Series.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.SeriesType)">
            <summary>
            <para>
            SeriesType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.Key">
            <summary>
            <para>
            KeyType describes the abstract type which defines the Key element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.Key.#ctor">
            <summary>
            <para>
            KeyType describes the abstract type which defines the Key element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.Key.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.KeyType)">
            <summary>
            <para>
            KeyType describes the abstract type which defines the Key element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.Obs">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.Obs.#ctor">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.Obs.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V10.utility.ObsType)">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.QueryType">
            <summary>
            <para>
            The Query element is a top-level element for this namespace, which is referenced by the SDMX message envelope, or could be put inside another envelope, such as SOAP. It contains a query. The defaultLimit attribute is the suggested maximum response size in kilobytes.
            </para>
            <para>
            Regular expression: (DataWhere*, KeyFamilyWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.QueryType.#ctor">
            <summary>
            <para>
            The Query element is a top-level element for this namespace, which is referenced by the SDMX message envelope, or could be put inside another envelope, such as SOAP. It contains a query. The defaultLimit attribute is the suggested maximum response size in kilobytes.
            </para>
            <para>
            Regular expression: (DataWhere*, KeyFamilyWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.QueryType.DataWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, KeyFamilyWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.QueryType.KeyFamilyWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, KeyFamilyWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.QueryType.CodelistWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, KeyFamilyWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.QueryType.ConceptWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, KeyFamilyWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.QueryType.AgencyWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, KeyFamilyWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.QueryType.defaultLimit">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.DataWhereType">
            <summary>
            <para>
            The DataWhere element representes a query for data. It contains all of the clauses in that query, represented by its child elements.
            </para>
            <para>
            Regular expression: (DataSet | KeyFamily | Dimension | Attribute | Codelist | Time | Category | Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.DataWhereType.#ctor">
            <summary>
            <para>
            The DataWhere element representes a query for data. It contains all of the clauses in that query, represented by its child elements.
            </para>
            <para>
            Regular expression: (DataSet | KeyFamily | Dimension | Attribute | Codelist | Time | Category | Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.DataWhereType.DataSet">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataSet | KeyFamily | Dimension | Attribute | Codelist | Time | Category | Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.DataWhereType.KeyFamily">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataSet | KeyFamily | Dimension | Attribute | Codelist | Time | Category | Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.DataWhereType.Dimension">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataSet | KeyFamily | Dimension | Attribute | Codelist | Time | Category | Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.DataWhereType.Attribute">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataSet | KeyFamily | Dimension | Attribute | Codelist | Time | Category | Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.DataWhereType.Codelist">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataSet | KeyFamily | Dimension | Attribute | Codelist | Time | Category | Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.DataWhereType.Time">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataSet | KeyFamily | Dimension | Attribute | Codelist | Time | Category | Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.DataWhereType.Category">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataSet | KeyFamily | Dimension | Attribute | Codelist | Time | Category | Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.DataWhereType.Concept">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataSet | KeyFamily | Dimension | Attribute | Codelist | Time | Category | Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.DataWhereType.Agency">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataSet | KeyFamily | Dimension | Attribute | Codelist | Time | Category | Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.DataWhereType.Or">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataSet | KeyFamily | Dimension | Attribute | Codelist | Time | Category | Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.DataWhereType.And">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataSet | KeyFamily | Dimension | Attribute | Codelist | Time | Category | Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.AndType">
            <summary>
            <para>
             For the And element, each of its immediate child elements represent clauses all of which represent conditions which must be satisfied. If children are A, B, and C, then any legitimate response will meet conditions A, B, and C.
            </para>
            <para>
            Regular expression: (DataSet*, KeyFamily*, Dimension*, Attribute*, Codelist*, Time*, Category*, Concept*, Agency*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.AndType.#ctor">
            <summary>
            <para>
             For the And element, each of its immediate child elements represent clauses all of which represent conditions which must be satisfied. If children are A, B, and C, then any legitimate response will meet conditions A, B, and C.
            </para>
            <para>
            Regular expression: (DataSet*, KeyFamily*, Dimension*, Attribute*, Codelist*, Time*, Category*, Concept*, Agency*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.AndType.DataSet">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, KeyFamily*, Dimension*, Attribute*, Codelist*, Time*, Category*, Concept*, Agency*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.AndType.KeyFamily">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, KeyFamily*, Dimension*, Attribute*, Codelist*, Time*, Category*, Concept*, Agency*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.AndType.Dimension">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, KeyFamily*, Dimension*, Attribute*, Codelist*, Time*, Category*, Concept*, Agency*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.AndType.Attribute">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, KeyFamily*, Dimension*, Attribute*, Codelist*, Time*, Category*, Concept*, Agency*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.AndType.Codelist">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, KeyFamily*, Dimension*, Attribute*, Codelist*, Time*, Category*, Concept*, Agency*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.AndType.Time">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, KeyFamily*, Dimension*, Attribute*, Codelist*, Time*, Category*, Concept*, Agency*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.AndType.Category">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, KeyFamily*, Dimension*, Attribute*, Codelist*, Time*, Category*, Concept*, Agency*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.AndType.Concept">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, KeyFamily*, Dimension*, Attribute*, Codelist*, Time*, Category*, Concept*, Agency*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.AndType.Agency">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, KeyFamily*, Dimension*, Attribute*, Codelist*, Time*, Category*, Concept*, Agency*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.AndType.Or">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, KeyFamily*, Dimension*, Attribute*, Codelist*, Time*, Category*, Concept*, Agency*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.AndType.And">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, KeyFamily*, Dimension*, Attribute*, Codelist*, Time*, Category*, Concept*, Agency*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.OrType">
            <summary>
            <para>
            The Or element's immediate children represent clauses in the query any one of which is sufficient to satisfy the query. If these children are A,  B, and C, then any result which meets condition A, or condition B, or condition C is a match for that query.
            </para>
            <para>
            Regular expression: (DataSet*, KeyFamily*, Dimension*, Attribute*, Codelist*, Time*, Category*, Concept*, Agency*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.OrType.#ctor">
            <summary>
            <para>
            The Or element's immediate children represent clauses in the query any one of which is sufficient to satisfy the query. If these children are A,  B, and C, then any result which meets condition A, or condition B, or condition C is a match for that query.
            </para>
            <para>
            Regular expression: (DataSet*, KeyFamily*, Dimension*, Attribute*, Codelist*, Time*, Category*, Concept*, Agency*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.OrType.DataSet">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, KeyFamily*, Dimension*, Attribute*, Codelist*, Time*, Category*, Concept*, Agency*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.OrType.KeyFamily">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, KeyFamily*, Dimension*, Attribute*, Codelist*, Time*, Category*, Concept*, Agency*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.OrType.Dimension">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, KeyFamily*, Dimension*, Attribute*, Codelist*, Time*, Category*, Concept*, Agency*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.OrType.Attribute">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, KeyFamily*, Dimension*, Attribute*, Codelist*, Time*, Category*, Concept*, Agency*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.OrType.Codelist">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, KeyFamily*, Dimension*, Attribute*, Codelist*, Time*, Category*, Concept*, Agency*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.OrType.Time">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, KeyFamily*, Dimension*, Attribute*, Codelist*, Time*, Category*, Concept*, Agency*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.OrType.Category">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, KeyFamily*, Dimension*, Attribute*, Codelist*, Time*, Category*, Concept*, Agency*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.OrType.Concept">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, KeyFamily*, Dimension*, Attribute*, Codelist*, Time*, Category*, Concept*, Agency*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.OrType.Agency">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, KeyFamily*, Dimension*, Attribute*, Codelist*, Time*, Category*, Concept*, Agency*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.OrType.Or">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, KeyFamily*, Dimension*, Attribute*, Codelist*, Time*, Category*, Concept*, Agency*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.OrType.And">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, KeyFamily*, Dimension*, Attribute*, Codelist*, Time*, Category*, Concept*, Agency*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.DimensionType">
            <summary>
            <para>
            Dimension elements contain the  (single) value being searched on within the key of data set. The name attribute holds the agency-qualified ID of the dimension. If the content is empty, then the query is for any dimension with the given name. If the name attribute is not supplied, then the query is for the given key value within any dimension.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.DimensionType.#ctor">
            <summary>
            <para>
            Dimension elements contain the  (single) value being searched on within the key of data set. The name attribute holds the agency-qualified ID of the dimension. If the content is empty, then the query is for any dimension with the given name. If the name attribute is not supplied, then the query is for the given key value within any dimension.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.DimensionType.name">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.AttributeType">
            <summary>
            <para>
            Attribute elements contain the (single) value of an attribute being queried for. The name attribute contains the agency-qualified name of the attribute. The attachmentLevel attribute specifies the attachment level of the attribute. If the content of Attribute is empty, then the search is for the specified attribute (and attachment level). If the name attribute is not specified, then the search is on any attribute. If the attachmentLevel attribute is not specified, then the query is for an attribute at any attachment level, as the value defaults to "Any".
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.AttributeType.#ctor">
            <summary>
            <para>
            Attribute elements contain the (single) value of an attribute being queried for. The name attribute contains the agency-qualified name of the attribute. The attachmentLevel attribute specifies the attachment level of the attribute. If the content of Attribute is empty, then the search is for the specified attribute (and attachment level). If the name attribute is not specified, then the search is on any attribute. If the attachmentLevel attribute is not specified, then the query is for an attribute at any attachment level, as the value defaults to "Any".
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.AttributeType.name">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.AttributeType.attachmentLevel">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.AttachmentLevelType">
            <summary>
            <para>
            This type supplies an enumeration of attachment levels corresponding to those in the SDMX Information Model, plus a value of "Any" where the search is wildcarded.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.CodelistType">
            <summary>
            <para>
            The Codelist element allows queries to specify a (single) value found within a codelist as the element content, and the agency-qualified name of the codelist being queried for in the name attribute. If no content is supplied, then the query is for the named codelist. If the name attribute is left empty, then the value is searched for in any codelist.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.CodelistType.#ctor">
            <summary>
            <para>
            The Codelist element allows queries to specify a (single) value found within a codelist as the element content, and the agency-qualified name of the codelist being queried for in the name attribute. If no content is supplied, then the query is for the named codelist. If the name attribute is left empty, then the value is searched for in any codelist.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.CodelistType.name">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.CategoryType">
            <summary>
            <para>
            The Category element allows for a search to be made on the values within a specific category, which is specified (in agency-qualified form) with the name attribute. If there is no element content, then the search is for the named Category; if the name is not supplied, then the category value supplied as content should be sought-for in all available categories.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.CategoryType.#ctor">
            <summary>
            <para>
            The Category element allows for a search to be made on the values within a specific category, which is specified (in agency-qualified form) with the name attribute. If there is no element content, then the search is for the named Category; if the name is not supplied, then the category value supplied as content should be sought-for in all available categories.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.CategoryType.name">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.CategoryType.agency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.KeyFamilyWhereType">
            <summary>
            <para>
            The KeyFamilyWhere element representes a query for a key family or key families. It contains all of the clauses in that query, represented by its child elements.
            </para>
            <para>
            Regular expression: (KeyFamily | Dimension | Attribute | Codelist | Category | Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.KeyFamilyWhereType.#ctor">
            <summary>
            <para>
            The KeyFamilyWhere element representes a query for a key family or key families. It contains all of the clauses in that query, represented by its child elements.
            </para>
            <para>
            Regular expression: (KeyFamily | Dimension | Attribute | Codelist | Category | Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.KeyFamilyWhereType.KeyFamily">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | Dimension | Attribute | Codelist | Category | Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.KeyFamilyWhereType.Dimension">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | Dimension | Attribute | Codelist | Category | Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.KeyFamilyWhereType.Attribute">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | Dimension | Attribute | Codelist | Category | Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.KeyFamilyWhereType.Codelist">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | Dimension | Attribute | Codelist | Category | Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.KeyFamilyWhereType.Category">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | Dimension | Attribute | Codelist | Category | Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.KeyFamilyWhereType.Concept">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | Dimension | Attribute | Codelist | Category | Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.KeyFamilyWhereType.Agency">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | Dimension | Attribute | Codelist | Category | Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.KeyFamilyWhereType.Or">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | Dimension | Attribute | Codelist | Category | Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.KeyFamilyWhereType.And">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | Dimension | Attribute | Codelist | Category | Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.CodelistWhereType">
            <summary>
            <para>
            The CodelistWhere element representes a query for a codelist or codelists. It contains all of the clauses in that query, represented by its child elements.
            </para>
            <para>
            Regular expression: (Codelist | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.CodelistWhereType.#ctor">
            <summary>
            <para>
            The CodelistWhere element representes a query for a codelist or codelists. It contains all of the clauses in that query, represented by its child elements.
            </para>
            <para>
            Regular expression: (Codelist | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.CodelistWhereType.Codelist">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (Codelist | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.CodelistWhereType.Agency">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (Codelist | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.CodelistWhereType.Or">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (Codelist | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.CodelistWhereType.And">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (Codelist | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.ConceptWhereType">
            <summary>
            <para>
            The ConceptWhere element representes a query for a concept or concepts. It contains all of the clauses in that query, represented by its child elements.
            </para>
            <para>
            Regular expression: (Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.ConceptWhereType.#ctor">
            <summary>
            <para>
            The ConceptWhere element representes a query for a concept or concepts. It contains all of the clauses in that query, represented by its child elements.
            </para>
            <para>
            Regular expression: (Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.ConceptWhereType.Concept">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.ConceptWhereType.Agency">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.ConceptWhereType.Or">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.ConceptWhereType.And">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (Concept | Agency | Or | And)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.AgencyWhereType">
            <summary>
            <para>
            The AgencyWhere element representes a query for details for an Agency. It contains all of the clauses in that query, represented by its child elements.
            </para>
            <para>
            Regular expression: (DataSet* | KeyFamily* | Codelist* | Category* | Concept* | Agency* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.AgencyWhereType.#ctor">
            <summary>
            <para>
            The AgencyWhere element representes a query for details for an Agency. It contains all of the clauses in that query, represented by its child elements.
            </para>
            <para>
            Regular expression: (DataSet* | KeyFamily* | Codelist* | Category* | Concept* | Agency* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.AgencyWhereType.DataSet">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Regular expression: (DataSet* | KeyFamily* | Codelist* | Category* | Concept* | Agency* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.AgencyWhereType.KeyFamily">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Regular expression: (DataSet* | KeyFamily* | Codelist* | Category* | Concept* | Agency* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.AgencyWhereType.Codelist">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Regular expression: (DataSet* | KeyFamily* | Codelist* | Category* | Concept* | Agency* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.AgencyWhereType.Category">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Regular expression: (DataSet* | KeyFamily* | Codelist* | Category* | Concept* | Agency* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.AgencyWhereType.Concept">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Regular expression: (DataSet* | KeyFamily* | Codelist* | Category* | Concept* | Agency* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.AgencyWhereType.Agency">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Regular expression: (DataSet* | KeyFamily* | Codelist* | Category* | Concept* | Agency* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.AgencyWhereType.Or">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Regular expression: (DataSet* | KeyFamily* | Codelist* | Category* | Concept* | Agency* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.AgencyWhereType.And">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Regular expression: (DataSet* | KeyFamily* | Codelist* | Category* | Concept* | Agency* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.TimeType">
            <summary>
            <para>
            TimeType contains the time point or period for which results should be supplied. When StartTime and EndTime are used, these must be understood as inclusive.
            </para>
            <para>
            Regular expression: ((StartTime, EndTime?)|Time)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.TimeType.#ctor">
            <summary>
            <para>
            TimeType contains the time point or period for which results should be supplied. When StartTime and EndTime are used, these must be understood as inclusive.
            </para>
            <para>
            Regular expression: ((StartTime, EndTime?)|Time)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.TimeType.StartTime">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: ((StartTime, EndTime?)|Time)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.TimeType.EndTime">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: ((StartTime, EndTime?)|Time)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.TimeType.Time">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: ((StartTime, EndTime?)|Time)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.Query">
            <summary>
            <para>
            The Query element is a top-level element for this namespace, which is referenced by the SDMX message envelope, or could be put inside another envelope, such as SOAP. It contains a query. The defaultLimit attribute is the suggested maximum response size in kilobytes.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.Query.#ctor">
            <summary>
            <para>
            The Query element is a top-level element for this namespace, which is referenced by the SDMX message envelope, or could be put inside another envelope, such as SOAP. It contains a query. The defaultLimit attribute is the suggested maximum response size in kilobytes.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.Query.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.QueryType)">
            <summary>
            <para>
            The Query element is a top-level element for this namespace, which is referenced by the SDMX message envelope, or could be put inside another envelope, such as SOAP. It contains a query. The defaultLimit attribute is the suggested maximum response size in kilobytes.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.Query.DataWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, KeyFamilyWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.Query.KeyFamilyWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, KeyFamilyWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.Query.CodelistWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, KeyFamilyWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.Query.ConceptWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, KeyFamilyWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.Query.AgencyWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, KeyFamilyWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V10.query.Query.defaultLimit">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AssignmentStatusTypeConstants">
            <summary>
            The assignment status type constants.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AssignmentStatusTypeConstants.Conditional">
            <summary>
            The conditional.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AssignmentStatusTypeConstants.Mandatory">
            <summary>
            The mandatory.
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.TextTypeConstants">
            <summary>
            <para>
            TextTypeType provides an enumerated list of the types of characters allowed in a TextFormat field.
            </para>
            This class contains TextTypeType constants to be used by other software since the auto-generated code doesn't.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.TextTypeConstants.Alpha">
            <summary>
            The alpha.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.TextTypeConstants.AlphaFixed">
            <summary>
            The alpha fixed.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.TextTypeConstants.AlphaNum">
            <summary>
            The alpha numeric.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.TextTypeConstants.AlphaNumFixed">
            <summary>
            The alpha numeric fixed.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.TextTypeConstants.Num">
            <summary>
            The numeric.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.TextTypeConstants.NumFixed">
            <summary>
            The numeric fixed.
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AttachmentLevelTypeConstants">
            <summary>
            The attachment level type constants.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AttachmentLevelTypeConstants.DataSet">
            <summary>
            The data set.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AttachmentLevelTypeConstants.Group">
            <summary>
            The group.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AttachmentLevelTypeConstants.Observation">
            <summary>
            The observation.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V10.structure.AttachmentLevelTypeConstants.Series">
            <summary>
            The series.
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.MessageFactory">
            <summary>
            Load SDMX Messages into memory objects
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V10.MessageFactory.Load``2(System.Xml.XmlReader)">
            <summary>
            Load SDMX-ML v2.1 from <paramref name="reader"/> and return it in <typeparamref name="TW"/>
            </summary>
            <typeparam name="TW">
            The element CLR type
            </typeparam>
            <typeparam name="T">
            The element XSD type CLR type
            </typeparam>
            <param name="reader">
            The input <see cref="T:System.Xml.XmlReader"/>
            </param>
            <returns>
            The SDMX-ML v2.1 from <paramref name="reader"/> as <typeparamref name="TW"/>
            </returns>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V10.common.ActionTypeConstants">
            <summary>
                The action type constants. This class contains ActionType constants to be used by other software since the auto-generated code doesn't.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V10.common.ActionTypeConstants.Delete">
            <summary>
            The delete.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V10.common.ActionTypeConstants.Update">
            <summary>
            The update.
            </summary>
        </member>
    </members>
</doc>
